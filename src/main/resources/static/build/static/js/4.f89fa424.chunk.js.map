{"version":3,"sources":["img/A.png","user/google-logo.png","model/ModelElement.js","form/FormFieldType.js","form/FormFieldData.js","client/Service.js","model/Entity.js","state/State.js","client/RemoteService.js","user/Role.js","user/User.js","user/AuthoritiesService.js","form/field/EnumSelect.js","form/field/IntegerField.js","model/rule/ActionTime.js","form/field/ActionTimeField.js","form/field/BlueprintSelect.js","model/rule/DiceRoll.js","model/rule/Modifier.js","model/rule/Determinant.js","form/field/DiceRollField.js","form/field/ModifierField.js","form/field/DeterminantField.js","form/field/EntitySelect.js","form/field/PriceField.js","form/field/RaceDeterminantsField.js","model/knowledge/Skill.js","model/professions/ProfessionClass.js","model/rule/DeterminantContainer.js","model/professions/Profession.js","model/creature/CreatureDeterminants.js","model/crafting/Availability.js","model/crafting/ArmorPattern.js","model/world/Price.js","model/crafting/Resource.js","model/crafting/Placement.js","model/crafting/ArmorBlueprint.js","model/crafting/Armor.js","model/crafting/Item.js","model/crafting/Inventory.js","model/crafting/MeleeWeaponBlueprint.js","model/crafting/MeleeWeapon.js","model/knowledge/SpellSchool.js","model/knowledge/Spell.js","model/knowledge/SpellSchoolLevel.js","model/world/Nation.js","model/world/Language.js","model/world/Currency.js","model/world/Money.js","model/world/Race.js","model/world/Religion.js","model/creature/AnimalKind.js","model/creature/Animal.js","model/creature/Character.js","model/creature/EyeColor.js","model/creature/HairColor.js","model/crafting/RangedWeaponBlueprint.js","model/crafting/Ammunition.js","model/crafting/RangedWeapon.js","model/creature/PersonalRangedWeapon.js","model/creature/PhysicalFeature.js","model/creature/Person.js","client/DeterminantService.js","client/GearService.js","model/realm/Realm.js","model/knowledge/CurrentMagicKnowledge.js","util/Collections.js","client/MagicService.js","model/creature/Gender.js","service/ItemService.js","service/MoneyService.js","service/ProfessionService.js","form/sheet/field/AnimalElement.js","model/creature/CreatureArmorValues.js","form/sheet/field/ArmorCalculationsComponent.js","form/sheet/field/ArmorElement.js","form/sheet/field/SimpleTextField.js","form/sheet/field/ItemElement.js","form/sheet/field/MoneyElement.js","form/sheet/field/ProfessionExtensionField.js","form/sheet/field/PersonalDeterminantsField.js","form/sheet/field/SimpleEntitySelect.js","form/sheet/field/RangedWeaponElement.js","form/sheet/field/SelectableList.js","form/sheet/field/SimpleEnumSelect.js","form/sheet/field/SimpleList.js","form/sheet/field/SpeedComponent.js","form/sheet/field/SpellElement.js","form/sheet/field/SpellSchoolList.js","form/sheet/field/WeaponElement.js","form/sheet/CharacterSheetForm.js","form/sheet/field/ProfessionExtensionView.js","form/sheet/field/PersonalDeterminantsView.js","form/sheet/field/RangedWeaponElementView.js","form/sheet/field/SimpleListView.js","form/sheet/CharacterSheetView.js","form/FormFieldGenerator.js","form/EntityEditor.js","model/world/Place.js","img/Picture.js","img/PictureUploadForm.js","client/PictureService.js","model/realm/Scenario.js","scenario/ScenarioView.js","client/ScenarioService.js","content/Table.js","content/ContentPane.js","model/crafting/Jewelry.js","menu/MenuComponent.js","menu/ToolsMenu.js","menu/TopMenu.js","client/RealmDataService.js","user/LoginComponent.js","user/OAuth2RedirectComponent.js","user/PasswordChangeComponent.js","App.js","state/DataLoader.js"],"names":["module","exports","ModelElement","updateWith","entity","Object","assign","this","updateProp","prop","updateNumProp","updateEntityProp","supplier","updateEntityList","map","val","newVal","FormFieldType","FormFieldData","Service","constructor","entityName","loadData","State","fetching","fetch","mode","headers","data","currentUser","token","then","handleErrors","response","json","suppliers","update","fetchingFinished","save","onSuccess","method","body","JSON","stringify","status","message","value","window","confirm","Array","from","Set","errors","e","field","rejectedValue","join","updateUser","delete","Entity","CreateColumn","name","type","options","filter","sort","column","customBodyRender","toString","CreateFormField","suggestions","toView","toModel","formField","RegisterEntity","entityClass","columns","fields","services","formFields","showTable","showForm","afterForm","username","password","onUpdate","user","showScenario","updateScenario","scenario","updateEntity","updates","add","RemoteService","handleRawResponse","onResponse","text","console","warn","handleResponse","requestFor","uri","jsonBody","postRequestWithoutResponse","requestForPath","rawGetRequestFor","rawPostRequest","Role","role","User","userService","roleService","AuthoritiesService","refreshAuthorities","authorities","updateAdminAuthoritiesIfNeeded","find","authority","toLowerCase","endsWith","updatePassword","newPassword","oneTimePassword","hasAuthority","EnumSelect","Component","render","props","t","label","onChange","selected","multi","editable","Grid","container","spacing","alignItems","item","FormLabel","textFieldProps","InputLabelProps","shrink","styles","style","components","makeAnimated","getOptionLabel","undefined","getOptionValue","isSearchable","isClearable","isMulti","isDisabled","control","provided","state","width","marginLeft","withTranslation","IntegerField","updateInt","event","number","parseInt","target","other","TextField","ActionType","ACTION","ROUND","TURN","allOf","ActionTime","actionType","amount","ActionTimeField","key","InputProps","readOnly","BlueprintSelect","desc","suggestedPrice","suggestedWeight","xs","option","id","filterOption","input","startsWith","Dice","K2","K3","K4","K6","K8","K10","K12","K20","K100","DiceRoll","rolls","dice","ModifierType","REGULAR","PROFESSION","EXPERIENCE","DICE","Modifier","super","roll","Determinant","modifiers","getExperienceExtensions","mod","calculateExperienceValue","reduce","a","b","calculateFinalValue","DeterminantType","SPEED","BATTLE","SHOOTING","STRENGTH","DURABILITY","HEALTH","INITIATIVE","ATTACK","DEXTERITY","LEADER_SKILLS","INTELLIGENCE","CONTROL","WILL","CHARISMA","PARRY","OPPONENT_PARRY","personal","DiceRollField","updateDiceRoll","currentDiceRollEdit","ModifierField","currentModifierEdit","onAddDiceRoll","push","types","dices","diceRoll","Button","onClick","DeterminantField","deleteItem","splice","indexOf","currentDeterminantEdit","determinant","addDeterminant","addModifierToDeterminant","updateModifier","modifier","newModifier","modifierTypes","currentModifier","Paper","IconButton","Remove","EntitySelect","newValue","PriceField","updatePrice","part","price","marginRight","gold","silver","lead","determinantsNames","RaceDeterminantsField","regenerateDeterminants","determinants","length","forEach","updateDiceType","updateDiceRolls","updateBasicModifier","Skill","ProfessionClass","skills","DeterminantContainer","Profession","nextProfessions","CreatureDeterminants","speed","battle","shooting","strength","durability","health","attack","initiative","dexterity","leaderSkills","intelligence","will","charisma","newDeterminant","replaceDeterminant","updateDeterminantValue","findDeterminant","toReplace","determinantIndex","Availability","ArmorPattern","availability","Price","Resource","Placement","BODY","HEAD","TORSO","HAND","LEG","BELT","NECK","FINGER","SHIELD","BOTH_HANDS","armor","weapon","jewelry","ArmorBlueprint","placement","Armor","Item","Inventory","MeleeWeaponBlueprint","damage","prepareTime","MeleeWeapon","getFinalValueForType","determinantType","DeterminantService","sumValueByTypeIn","SpellSchool","levels","Spell","durationTime","ingredients","SpellSchoolLevel","level","Nation","names","namesFromModel","namesAsString","replace","split","Language","Currency","Money","currency","Race","Religion","nations","AnimalKind","Animal","Character","EyeColor","HairColor","RangedWeaponBlueprint","minimumRange","mediumRange","maximumRange","Ammunition","weaponTypes","RangedWeapon","PersonalRangedWeapon","ammunitionAmount","PhysicalFeature","Person","physicalFeatures","professions","inventory","meleeWeapons","rangedWeapons","spellSchools","spells","animals","money","languages","addExperienceExtension","onAdded","afterResponse","removeExperienceExtension","onRemoved","afterUpdate","findModifierByType","det","profession","creatureDeterminants","setProfessionExtensions","professionExtensions","findDeterminantIn","removeModifiersByType","newMod","rollForRace","race","creature","assert","currentDeterminant","resolved","GearService","calculateMeleeDamage","weaponId","calculateArmorValue","armorId","calculatePersonArmorValue","armorIds","rangedWeapon","pWeps","newPWep","Realm","persons","CurrentMagicKnowledge","currentSpellSchools","currentSkills","Collections","except","element","to","findIn","array","toMatchPath","elementsPath","toMatch","removeFrom","MagicService","getAvailableSpellSchools","currentMagicKnowledge","spell","spellSchool","Gender","MALE","FEMALE","ItemService","incomingInventory","weight","MoneyService","newMoney","ProfessionService","currentClass","professionClass","prof","newDeterminants","updateProfessionExtensions","currentProfession","AnimalElement","animal","onContextMenu","preventDefault","CreatureArmorValues","armorValues","Map","set","getArmorValue","get","values","defaultComponentStyle","position","textAlign","defaultStyle","shield","left","top","head","rightHand","leftHand","torso","rightLeg","leftLeg","gearService","ArmorCalculationsComponent","updateArmorValues","armorCalcs","setState","classes","className","withStyles","containerStyle","display","flexDirection","ArmorElement","armorValue","updateArmor","disabled","content","SimpleTextField","PureComponent","parse","variant","change","TextFieldType","INT","FLOAT","parseFloat","customStyle","multiline","backgroundColor","border","fontFamily","fontSize","outline","TEXT","ItemElement","updateAmount","allInventory","minWidth","calculateWeight","MoneyElement","amountType","determinantService","ExtMark","margin","ProfessionExtensionField","addExtension","ext","removeExtension","customClassName","professionValue","extended","professionModifier","fieldContainer","extension","checkboxContainer","right","flexFlow","flexWrap","maxWidth","zIndex","PersonalDeterminantFieldStyle","row1","paddingTop","maxHeight","minHeight","row2","row3","firstInRow","otherInRow","otherInRow2","lastRowChild","PersonalDeterminantsField","updateDeterminant","updateDeterminantExperience","simpleStyle","dropdownIndicator","color","indicatorSeparator","simpleStyleMulti","clearIndicator","multiValueRemove","singleValue","multiValueLabel","background","multiValue","height","SimpleEntitySelect","propName","Tooltip","title","description","placeholder","RangedWeaponElement","pWep","weaponType","ammunition","newAmmunition","currentAmount","ammunitionAmountField","SelectableList","listStyle","onGearAdd","children","selectComponent","itemsList","overflow","itemContainer","SimpleEnumSelect","getData","source","onSelected","SimpleList","anchorEl","currentElement","handleClick","currentTarget","onRemove","handleClose","index","Menu","open","onClose","MenuItem","SpeedComponent","calc","tempo","calculateSpeed","firstRow","cell","nextRow","paddingLeft","alignSelf","SpellElement","ingredientsText","manaCost","range","effect","SpellSchoolList","availableSpellSchools","onSpellSchoolAdd","magicSchool","currentLevelIndex","newSpellSchool","onSpellSchoolRemove","newSpellSchools","refreshRelevantMagicSchools","realm","currentRealm","magicService","setSpellSchools","assembleSpellSchools","clear","spellSchoolLevel","keys","spellSchoolLevelText","weaponService","WeaponElement","damageText","updateDamageValue","onRightClick","currentStyle","itemName","itemVariable","CharacterSheetForm","generateStatsAction","showMenu","root","currentRealmData","races","genderSelect","getProfessions","updateProfession","removeProfessionFromHistory","addPersonalRangedWeapon","skill","getRelevantSpells","addItemToInventory","eq","inventoryWeight","currencies","addMoney","lang","marginTop","religions","elementName","FrontCharacterSheet","backgroundSize","ProfessionExtensionView","SimpleListView","CharacterSheetView","listToDivs","gender","personality","age","hairColor","eyeColor","PersonalDeterminantsView","RangedWeaponElementView","fatePoints","mana","currentMana","sanityPoints","nation","parents","family","socialLevel","religion","experience","totalExperience","basicStyle","fieldData","updateProperty","EntityEditor","saveForm","getFormFields","component","updateForm","direction","Save","Cancel","KeyboardReturn","theme","Place","Picture","pictureService","uploadPicture","picture","updateMetadata","PictureUploadForm","upload","files","selectedFile","formData","FormData","append","setName","setPlace","place","placeId","src","alt","acceptedFiles","Scenario","places","ScenarioView","currentScenario","images","imgStyle","viewerIsOpen","currentImage","fetchImages","onData","ok","alert","fetchPicturesForScenario","num","person","url","elevation","Modal","currentIndex","views","Table","filterType","selectableRows","selectableRowsOnClick","disableToolbarSelect","selectableRowsHeader","customToolbarSelect","selectedRows","displayData","setSelectedRows","dataIndex","Fragment","Edit","Delete","OpenInNew","translateColumns","ContentPane","Jewelry","MenuComponent","handleItemClick","entities","ToolsMenu","showPictureForm","showScenarioView","showUsersTable","isAdmin","aria-label","aria-owns","aria-haspopup","realmDataService","getRealmData","TopMenu","i18n","menuItems","AppBar","Toolbar","languageIcon","size","CircularProgress","realmSelect","changeLanguage","code","loginFieldData","passwordFieldData","LoginComponent","login","res","authData","Typography","googleLogo","href","OAuth2RedirectComponent","RegExp","exec","location","search","authoritiesService","PasswordChangeComponent","repeat","savePassword","createMuiTheme","palette","primary","grey","secondary","orange","App","context","initialized","serviceName","refreshData","exact","path"],"mappings":"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","file":"static/js/4.f89fa424.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/A.8ca41e5c.png\";","module.exports = __webpack_public_path__ + \"static/media/google-logo.36158af3.png\";","export default class ModelElement {\r\n    updateWith(entity: any): ModelElement {\r\n        Object.assign(this, entity);\r\n        return this;\r\n    }\r\n\r\n    updateProp(entity: any, prop: string) {\r\n        if (entity[prop] || entity[prop] === '') {\r\n            this[prop] = entity[prop];\r\n        }\r\n    }\r\n\r\n    updateNumProp(entity: any, prop: string) {\r\n        if (entity[prop] || entity[prop] === 0 || entity[prop] === '') {\r\n            this[prop] = entity[prop];\r\n        }\r\n    }\r\n\r\n    updateEntityProp(entity: any, prop: string, supplier: () => mixed) {\r\n        if (entity[prop]) {\r\n            this[prop] = supplier();\r\n            this[prop].updateWith(entity[prop]);\r\n        }\r\n    }\r\n\r\n    updateEntityList(entity: any, prop: string, supplier: () => mixed) {\r\n        if (entity[prop]) {\r\n            this[prop] = entity[prop]\r\n                .map(val => {\r\n                    const newVal = supplier();\r\n                    newVal.updateWith(val);\r\n                    return newVal;\r\n                });\r\n        }\r\n    }\r\n}","export const FormFieldType = {\r\n    TEXT: 'text',\r\n    PASSWORD: 'password',\r\n    TEXT_AREA: 'text_area',\r\n    BOOLEAN: 'boolean',\r\n    INTEGER: 'integer',\r\n    FLOAT: 'float',\r\n    ENUM_SELECT: 'enum_select',\r\n    ENUM_COMBOBOX: 'enum_combobox',\r\n    ENTITY_SELECT: 'entity_select',\r\n    ENTITY_COMBOBOX: 'entity_combobox',\r\n    PRICE: 'price',\r\n    ACTION_TIME: 'action_time',\r\n    DETERMINANT: 'determinant',\r\n    MODIFIER: 'modifier',\r\n    BLUEPRINT_SELECT: 'blueprint_select',\r\n    RACE_DETERMINANTS: 'race_determinants',\r\n    CHARACTER_SHEET: 'character_sheet',\r\n};\r\n","import {func, object} from \"prop-types\";\r\n\r\nclass FormFieldData {\r\n    type: string;\r\n    name: string;\r\n    suggestions: object[];\r\n    toView: func;\r\n    toModel: func;\r\n}\r\nexport default FormFieldData;","import {State} from \"../state/State\";\r\nimport {object} from \"prop-types\";\r\n\r\nexport default class Service {\r\n    entityName: string;\r\n\r\n    constructor(entityName: string) {\r\n        this.entityName = entityName;\r\n    }\r\n\r\n    loadData = () => {\r\n        State.fetching(this.entityName);\r\n        fetch(this.entityName, {\r\n            mode: 'cors',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': 'Bearer ' + State.data.currentUser.token\r\n            }\r\n        })\r\n            .then(this.handleErrors)\r\n            .then(response => response.json())\r\n            .then(data => data.map(entity => State.suppliers[this.entityName]().updateWith(entity)))\r\n            .then(data => {\r\n                State.update({[this.entityName]: data});\r\n                State.fetchingFinished(this.entityName);\r\n            })\r\n    };\r\n    save = (entity: object, onSuccess: VoidFunction) => {\r\n        fetch(this.entityName, {\r\n            method: 'post',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + State.data.currentUser.token\r\n            },\r\n            body: JSON.stringify(entity)\r\n        })\r\n            .then(this.handleErrors)\r\n            .then(this.loadData)\r\n            .then(onSuccess);\r\n    };\r\n    delete(entity: object) {\r\n        fetch(this.entityName, {\r\n            method: 'delete',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + State.data.currentUser.token\r\n            },\r\n            body: JSON.stringify(entity)\r\n        })\r\n            .then(this.handleErrors)\r\n            .then(() => this.loadData())\r\n    }\r\n\r\n    handleErrors = (response) => {\r\n        if (response.status !== 200) {\r\n            let message = response.json();\r\n\r\n            if (response.status === 400) {\r\n                message.then(value => {\r\n                    window.confirm(Array.from(new Set(value.errors\r\n                        .map(e => 'cannot set field ' + e.field + ' with ' + e.rejectedValue + ', ' + e.message)))\r\n                        .join('\\n'));\r\n                });\r\n            } else if (response.status === 409) {\r\n                message.then(value => {\r\n                    window.confirm(value.errors[0].message);\r\n                });\r\n            } else if (response.status === 403 || response.status === 401) {\r\n                State.updateUser({token: null})\r\n            }\r\n            throw response;\r\n        }\r\n        return response;\r\n    };\r\n}","import ModelElement from \"./ModelElement\";\r\nimport {FormFieldType} from \"../form/FormFieldType\";\r\nimport FormFieldData from \"../form/FormFieldData\";\r\nimport {State} from \"../state/State\";\r\nimport Service from \"../client/Service\";\r\n\r\nclass Entity extends ModelElement {\r\n    id: number;\r\n    version: number;\r\n    uuid: string;\r\n}\r\n\r\nexport default Entity;\r\n\r\nexport const CreateColumn = (name: string, type: string) => {\r\n    const options = {filter: false, sort: false};\r\n    const column = {name: name, options: options};\r\n\r\n    switch (type) {\r\n        case FormFieldType.TEXT:\r\n        case FormFieldType.FLOAT:\r\n        case FormFieldType.INTEGER:\r\n        case FormFieldType.BOOLEAN:\r\n            options.filter = true;\r\n            options.sort = true;\r\n            break;\r\n        case FormFieldType.PRICE:\r\n        case FormFieldType.MODIFIER:\r\n        case FormFieldType.ACTION_TIME:\r\n            options.filter = false;\r\n            options.sort = true;\r\n            options.customBodyRender = val => val ? val.toString() : '';\r\n            break;\r\n        case FormFieldType.ENTITY_SELECT:\r\n        case FormFieldType.ENTITY_COMBOBOX:\r\n            options.filter = true;\r\n            options.sort = true;\r\n            options.customBodyRender = val => val ? val.name : '';\r\n            break;\r\n        default:\r\n            options.filter = false;\r\n            options.sort = false;\r\n    }\r\n\r\n    return column;\r\n};\r\n\r\nexport const CreateFormField = (name: string, type: string, suggestions: string, toView: string => string, toModel: string => string) => {\r\n    const formField = new FormFieldData();\r\n    formField.name = name;\r\n    formField.type = type;\r\n    formField.suggestions = suggestions;\r\n    formField.toView = toView;\r\n    formField.toModel = toModel;\r\n    return formField;\r\n};\r\n\r\nexport const RegisterEntity = (entityClass: any, columns: FormFieldData[], fields: FormFieldData[]) => {\r\n    State.suppliers[entityClass.entityName] = () => new entityClass();\r\n    State.services[entityClass.entityName] = new Service(entityClass.entityName);\r\n    State.columns[entityClass.entityName] = columns;\r\n    State.formFields[entityClass.entityName] = fields;\r\n};\r\n","import Entity from \"../model/Entity\";\r\n\r\nexport const State = {\r\n    data: {\r\n        showTable: null,\r\n        showForm: null,\r\n        afterForm: null,\r\n        fetching: new Set(),\r\n        currentUser: {\r\n            username: null,\r\n            password: null,\r\n            token: null\r\n        }\r\n    },\r\n    services: {},\r\n    formFields: {},\r\n    columns: {},\r\n    suppliers: {},\r\n    onUpdate: data => {},\r\n    update(data: any) {\r\n        this.data = {...this.data, ...data};\r\n        this.onUpdate(this.data);\r\n    },\r\n    updateUser(user: any) {\r\n        this.data.currentUser = {...this.data.currentUser, ...user};\r\n        this.onUpdate(this.data);\r\n    },\r\n    showTable(name: string) {\r\n        this.update({entity: null, showForm: null, showTable: name, showScenario: false});\r\n    },\r\n    showForm(name: string, entity: Entity) {\r\n        this.update({entity: entity, showForm: name, showTable: null, showScenario: false})\r\n    },\r\n    updateScenario(scenario: Entity) {\r\n        this.update({entity: scenario, showForm: null, showTable: null, showScenario: true})\r\n    },\r\n    updateEntity(updates: any) {\r\n        this.data.entity.updateWith(updates);\r\n        this.update({entity: this.data.entity});\r\n    },\r\n    fetching(entityName: string) {\r\n        this.data.fetching.add(entityName);\r\n        this.update({fetching: this.data.fetching});\r\n    },\r\n    fetchingFinished(entityName: string) {\r\n        this.data.fetching.delete(entityName);\r\n        this.update({fetching: this.data.fetching});\r\n    }\r\n};\r\n","import {State} from \"../state/State\";\r\n\r\nexport default class RemoteService {\r\n    requestFor(data: object, uri: string, onResponse: VoidFunction) {\r\n        const jsonBody = JSON.stringify(data);\r\n        fetch(uri, {\r\n            method: 'post',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + State.data.currentUser.token\r\n            },\r\n            body: jsonBody\r\n        }).then(this.handleResponse(onResponse));\r\n    }\r\n\r\n    postRequestWithoutResponse(data: object, uri: string, onResponse: VoidFunction) {\r\n        const jsonBody = JSON.stringify(data);\r\n        fetch(uri, {\r\n            method: 'post',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + State.data.currentUser.token\r\n            },\r\n            body: jsonBody\r\n        }).then(this.handleRawResponse(onResponse));\r\n    }\r\n\r\n    requestForPath(uri: string, onResponse: VoidFunction) {\r\n        fetch(uri, {\r\n            method: 'get',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + State.data.currentUser.token\r\n            },\r\n        }).then(this.handleResponse(onResponse));\r\n    }\r\n\r\n    rawGetRequestFor(uri: string, onResponse: VoidFunction) {\r\n        fetch(uri, {\r\n            method: 'get',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + State.data.currentUser.token\r\n            },\r\n        }).then(this.handleRawResponse(onResponse))\r\n    }\r\n\r\n    rawPostRequest(uri: string, data: object, onResponse: VoidFunction) {\r\n        fetch(uri, {\r\n            method: 'post',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + State.data.currentUser.token\r\n            },\r\n            body: data,\r\n        }).then(this.handleRawResponse(onResponse))\r\n    }\r\n\r\n    handleRawResponse = onResponse => response => {\r\n        if (response.status === 200) {\r\n            response.text().then(onResponse);\r\n        } else if (response.status === 403 || response.status === 401) {\r\n            State.updateUser({token: null})\r\n        } else {\r\n            console.warn(response.status);\r\n        }\r\n    };\r\n\r\n    handleResponse = onResponse => response => {\r\n        if (response.status === 200) {\r\n            response.json().then(onResponse);\r\n        } else if (response.status === 403 || response.status === 401) {\r\n            State.updateUser({token: null})\r\n        } else {\r\n            console.warn(response.status);\r\n        }\r\n    };\r\n}","import Entity from \"../model/Entity\";\r\nimport {State} from \"../state/State\";\r\n\r\nexport default class Role extends Entity {\r\n  static entityName: string = 'role';\r\n\r\n  authority: string;\r\n}\r\n\r\nState.suppliers.role = () => new Role();\r\n","import {FormFieldType} from \"../form/FormFieldType\";\r\nimport Entity, {CreateColumn, CreateFormField} from \"../model/Entity\";\r\nimport {State} from \"../state/State\";\r\nimport Role from \"./Role\";\r\n\r\nexport default class User extends Entity {\r\n  static entityName: string = 'user';\r\n\r\n  username: string;\r\n  password: string;\r\n  authorities: Role[];\r\n}\r\n\r\nState.suppliers.user = () => new User();\r\nState.columns.user    = [CreateColumn('username', FormFieldType.TEXT)];\r\nState.formFields.user = [CreateFormField('authorities', FormFieldType.ENTITY_COMBOBOX, Role.entityName)];","import RemoteService from \"../client/RemoteService\";\r\nimport Service from \"../client/Service\";\r\nimport {State} from \"../state/State\";\r\nimport Role from \"./Role\";\r\nimport User from \"./User\";\r\n\r\nconst userService = new Service(User.entityName);\r\nconst roleService = new Service(Role.entityName);\r\n\r\nexport default class AuthoritiesService extends RemoteService {\r\n  refreshAuthorities() {\r\n    this.requestForPath('authorities', authorities => {\r\n      State.updateUser({authorities: authorities});\r\n      AuthoritiesService.updateAdminAuthoritiesIfNeeded();\r\n    });\r\n  }\r\n\r\n  static hasAuthority(entityName: string) {\r\n    const authorities = State.data.currentUser.authorities;\r\n    return authorities && authorities.find(role => role.authority.toLowerCase()\r\n                                                       .endsWith(entityName.toLowerCase()));\r\n  }\r\n\r\n  updatePassword(newPassword: string) {\r\n    this.postRequestWithoutResponse({...State.data.currentUser, ...{password: newPassword}},\r\n                                    'password',\r\n                                    () => State.updateUser({oneTimePassword: false}))\r\n  }\r\n\r\n  static updateAdminAuthoritiesIfNeeded() {\r\n    if (AuthoritiesService.hasAuthority('admin')) {\r\n      roleService.loadData();\r\n      userService.loadData();\r\n      State.services.user = userService;\r\n    }\r\n  }\r\n}","import React, {Component} from \"react\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from 'react-select/animated'\r\nimport {FormLabel} from \"@material-ui/core\";\r\nimport {State} from \"../../state/State\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass EnumSelect extends Component {\r\n  static style = {\r\n    control: (provided, state) => ({\r\n      ...provided,\r\n      width: 400,\r\n      marginLeft: 10\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      t,\r\n      name,\r\n      suggestions = name,\r\n      value,\r\n      label = t(name),\r\n      data = State.data[suggestions],\r\n      onChange = selected => State.updateEntity({[name]: selected}),\r\n      multi,\r\n      editable\r\n    } = this.props;\r\n\r\n    return <Grid container spacing={2} alignItems={\"center\"}>\r\n      <Grid item>\r\n        <FormLabel>{label}</FormLabel>\r\n      </Grid>\r\n      <Grid item>\r\n        <Select\r\n            textFieldProps={{label: label, InputLabelProps: {shrink: false}}}\r\n            styles={EnumSelect.style}\r\n            options={data}\r\n            components={makeAnimated()}\r\n            onChange={onChange}\r\n            value={multi ? value : {label: value, value: value}}\r\n            getOptionLabel={val => <div>{val.label ? val.label : (typeof val === \"string\" ? val : undefined)}</div>}\r\n            getOptionValue={val => val}\r\n            isSearchable\r\n            isClearable\r\n            isMulti={multi}\r\n            isDisabled={!editable}/>\r\n      </Grid>\r\n    </Grid>;\r\n  }\r\n}\r\n\r\nexport default withTranslation()(EnumSelect);","import {TextField} from \"@material-ui/core\";\r\nimport React, {Component} from \"react\";\r\n\r\nclass IntegerField extends Component {\r\n  updateInt = onChange => event => {\r\n    let number = parseInt(event.target.value);\r\n    if (number || number === 0) {\r\n      onChange(number)\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {onChange, ...other} = this.props;\r\n    return <TextField type='number' onChange={this.updateInt(onChange)} {...other}/>;\r\n  }\r\n}\r\n\r\nexport default IntegerField;","import ModelElement from \"../ModelElement\";\r\n\r\nexport const ActionType = {\r\n    ACTION: 'ACTION',\r\n    ROUND: 'ROUND',\r\n    TURN: 'TURN',\r\n\r\n    allOf() {\r\n        return [this.ACTION, this.ROUND, this.TURN];\r\n    }\r\n};\r\n\r\nexport default class ActionTime extends ModelElement {\r\n    actionType: string = ActionType.ACTION;\r\n    amount: number = 1;\r\n\r\n    toString(): string {\r\n        switch (this.actionType) {\r\n            case ActionType.ACTION:\r\n                return this.amount;\r\n            case ActionType.ROUND:\r\n                return this.amount + 'r';\r\n            case ActionType.TURN:\r\n                return this.amount + 't';\r\n            default:\r\n                return this.amount;\r\n        }\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {FormLabel, TextField} from \"@material-ui/core\";\r\nimport EnumSelect from \"./EnumSelect\";\r\nimport IntegerField from \"./IntegerField\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport {State} from \"../../state/State\";\r\nimport {ActionType} from \"../../model/rule/ActionTime\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass ActionTimeField extends Component {\r\n  onUpdate = updates => {\r\n    const {\r\n      name,\r\n      value = State.data.entity[name],\r\n    } = this.props;\r\n    Object.assign(value, updates);\r\n    State.updateEntity({[name]: value})\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      t,\r\n      name,\r\n      label = t(name),\r\n      value = State.data.entity[name],\r\n      editable\r\n    } = this.props;\r\n\r\n    return <Grid container alignItems={\"center\"} spacing={2}>\r\n      <Grid item>\r\n        <FormLabel>{label}</FormLabel>\r\n      </Grid>\r\n      <Grid item>\r\n        <EnumSelect key={'actionType'}\r\n                    label={t('type')}\r\n                    data={ActionType.allOf()}\r\n                    value={value.type}\r\n                    onChange={type => this.onUpdate({type: type})}\r\n                    editable={editable}/>\r\n      </Grid>\r\n      <Grid item>\r\n        <IntegerField key={'amount'}\r\n                      label={t('amount')}\r\n                      value={value.amount}\r\n                      onChange={amount => this.onUpdate({amount: amount})}\r\n                      InputProps={{readOnly: !editable}}/>\r\n      </Grid>\r\n    </Grid>;\r\n  }\r\n}\r\n\r\nexport default withTranslation()(ActionTimeField);","import Grid               from \"@material-ui/core/Grid\";\r\nimport React, {Component} from \"react\";\r\nimport {withTranslation}  from \"react-i18next\";\r\nimport Select            from \"react-select\";\r\nimport makeAnimated      from 'react-select/animated'\r\nimport {State}           from \"../../state/State\";\r\n\r\nclass BlueprintSelect extends Component {\r\n  render() {\r\n    const {\r\n            t,\r\n            name,\r\n            label = t(name),\r\n            suggestions = name,\r\n            data = State.data[suggestions],\r\n            value = State.data.entity[name],\r\n            onChange = selected => State.updateEntity({[name]: selected}),\r\n            editable\r\n    } = this.props;\r\n\r\n    const desc = value ? <div>{t('price')}: {value.suggestedPrice.toString()},\r\n      {t('wieght')}: {value.suggestedWeight} kg</div> : <div/>;\r\n\r\n    return <Grid container spacing={2} alignItems={\"center\"}>\r\n      <Grid item>{label}</Grid>\r\n      <Grid item xs={6}>\r\n        <Select textFieldProps={{label: label, InputLabelProps: {shrink: false}}}\r\n                options={data}\r\n                components={makeAnimated()}\r\n                getOptionLabel={option => <div>{option.name}</div>}\r\n                getOptionValue={option => option.id}\r\n                filterOption={(option, input) => option.data.name.startsWith(input)}\r\n                onChange={onChange}\r\n                value={value}\r\n                isDisabled={!editable}/>\r\n      </Grid>\r\n      <Grid item>\r\n        {desc}\r\n      </Grid>\r\n    </Grid>;\r\n  }\r\n}\r\n\r\nexport default withTranslation()(BlueprintSelect);","import {State} from \"../../state/State\";\r\nimport Entity from \"../Entity\";\r\n\r\nexport const Dice = {\r\n    K2: 'K2',\r\n    K3: 'K3',\r\n    K4: 'K4',\r\n    K6: 'K6',\r\n    K8: 'K8',\r\n    K10: 'K10',\r\n    K12: 'K12',\r\n    K20: 'K20',\r\n    K100: 'K100',\r\n\r\n    allOf() {\r\n        return [\r\n            this.K2,\r\n            this.K3,\r\n            this.K4,\r\n            this.K6,\r\n            this.K8,\r\n            this.K10,\r\n            this.K12,\r\n            this.K20,\r\n            this.K100,\r\n        ]\r\n    }\r\n};\r\n\r\nexport default class DiceRoll extends Entity {\r\n    dice: string;\r\n    rolls: number;\r\n\r\n    toString() {\r\n        return this.rolls + this.dice\r\n    }\r\n}\r\n\r\nState.data.dice = Dice.allOf();","import DiceRoll from \"./DiceRoll\";\r\nimport Entity from \"../Entity\";\r\n\r\nexport const ModifierType = {\r\n  REGULAR: 'REGULAR',\r\n  PROFESSION: 'PROFESSION',\r\n  EXPERIENCE: 'EXPERIENCE',\r\n  DICE: 'DICE',\r\n\r\n  allOf() {\r\n    return [\r\n      this.REGULAR,\r\n      this.PROFESSION,\r\n      this.EXPERIENCE,\r\n      this.DICE,\r\n    ];\r\n  }\r\n};\r\n\r\nclass Modifier extends Entity {\r\n  value: number;\r\n  type: string = ModifierType.REGULAR;\r\n  rolls: DiceRoll[] = [];\r\n\r\n  updateWith(entity: Modifier): Modifier {\r\n    super.updateWith(entity);\r\n    this.updateEntityList(entity, 'rolls', () => new DiceRoll());\r\n    return this;\r\n  }\r\n\r\n  toString() {\r\n    return this.type + ' ' + this.value + ' ' + this.rolls.map(\r\n        roll => roll.toString()).join(' ')\r\n  }\r\n}\r\n\r\nexport default Modifier;\r\n","import Modifier, {ModifierType} from \"./Modifier\";\r\nimport Entity                   from \"../Entity\";\r\n\r\nexport default class Determinant extends Entity {\r\n    type: string;\r\n    value: number = 0;\r\n    modifiers: Modifier[] = [];\r\n\r\n    updateWith(entity: Determinant): Determinant {\r\n        super.updateWith(entity);\r\n        this.updateEntityList(entity, 'modifiers', () => new Modifier());\r\n        return this;\r\n    }\r\n\r\n    getExperienceExtensions() {\r\n        return this.modifiers.filter(mod => mod.type === ModifierType.EXPERIENCE)\r\n    }\r\n\r\n    calculateExperienceValue() {\r\n        return this.value + this.getExperienceExtensions().reduce((a, b) => a + (b.value), 0);\r\n    }\r\n    calculateFinalValue() {\r\n        return this.value + this.modifiers.reduce((a, b) => a + (b.value), 0);\r\n    }\r\n}\r\n\r\nexport const DeterminantType = {\r\n    SPEED: 'SPEED',\r\n    BATTLE: 'BATTLE',\r\n    SHOOTING: 'SHOOTING',\r\n    STRENGTH: 'STRENGTH',\r\n    DURABILITY: 'DURABILITY',\r\n    HEALTH: 'HEALTH',\r\n    INITIATIVE: 'INITIATIVE',\r\n    ATTACK: 'ATTACK',\r\n    DEXTERITY: 'DEXTERITY',\r\n    LEADER_SKILLS: 'LEADER_SKILLS',\r\n    INTELLIGENCE: 'INTELLIGENCE',\r\n    CONTROL: 'CONTROL',\r\n    WILL: 'WILL',\r\n    CHARISMA: 'CHARISMA',\r\n    PARRY: 'PARRY',\r\n    OPPONENT_PARRY: 'OPPONENT_PARRY',\r\n\r\n    allOf(): string[] {\r\n        return [\r\n            this.SPEED,\r\n            this.BATTLE,\r\n            this.SHOOTING,\r\n            this.STRENGTH,\r\n            this.DURABILITY,\r\n            this.HEALTH,\r\n            this.INITIATIVE,\r\n            this.ATTACK,\r\n            this.DEXTERITY,\r\n            this.LEADER_SKILLS,\r\n            this.INTELLIGENCE,\r\n            this.CONTROL,\r\n            this.WILL,\r\n            this.CHARISMA,\r\n            this.PARRY,\r\n            this.OPPONENT_PARRY,\r\n        ];\r\n    },\r\n    personal(): string[] {\r\n        return [\r\n            this.SPEED,\r\n            this.BATTLE,\r\n            this.SHOOTING,\r\n            this.STRENGTH,\r\n            this.DURABILITY,\r\n            this.HEALTH,\r\n            this.INITIATIVE,\r\n            this.ATTACK,\r\n            this.DEXTERITY,\r\n            this.LEADER_SKILLS,\r\n            this.INTELLIGENCE,\r\n            this.CONTROL,\r\n            this.WILL,\r\n            this.CHARISMA,\r\n        ];\r\n    },\r\n};\r\n","import React, {Component} from \"react\";\r\nimport EnumSelect from \"./EnumSelect\";\r\nimport IntegerField from \"./IntegerField\";\r\nimport {State} from \"../../state/State\";\r\nimport {Dice} from \"../../model/rule/DiceRoll\";\r\n\r\nexport default class DiceRollField extends Component {\r\n    updateDiceRoll = updates => {\r\n        this.props.value.updateWith(updates);\r\n        State.update({currentDiceRollEdit: this.props.value});\r\n    };\r\n\r\n    render() {\r\n        const {value, id, editable} = this.props;\r\n\r\n        return <div key={id}>\r\n            <EnumSelect key={id + '_type'}\r\n                        label={'dice'}\r\n                        data={Dice.allOf()}\r\n                        value={value.dice}\r\n                        onChange={selected => this.updateDiceRoll({dice: selected})}\r\n                        editable={editable}/>\r\n            <IntegerField key={id + '_rolls'}\r\n                          label={'rolls'}\r\n                          value={value.rolls}\r\n                          onChange={number => this.updateDiceRoll({rolls: number})}\r\n                          InputProps={{readOnly: !editable}}/>\r\n        </div>;\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport EnumSelect from \"./EnumSelect\";\r\nimport IntegerField from \"./IntegerField\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport DiceRollField from \"./DiceRollField\";\r\nimport {ModifierType} from \"../../model/rule/Modifier\";\r\nimport {State} from \"../../state/State\";\r\nimport DiceRoll from \"../../model/rule/DiceRoll\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass ModifierField extends Component {\r\n\r\n    update = updates => {\r\n        this.props.value.updateWith(updates);\r\n        State.update({currentModifierEdit: this.props.value});\r\n    };\r\n\r\n    onAddDiceRoll = () => {\r\n        this.props.value.rolls.push(new DiceRoll());\r\n        State.update({currentModifierEdit: this.props.value});\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            t,\r\n            name,\r\n            value,\r\n            label = t(name),\r\n            id,\r\n            types = ModifierType.allOf(),\r\n            editable\r\n        } = this.props;\r\n\r\n        let dices = <div/>;\r\n        if (value.type === ModifierType.DICE) {\r\n            dices = <Grid item>\r\n                {\r\n                    value.rolls.map(diceRoll =>\r\n                        <DiceRollField id={id} key={id} value={diceRoll}\r\n                                       onChange={() => State.update({currentModifierEdit: value})}\r\n                                       editable={editable}/>\r\n                    )\r\n                }\r\n                {editable ?\r\n                    <Button onClick={this.onAddDiceRoll}>{t('newDice')}</Button> :\r\n                    <div/>\r\n                }\r\n            </Grid>;\r\n        }\r\n\r\n        return <Grid container item spacing={2} alignItems={\"center\"}>\r\n            <Grid item>\r\n                <IntegerField key={id + '_value'} label={label + ' – ' + t('value')}\r\n                              value={value.value}\r\n                              onChange={number => this.update({value: number})}\r\n                              InputProps={{readOnly: !editable}}/>\r\n            </Grid>\r\n            <Grid item>\r\n                <EnumSelect key={id || name + '_type'} label={t('modifierType') + ' ' + name ? t(name) : value.id}\r\n                            data={types} value={value.type}\r\n                            onChange={selected => this.update({type: selected})}\r\n                            editable={editable}/>\r\n            </Grid>\r\n            {dices}\r\n        </Grid>;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(ModifierField);","import Button                         from \"@material-ui/core/Button\";\r\nimport Grid                           from \"@material-ui/core/Grid\";\r\nimport IconButton                     from \"@material-ui/core/IconButton\";\r\nimport Paper                          from \"@material-ui/core/Paper\";\r\nimport {Remove}                       from \"@material-ui/icons\";\r\nimport React, {Component}             from \"react\";\r\nimport {withTranslation}              from \"react-i18next\";\r\nimport Determinant, {DeterminantType} from \"../../model/rule/Determinant\";\r\nimport Modifier, {ModifierType}       from \"../../model/rule/Modifier\";\r\nimport {State}                        from \"../../state/State\";\r\nimport EnumSelect                     from \"./EnumSelect\";\r\nimport IntegerField                   from \"./IntegerField\";\r\nimport ModifierField                  from \"./ModifierField\";\r\n\r\nclass DeterminantField extends Component {\r\n\r\n  deleteItem = (item) => {\r\n    const value = this.props.value;\r\n    value.splice(value.indexOf(item), 1);\r\n    State.update({currentDeterminantEdit: value});\r\n  };\r\n\r\n  update = (determinant, updates) => {\r\n    determinant.updateWith(updates);\r\n    State.updateEntity({[this.props.name]: this.props.value});\r\n  };\r\n\r\n  addDeterminant = () => {\r\n    const entity = State.data.entity;\r\n    const prop = this.props.name;\r\n\r\n    if (entity[prop]) {\r\n      entity[prop].push(new Determinant());\r\n      State.updateEntity({[prop]: entity[prop]});\r\n    } else {\r\n      State.updateEntity({[prop]: [new Determinant()]});\r\n    }\r\n  };\r\n\r\n  addModifierToDeterminant = (determinant) => () => {\r\n    determinant.modifiers.push(new Modifier());\r\n    State.updateEntity({[this.props.name]: this.props.value});\r\n  };\r\n\r\n  updateModifier = modifier => newModifier => {\r\n    modifier.updateWith(newModifier);\r\n    State.updateEntity({[this.props.name]: this.props.value});\r\n  };\r\n\r\n  render() {\r\n    const {\r\n            t,\r\n            name,\r\n            value,\r\n            modifierTypes = ModifierType.allOf(),\r\n            types = DeterminantType.allOf(),\r\n            editable\r\n          } = this.props;\r\n\r\n    return <Grid container spacing={2} alignItems={\"center\"}>\r\n      <Grid item>{t(name)}</Grid>\r\n      <Grid item container spacing={2} alignItems={\"center\"}>\r\n        {value && value.map(determinant => (\r\n            <Grid item container spacing={2} alignItems={\"center\"} key={value}>\r\n              <Grid item>\r\n                <EnumSelect key={determinant.id + determinant.type}\r\n                            label={t(name) + determinant.type}\r\n                            data={types} value={determinant.type}\r\n                            onChange={selected => this.update(determinant, {type: selected})}\r\n                            editable={editable}/>\r\n              </Grid>\r\n              <Grid item>\r\n                <IntegerField key={determinant.id + determinant.type + 'value'} label={'value'}\r\n                              value={determinant.value}\r\n                              onChange={number => this.update(determinant, {value: number})}\r\n                              InputProps={{readOnly: !editable}}/>\r\n              </Grid>\r\n              {<Grid item container spacing={2} alignItems={\"center\"}>\r\n                <Grid item>\r\n                  {t('modifier')}\r\n                </Grid>\r\n                <Grid item>\r\n                  {determinant.modifiers && determinant.modifiers.map(currentModifier => (\r\n                      <Paper key={determinant.id + determinant.type + '_' + currentModifier.id}>\r\n                        <ModifierField\r\n                            id={determinant.id\r\n                                + determinant.type\r\n                                + currentModifier.id\r\n                                + currentModifier.type}\r\n                            value={currentModifier}\r\n                            types={modifierTypes}\r\n                            editable={editable}/>\r\n                      </Paper>))}\r\n                </Grid>\r\n                <Grid item>\r\n                  {editable ? <Button\r\n                      onClick={this.addModifierToDeterminant(determinant)}>{t('newModifier')}</Button> :\r\n                      <div/>\r\n                  }\r\n                </Grid>\r\n              </Grid>}\r\n              {editable ?\r\n                  <IconButton key={determinant.id + determinant.type + 'remove'}\r\n                              onClick={() => this.deleteItem(determinant)}><Remove/></IconButton> :\r\n                  <div/>}\r\n            </Grid>))}\r\n      </Grid>\r\n      <Grid item>\r\n        {editable ? <Button onClick={this.addDeterminant}>{t('newDeterminant')}</Button> : <div/>}\r\n      </Grid>\r\n    </Grid>;\r\n  }\r\n}\r\n\r\nexport default withTranslation()(DeterminantField);","import React, {Component} from \"react\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from 'react-select/animated'\r\nimport {FormLabel} from \"@material-ui/core\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport {State} from \"../../state/State\";\r\n\r\nclass EntitySelect extends Component {\r\n    render() {\r\n        const {\r\n            t,\r\n            name,\r\n            label = t(name),\r\n            suggestions = name,\r\n            data = State.data[suggestions],\r\n            value = State.data.entity[name],\r\n            multi = false,\r\n            onChange = this.updateEntity,\r\n            editable\r\n        } = this.props;\r\n\r\n        return <div>\r\n            <FormLabel>{label}</FormLabel>\r\n            <Select textFieldProps={{label: label, InputLabelProps: {shrink: false}}}\r\n                    options={data}\r\n                    components={makeAnimated()}\r\n                    getOptionLabel={option => {\r\n                        return <div>{option.name || option.authority}</div>\r\n                    }}\r\n                    getOptionValue={option => {\r\n                        return option.id\r\n                    }}\r\n                    filterOption={(option, input) => !option.data.name || option.data.name.startsWith(input)}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    isMulti={multi}\r\n                    isDisabled={!editable}/>\r\n        </div>;\r\n    }\r\n\r\n    updateEntity = newValue => {\r\n        const {name} = this.props;\r\n        const entity = State.data.entity;\r\n        entity.updateWith({[name]: newValue});\r\n        State.update({entity: entity})\r\n    };\r\n}\r\n\r\nexport default withTranslation()(EntitySelect);","import React, {Component} from \"react\";\r\nimport {FormLabel, TextField} from \"@material-ui/core\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport {State} from \"../../state/State\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass PriceField extends Component {\r\n\r\n  updatePrice = (onChange, part) => event => {\r\n    const {name, value = State.data.entity[name]} = this.props;\r\n    let number = parseInt(event.target.value);\r\n    if (number || number === 0) {\r\n      onChange({...value, ...{[part]: number}})\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      t,\r\n      name,\r\n      label = t(name),\r\n      onChange = price => State.updateEntity({[name]: price}),\r\n      value = State.data.entity[name],\r\n      editable\r\n    } = this.props;\r\n\r\n    return <Grid container spacing={2} alignItems={\"center\"}>\r\n      <Grid item>\r\n        <FormLabel style={{marginRight: 10}}>{label}</FormLabel>\r\n      </Grid>\r\n      <Grid item>\r\n        <TextField label={t('gold')}\r\n                   type='number'\r\n                   value={value.gold}\r\n                   onChange={this.updatePrice(onChange, 'gold')}\r\n                   InputProps={{readOnly: !editable}}/>\r\n      </Grid>\r\n      <Grid item>\r\n        <TextField label={t('silver')}\r\n                   type='number'\r\n                   value={value.silver}\r\n                   onChange={this.updatePrice(onChange, 'silver')}\r\n                   InputProps={{readOnly: !editable}}/>\r\n      </Grid>\r\n      <Grid item>\r\n        <TextField label={t('lead')}\r\n                   type='number'\r\n                   value={value.lead}\r\n                   onChange={this.updatePrice(onChange, 'lead')}\r\n                   InputProps={{readOnly: !editable}}/>\r\n      </Grid>\r\n    </Grid>\r\n  }\r\n}\r\n\r\nexport default withTranslation()(PriceField);","import Grid from \"@material-ui/core/Grid\";\r\nimport React, {Component} from 'react';\r\nimport {withTranslation} from \"react-i18next\";\r\nimport Determinant from \"../../model/rule/Determinant\";\r\nimport DiceRoll from \"../../model/rule/DiceRoll\";\r\nimport Modifier, {ModifierType} from \"../../model/rule/Modifier\";\r\nimport {State} from \"../../state/State\";\r\nimport EnumSelect from \"./EnumSelect\";\r\nimport IntegerField from \"./IntegerField\";\r\n\r\nconst determinantsNames = ['SPEED',\r\n                           'BATTLE',\r\n                           'SHOOTING',\r\n                           'STRENGTH',\r\n                           'DURABILITY',\r\n                           'HEALTH',\r\n                           'INITIATIVE',\r\n                           'ATTACK',\r\n                           'DEXTERITY',\r\n                           'LEADER_SKILLS',\r\n                           'INTELLIGENCE',\r\n                           'CONTROL',\r\n                           'WILL',\r\n                           'CHARISMA',];\r\n\r\nclass RaceDeterminantsField extends Component {\r\n  regenerateDeterminants = entity => {\r\n    if (!entity.determinants || entity.determinants.length === 0) {\r\n      determinantsNames.forEach(name => {\r\n        const modifier = new Modifier();\r\n        modifier.type  = ModifierType.DICE;\r\n\r\n        const determinant = new Determinant();\r\n        determinant.type  = name;\r\n        determinant.modifiers.push(modifier);\r\n\r\n        entity.determinants.push(determinant);\r\n      })\r\n    } else {\r\n      entity.determinants.filter(determinant => !determinant.modifiers)\r\n            .forEach(determinant => {\r\n              determinant.modifiers = [new Modifier()]\r\n            });\r\n      entity.determinants.filter(determinant => determinant.modifiers.length === 0)\r\n            .forEach(determinant => determinant.modifiers.push(new Modifier()));\r\n    }\r\n  };\r\n\r\n  updateDiceType = determinant => type => {\r\n    if (!type && determinant.modifiers[0].rolls.length === 1) {\r\n      determinant.modifiers[0].rolls.length = 0;\r\n    } else if (type && determinant.modifiers[0].rolls.length === 0) {\r\n      determinant.modifiers[0].rolls.push(new DiceRoll());\r\n      determinant.modifiers[0].rolls[0].dice = type;\r\n    } else {\r\n      determinant.modifiers[0].rolls[0].dice = type;\r\n    }\r\n    State.updateEntity(State.data.entity);\r\n  };\r\n\r\n  updateDiceRolls = determinant => rolls => {\r\n    if (rolls === 0 && determinant.modifiers[0].rolls.length === 1) {\r\n      determinant.modifiers[0].rolls.length = 0;\r\n    } else if (rolls > 0 && determinant.modifiers[0].rolls.length === 0) {\r\n      determinant.modifiers[0].rolls.push(new DiceRoll());\r\n      determinant.modifiers[0].rolls[0].rolls = rolls;\r\n    } else {\r\n      determinant.modifiers[0].rolls[0].rolls = rolls;\r\n    }\r\n    State.updateEntity(State.data.entity);\r\n  };\r\n\r\n  updateBasicModifier = determinant => modifier => {\r\n    determinant.modifiers[0].value = modifier;\r\n    State.updateEntity(State.data.entity);\r\n  };\r\n\r\n  render() {\r\n    const {t}    = this.props;\r\n    const entity = State.data.entity;\r\n    this.regenerateDeterminants(entity);\r\n\r\n    const fields = entity.determinants.map(determinant => [\r\n        <Grid item xs={1}>{t(determinant.type)}</Grid>,\r\n        <Grid item xs={3}><EnumSelect name={'dice'}\r\n                                      value={determinant.modifiers[0].rolls.length && determinant.modifiers[0].rolls[0].dice}\r\n                                      editable\r\n                                      onChange={this.updateDiceType(determinant)}/></Grid>,\r\n        <Grid item xs={1}>{t('rolls')} <IntegerField value={determinant.modifiers[0].rolls.length && determinant.modifiers[0].rolls[0].rolls}\r\n                                                     onChange={this.updateDiceRolls(determinant)}/></Grid>,\r\n        <Grid item xs={1}>{t('plus')} <IntegerField value={determinant.modifiers[0].value}\r\n                                                    onChange={this.updateBasicModifier(determinant)}/></Grid>]);\r\n\r\n    return <Grid container spacing={2} alignItems={\"center\"}>\r\n      {fields.map(field => <Grid item container xs={12} alignItems={\"center\"}>{field}</Grid>)}\r\n    </Grid>;\r\n  }\r\n}\r\n\r\nexport default withTranslation()(RaceDeterminantsField);","import Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\n\r\nexport default class Skill extends Entity {\r\n    static entityName: string = 'skill';\r\n\r\n    name: string;\r\n    description: string;\r\n\r\n\r\n    updateWith(entity: Skill): Skill {\r\n        return super.updateWith(entity);\r\n    }\r\n}\r\n\r\nRegisterEntity(Skill, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n]);","import Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport Skill from \"../knowledge/Skill\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\n\r\nexport default class ProfessionClass extends Entity {\r\n    static entityName: string = 'professionClass';\r\n\r\n    name: string;\r\n    description: string;\r\n    skills: Skill[] = [];\r\n\r\n    updateWith(entity: ProfessionClass): ProfessionClass {\r\n        super.updateWith(entity);\r\n        this.updateEntityList(entity, 'skills', () => new Skill());\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterEntity(ProfessionClass, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('skills', FormFieldType.ENTITY_COMBOBOX, Skill.entityName)\r\n]);","import Entity from \"../Entity\";\r\nimport Determinant from \"./Determinant\";\r\n\r\nexport default class DeterminantContainer extends Entity {\r\n    determinants: Determinant[] = [];\r\n\r\n    updateWith(entity: DeterminantContainer): DeterminantContainer {\r\n        super.updateWith(entity);\r\n        this.updateEntityList(entity, 'determinants', () => new Determinant());\r\n        return this;\r\n    }\r\n}","import ProfessionClass from \"./ProfessionClass\";\r\nimport DeterminantContainer from \"../rule/DeterminantContainer\";\r\nimport Skill from \"../knowledge/Skill\";\r\nimport {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\n\r\nexport default class Profession extends DeterminantContainer {\r\n    static entityName: string = 'profession';\r\n\r\n    name: string;\r\n    description: string;\r\n    professionClass: ProfessionClass;\r\n    skills: Skill[] = [];\r\n    nextProfessions: Profession[] = [];\r\n\r\n    updateWith(entity: Profession): Profession {\r\n        super.updateWith(entity);\r\n        this.updateEntityProp(entity, 'professionClass', () => new ProfessionClass());\r\n        this.updateEntityList(entity, 'skills', () => new Skill());\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterEntity(Profession, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('professionClass', FormFieldType.ENTITY_SELECT, ProfessionClass.entityName),\r\n    CreateFormField('determinants', FormFieldType.DETERMINANT),\r\n    CreateFormField('skills', FormFieldType.ENTITY_COMBOBOX, Skill.entityName),\r\n    CreateFormField('nextProfessions', FormFieldType.ENUM_COMBOBOX, Profession.entityName),\r\n]);","import Profession                     from \"../professions/Profession\";\r\nimport Determinant, {DeterminantType} from \"../rule/Determinant\";\r\n\r\nexport default class CreatureDeterminants {\r\n    determinants: Determinant[] = [];\r\n\r\n    constructor() {\r\n        const speed = new Determinant();\r\n        speed.type = DeterminantType.SPEED;\r\n        const battle = new Determinant();\r\n        battle.type = DeterminantType.BATTLE;\r\n        const shooting = new Determinant();\r\n        shooting.type = DeterminantType.SHOOTING;\r\n        const strength = new Determinant();\r\n        strength.type = DeterminantType.STRENGTH;\r\n        const durability = new Determinant();\r\n        durability.type = DeterminantType.DURABILITY;\r\n        const health = new Determinant();\r\n        health.type = DeterminantType.HEALTH;\r\n        const attack = new Determinant();\r\n        attack.type = DeterminantType.ATTACK;\r\n        const initiative = new Determinant();\r\n        initiative.type = DeterminantType.INITIATIVE;\r\n        const dexterity = new Determinant();\r\n        dexterity.type = DeterminantType.DEXTERITY;\r\n        const leaderSkills = new Determinant();\r\n        leaderSkills.type = DeterminantType.LEADER_SKILLS;\r\n        const intelligence = new Determinant();\r\n        intelligence.type = DeterminantType.INTELLIGENCE;\r\n        const control = new Determinant();\r\n        control.type = DeterminantType.CONTROL;\r\n        const will = new Determinant();\r\n        will.type = DeterminantType.WILL;\r\n        const charisma = new Determinant();\r\n        charisma.type = DeterminantType.CHARISMA;\r\n        this.determinants.push(speed, battle, shooting, strength, durability, health, attack, initiative,\r\n            dexterity, leaderSkills, intelligence, control, will, charisma);\r\n    }\r\n\r\n    updateWith(determinants: CreatureDeterminants): CreatureDeterminants {\r\n        if (determinants.determinants) {\r\n            determinants.determinants.forEach(determinant => {\r\n                const newDeterminant = new Determinant();\r\n                newDeterminant.updateWith(determinant);\r\n                this.replaceDeterminant(newDeterminant);\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    updateDeterminantValue(value: number, type: string) {\r\n        this.findDeterminant(type).value = value;\r\n    }\r\n\r\n    findDeterminant(type: string) {\r\n        return this.determinants.find(determinant => type === determinant.type)\r\n    }\r\n\r\n    replaceDeterminant(determinant: Determinant) {\r\n        const toReplace = this.findDeterminant(determinant.type);\r\n        let determinantIndex = this.determinants.indexOf(toReplace);\r\n        this.determinants.splice(determinantIndex, 1);\r\n        this.determinants.push(determinant);\r\n    }\r\n}","import {State} from \"../../state/State\";\r\n\r\nexport const Availability = [\r\n    'ABUNDANT',\r\n    'PLENTIFUL',\r\n    'COMMON',\r\n    'AVERAGE',\r\n    'SCARCE',\r\n    'RARE',\r\n    'VERY_RARE'\r\n];\r\n\r\nexport const availabilityEntityName = 'availability';\r\n\r\nState.data[availabilityEntityName] = Availability;","import Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {Availability, availabilityEntityName} from \"./Availability\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\n\r\nexport default class ArmorPattern extends Entity {\r\n    static entityName: string = 'armorPattern';\r\n\r\n    name: string;\r\n    description: string;\r\n    priceMultiplier: number;\r\n    weight: number;\r\n    strength: number;\r\n    availability: string = Availability[0];\r\n}\r\n\r\nRegisterEntity(ArmorPattern, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n    CreateColumn('strength', FormFieldType.INTEGER),\r\n    CreateColumn('availability', FormFieldType.TEXT),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('priceMultiplier', FormFieldType.FLOAT),\r\n    CreateFormField('weight', FormFieldType.FLOAT),\r\n    CreateFormField('strength', FormFieldType.FLOAT),\r\n    CreateFormField('availability', FormFieldType.ENUM_SELECT, availabilityEntityName),\r\n]);","import ModelElement from \"../ModelElement\";\r\nimport {State} from \"../../state/State\";\r\n\r\nexport const entityName = 'price';\r\n\r\nexport default class Price extends ModelElement {\r\n    gold: number = 0;\r\n    silver: number = 0;\r\n    lead: number = 0;\r\n\r\n    toString() {\r\n        return this.gold + ' ' + this.silver + ' ' + this.lead;\r\n    }\r\n}\r\n\r\nState.suppliers[entityName] = () => new Price();\r\n","import Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\nimport {availabilityEntityName} from \"./Availability\";\r\n\r\nexport default class Resource extends Entity {\r\n    static entityName: string = 'resource';\r\n\r\n    name: string;\r\n    description: string;\r\n    priceMultiplier: number;\r\n    weight: number;\r\n    durability: number;\r\n    strength: number;\r\n    availability: string = 'COMMON';\r\n}\r\n\r\nRegisterEntity(Resource, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n    CreateColumn('priceMultiplier', FormFieldType.FLOAT),\r\n    CreateColumn('durability', FormFieldType.FLOAT),\r\n    CreateColumn('strength', FormFieldType.FLOAT),\r\n    CreateColumn('availability', FormFieldType.TEXT),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('priceMultiplier', FormFieldType.FLOAT),\r\n    CreateFormField('weight', FormFieldType.FLOAT),\r\n    CreateFormField('durability', FormFieldType.FLOAT),\r\n    CreateFormField('strength', FormFieldType.FLOAT),\r\n    CreateFormField('availability', FormFieldType.ENUM_SELECT, availabilityEntityName),\r\n]);","import {State} from \"../../state/State\";\r\n\r\nexport const Placement = {\r\n    BODY: 'BODY',\r\n    HEAD: 'HEAD',\r\n    TORSO: 'TORSO',\r\n    HAND: 'HAND',\r\n    LEG: 'LEG',\r\n    BELT: 'BELT',\r\n    NECK: 'NECK',\r\n    FINGER: 'FINGER',\r\n    SHIELD: 'SHIELD',\r\n    BOTH_HANDS: 'BOTH_HANDS',\r\n\r\n    allOf() {\r\n        return [\r\n            this.BODY,\r\n            this.HEAD,\r\n            this.TORSO,\r\n            this.HAND,\r\n            this.LEG,\r\n            this.BELT,\r\n            this.NECK,\r\n            this.FINGER,\r\n            this.SHIELD,\r\n            this.BOTH_HANDS,\r\n        ];\r\n    },\r\n\r\n    armor() {\r\n        return [\r\n            this.BODY,\r\n            this.HEAD,\r\n            this.TORSO,\r\n            this.HAND,\r\n            this.LEG,\r\n            this.BELT,\r\n            this.SHIELD,\r\n        ];\r\n    },\r\n\r\n    weapon() {\r\n        return [\r\n            this.HAND,\r\n            this.BOTH_HANDS,\r\n            this.SHIELD,\r\n        ];\r\n    },\r\n\r\n    jewelry() {\r\n        return [\r\n            this.NECK,\r\n            this.FINGER,\r\n        ];\r\n    },\r\n};\r\n\r\nexport const placementName = 'placement';\r\nexport const placementArmorName = 'placementArmor';\r\nexport const placementWeaponName = 'placementWeapon';\r\nexport const placementJewelryName = 'placementJewelry';\r\n\r\nState.data[placementName] = Placement.allOf();\r\nState.data[placementArmorName] = Placement.armor();\r\nState.data[placementWeaponName] = Placement.weapon();\r\nState.data[placementJewelryName] = Placement.jewelry();","import DeterminantContainer from \"../rule/DeterminantContainer\";\r\nimport Price from \"../world/Price\";\r\nimport {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\nimport {placementArmorName} from \"./Placement\";\r\n\r\nexport default class ArmorBlueprint extends DeterminantContainer {\r\n    static entityName: string = 'armorBlueprint';\r\n\r\n    name: string;\r\n    description: string;\r\n    armor: number;\r\n    suggestedPrice: Price = new Price();\r\n    suggestedWeight: number;\r\n    placement: string[] = [];\r\n\r\n    updateWith(entity: DeterminantContainer): ArmorBlueprint {\r\n        super.updateWith(entity);\r\n        this.updateEntityProp(entity, 'suggestedPrice', () => new Price());\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterEntity(ArmorBlueprint, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n    CreateColumn('armor', FormFieldType.INTEGER),\r\n    CreateColumn('placement', FormFieldType.TEXT),\r\n    CreateColumn('suggestedPrice', FormFieldType.PRICE),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('armor', FormFieldType.INTEGER),\r\n    CreateFormField('suggestedPrice', FormFieldType.PRICE),\r\n    CreateFormField('suggestedWeight', FormFieldType.INTEGER),\r\n    CreateFormField('placement', FormFieldType.ENUM_COMBOBOX, placementArmorName),\r\n    CreateFormField('determinants', FormFieldType.DETERMINANT),\r\n]);","import ArmorPattern                                    from \"./ArmorPattern\";\r\nimport DeterminantContainer\r\n                                                       from \"../rule/DeterminantContainer\";\r\nimport Price                                           from \"../world/Price\";\r\nimport Resource                                        from \"./Resource\";\r\nimport ArmorBlueprint                                  from \"./ArmorBlueprint\";\r\nimport {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType}                                 from \"../../form/FormFieldType\";\r\nimport {availabilityEntityName}                        from \"./Availability\";\r\n\r\nexport default class Armor extends DeterminantContainer {\r\n  static entityName: string = 'armor';\r\n\r\n  name: string;\r\n  description: string;\r\n  weight: number;\r\n  price: Price = new Price();\r\n  availability: string = 'COMMON';\r\n  primaryResource: Resource;\r\n  secondaryResource: Resource;\r\n  type: ArmorBlueprint;\r\n  armorPattern: ArmorPattern;\r\n\r\n  updateWith(entity: *): Armor {\r\n    super.updateWith(entity);\r\n    this.updateEntityProp(entity, 'price', () => new Price());\r\n    this.updateEntityProp(entity, 'primaryResource', () => new Resource());\r\n    this.updateEntityProp(entity, 'secondaryResource', () => new Resource());\r\n    this.updateEntityProp(entity, 'type', () => new ArmorBlueprint());\r\n    this.updateEntityProp(entity, 'armorPattern', () => new ArmorPattern());\r\n    return this;\r\n  }\r\n}\r\n\r\nRegisterEntity(Armor,\r\n               [CreateColumn('name', FormFieldType.TEXT),\r\n                CreateColumn('description', FormFieldType.TEXT_AREA),\r\n                CreateColumn('price', FormFieldType.PRICE),\r\n                CreateColumn('type', FormFieldType.ENTITY_SELECT),\r\n                CreateColumn('armorPattern', FormFieldType.ENTITY_SELECT),\r\n               ],\r\n               [CreateFormField('name', FormFieldType.TEXT),\r\n                CreateFormField('description', FormFieldType.TEXT_AREA),\r\n                CreateFormField('weight', FormFieldType.FLOAT),\r\n                CreateFormField('price', FormFieldType.PRICE),\r\n                CreateFormField('availability', FormFieldType.ENUM_SELECT, availabilityEntityName),\r\n                CreateFormField('primaryResource', FormFieldType.ENTITY_SELECT, Resource.entityName),\r\n                CreateFormField('secondaryResource', FormFieldType.ENTITY_SELECT, Resource.entityName),\r\n                CreateFormField('type', FormFieldType.BLUEPRINT_SELECT, ArmorBlueprint.entityName),\r\n                CreateFormField('armorPattern', FormFieldType.ENTITY_SELECT, ArmorPattern.entityName),\r\n                CreateFormField('determinants', FormFieldType.DETERMINANT),]);\r\n","import Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport Price from \"../world/Price\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\nimport {availabilityEntityName} from \"./Availability\";\r\n\r\nexport default class Item extends Entity {\r\n    static entityName: string = 'miscItem';\r\n\r\n    name: string;\r\n    description: string;\r\n    weight: number;\r\n    price: Price = new Price();\r\n    availability: string = 'COMMON';\r\n\r\n\r\n    updateWith(entity: *): Item {\r\n        super.updateWith(entity);\r\n        this.updateEntityProp(entity, 'price', () => new Price());\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterEntity(Item, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n    CreateColumn('weight', FormFieldType.FLOAT),\r\n    CreateColumn('price', FormFieldType.PRICE),\r\n    CreateColumn('availability', FormFieldType.ENUM_SELECT),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('weight', FormFieldType.FLOAT),\r\n    CreateFormField('price', FormFieldType.PRICE),\r\n    CreateFormField('availability', FormFieldType.ENUM_SELECT, availabilityEntityName),\r\n]);","import Item from \"./Item\";\r\nimport Entity from \"../Entity\";\r\n\r\nexport default class Inventory extends Entity {\r\n    item: Item;\r\n    amount: number = 1;\r\n\r\n    updateWith(entity: Inventory): Inventory {\r\n        super.updateWith(entity);\r\n        this.updateEntityProp(entity, 'item', () => new Item());\r\n        return this;\r\n    }\r\n}","import DeterminantContainer from \"../rule/DeterminantContainer\";\r\nimport Price from \"../world/Price\";\r\nimport Modifier from \"../rule/Modifier\";\r\nimport ActionTime from \"../rule/ActionTime\";\r\nimport {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\nimport {Placement, placementWeaponName} from \"./Placement\";\r\n\r\nexport default class MeleeWeaponBlueprint extends DeterminantContainer {\r\n    static entityName: string = 'meleeWeaponBlueprint';\r\n\r\n    name: string;\r\n    description: string;\r\n    suggestedPrice: Price = new Price();\r\n    suggestedWeight: number;\r\n    damage: Modifier = new Modifier();\r\n    prepareTime: ActionTime = new ActionTime();\r\n    placement: string = Placement.HAND;\r\n\r\n    updateWith(entity: MeleeWeaponBlueprint): MeleeWeaponBlueprint {\r\n        super.updateWith(entity);\r\n        this.updateEntityProp(entity, 'suggestedPrice', () => new Price());\r\n        this.updateEntityProp(entity, 'damage', () => new Modifier());\r\n        this.updateEntityProp(entity, 'prepareTime', () => new ActionTime());\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterEntity(MeleeWeaponBlueprint, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n    CreateColumn('damage', FormFieldType.MODIFIER),\r\n    CreateColumn('placement', FormFieldType.TEXT),\r\n    CreateColumn('suggestedPrice', FormFieldType.PRICE),\r\n    CreateColumn('suggestedWeight', FormFieldType.FLOAT),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('suggestedPrice', FormFieldType.PRICE),\r\n    CreateFormField('suggestedWeight', FormFieldType.INTEGER),\r\n    CreateFormField('damage', FormFieldType.MODIFIER),\r\n    CreateFormField('prepareTime', FormFieldType.ACTION_TIME),\r\n    CreateFormField('placement', FormFieldType.ENUM_COMBOBOX, placementWeaponName),\r\n    CreateFormField('determinantes', FormFieldType.DETERMINANT),\r\n]);","import DeterminantService from \"../../client/DeterminantService\";\r\nimport {FormFieldType}                                 from \"../../form/FormFieldType\";\r\nimport {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport DeterminantContainer                            from \"../rule/DeterminantContainer\";\r\nimport Price                                           from \"../world/Price\";\r\nimport {availabilityEntityName}                        from \"./Availability\";\r\nimport MeleeWeaponBlueprint                            from \"./MeleeWeaponBlueprint\";\r\nimport Resource                                        from \"./Resource\";\r\n\r\nexport default class MeleeWeapon extends DeterminantContainer {\r\n  static entityName: string = 'meleeWeapon';\r\n\r\n  name: string;\r\n  description: string;\r\n  weight: number;\r\n  price: Price = new Price();\r\n  availability: string = 'COMMON';\r\n  primaryResource: Resource;\r\n  secondaryResource: Resource;\r\n  type: MeleeWeaponBlueprint;\r\n\r\n  updateWith(entity: *): MeleeWeapon {\r\n    super.updateWith(entity);\r\n    this.updateEntityProp(entity, 'price', () => new Price());\r\n    this.updateEntityProp(entity, 'primaryResource', () => new Resource());\r\n    this.updateEntityProp(entity, 'secondaryResource', () => new Resource());\r\n    this.updateEntityProp(entity, 'type', () => new MeleeWeaponBlueprint());\r\n    return this;\r\n  }\r\n\r\n  getFinalValueForType(determinantType: string): number {\r\n    return DeterminantService.sumValueByTypeIn(this.type.determinants, determinantType)\r\n           + DeterminantService.sumValueByTypeIn(this.determinants, determinantType);\r\n  }\r\n}\r\n\r\nRegisterEntity(MeleeWeapon,\r\n               [CreateColumn('name', FormFieldType.TEXT),\r\n                CreateColumn('description', FormFieldType.TEXT_AREA),\r\n                CreateColumn('price', FormFieldType.PRICE),\r\n                CreateColumn('type', FormFieldType.ENTITY_SELECT),],\r\n               [CreateFormField('name', FormFieldType.TEXT),\r\n                CreateFormField('description', FormFieldType.TEXT_AREA),\r\n                CreateFormField('weight', FormFieldType.FLOAT),\r\n                CreateFormField('price', FormFieldType.PRICE),\r\n                CreateFormField('availability', FormFieldType.ENUM_SELECT, availabilityEntityName),\r\n                CreateFormField('primaryResource',\r\n                                FormFieldType.ENTITY_SELECT,\r\n                                Resource.entityName),\r\n                CreateFormField('secondaryResource',\r\n                                FormFieldType.ENTITY_SELECT,\r\n                                Resource.entityName),\r\n                CreateFormField('type',\r\n                                FormFieldType.BLUEPRINT_SELECT,\r\n                                MeleeWeaponBlueprint.entityName),\r\n                CreateFormField('determinants', FormFieldType.DETERMINANT),]);\r\n","import Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\n\r\nexport default class SpellSchool extends Entity {\r\n    static entityName: string = 'spellSchool';\r\n\r\n    name: string;\r\n    description: string;\r\n    levels: number = 0;\r\n\r\n    updateWith(entity: *): SpellSchool {\r\n        return super.updateWith(entity);\r\n    }\r\n}\r\n\r\nRegisterEntity(SpellSchool, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n    CreateColumn('levels', FormFieldType.INTEGER),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('levels', FormFieldType.INTEGER),\r\n]);","import Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport ActionTime from \"../rule/ActionTime\";\r\nimport SpellSchool from \"./SpellSchool\";\r\nimport Item from \"../crafting/Item\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\n\r\nexport default class Spell extends Entity {\r\n    static entityName: string = 'spell';\r\n\r\n    name: string;\r\n    description: string;\r\n    effect: string;\r\n    level: number;\r\n    manaCost: number;\r\n    range: number;\r\n    prepareTime: ActionTime = new ActionTime();\r\n    durationTime: ActionTime = new ActionTime();\r\n    spellSchool: SpellSchool;\r\n    ingredients: Item[] = [];\r\n\r\n\r\n    updateWith(entity: Spell): Spell {\r\n        super.updateWith(entity);\r\n        this.updateEntityProp(entity, 'prepareTime', () => new ActionTime());\r\n        this.updateEntityProp(entity, 'durationTime', () => new ActionTime());\r\n        this.updateEntityProp(entity, 'spellSchool', () => new SpellSchool());\r\n        this.updateEntityList(entity, 'ingredients', () => new Item());\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterEntity(Spell, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n    CreateColumn('level', FormFieldType.INTEGER),\r\n    CreateColumn('manaCost', FormFieldType.INTEGER),\r\n    CreateColumn('range', FormFieldType.INTEGER),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('effect', FormFieldType.TEXT_AREA),\r\n    CreateFormField('level', FormFieldType.INTEGER),\r\n    CreateFormField('manaCost', FormFieldType.INTEGER),\r\n    CreateFormField('range', FormFieldType.INTEGER),\r\n    CreateFormField('prepareTime', FormFieldType.ACTION_TIME),\r\n    CreateFormField('durationTime', FormFieldType.ACTION_TIME),\r\n    CreateFormField('spellSchool', FormFieldType.ENTITY_SELECT, SpellSchool.entityName),\r\n    CreateFormField('ingredients', FormFieldType.ENTITY_COMBOBOX, Item.entityName),\r\n]);","import Entity from \"../Entity\";\r\nimport SpellSchool from \"./SpellSchool\";\r\n\r\nexport default class SpellSchoolLevel extends Entity {\r\n    spellSchool: SpellSchool;\r\n    level: number = 0;\r\n\r\n\r\n    updateWith(entity: *): SpellSchoolLevel {\r\n        super.updateWith(entity);\r\n        this.updateEntityProp(entity, 'spellSchool', () => new SpellSchool());\r\n        return this;\r\n    }\r\n}","import Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\n\r\nexport default class Nation extends Entity {\r\n    static entityName: string = 'nation';\r\n\r\n    name: string;\r\n    description: string;\r\n    names: string[] = [];\r\n}\r\n\r\nconst convertToNames = (namesAsString: string) => {\r\n    return namesAsString.replace('\\r', '').split('\\n');\r\n};\r\nconst convertToField = (namesFromModel: string[]) => {\r\n    return namesFromModel.join(\"\\n\");\r\n};\r\n\r\nRegisterEntity(Nation, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA)\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('names', FormFieldType.TEXT_AREA, null, convertToField, convertToNames),\r\n]);\r\n","import {FormFieldType} from \"../../form/FormFieldType\";\r\nimport Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport Nation from \"./Nation\";\r\n\r\nexport default class Language extends Entity {\r\n  static entityName: string = 'worldLanguage';\r\n\r\n  name: string;\r\n  description: string;\r\n  nations: Nation[];\r\n\r\n  updateWith(entity: Language): Language {\r\n    super.updateWith(entity);\r\n    this.updateEntityList(entity, 'nations', () => new Nation());\r\n    return this;\r\n  }\r\n}\r\n\r\nRegisterEntity(Language,\r\n               [CreateColumn('name', FormFieldType.TEXT),\r\n                CreateColumn('description', FormFieldType.TEXT_AREA),],\r\n               [CreateFormField('name', FormFieldType.TEXT),\r\n                CreateFormField('description', FormFieldType.TEXT_AREA),\r\n                CreateFormField('nations', FormFieldType.ENTITY_COMBOBOX, Nation.entityName),]);","import Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport Nation from \"./Nation\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\n\r\nexport default class Currency extends Entity {\r\n    static entityName: string = 'currency';\r\n\r\n    name: string;\r\n    description: string;\r\n    valueMultiplier: number;\r\n    nations: Nation[];\r\n\r\n    updateWith(entity: *): Currency {\r\n        super.updateWith(entity);\r\n        this.updateEntityList(entity, 'nations', () => new Nation());\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterEntity(Currency, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n    CreateColumn('valueMultiplier', FormFieldType.FLOAT)\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('valueMultiplier', FormFieldType.FLOAT),\r\n    CreateFormField('nations', FormFieldType.ENTITY_COMBOBOX, Nation.entityName),\r\n]);","import Entity from \"../Entity\";\r\nimport Price from \"./Price\";\r\nimport {State} from \"../../state/State\";\r\nimport Currency from \"./Currency\";\r\n\r\nexport const entityName = 'money';\r\n\r\nexport default class Money extends Entity {\r\n    currency: Currency;\r\n    amount: Price = new Price();\r\n\r\n\r\n    updateWith(entity: Money): Money {\r\n        super.updateWith(entity);\r\n        this.updateEntityProp(entity, 'currency', State.suppliers.currency);\r\n        this.updateEntityProp(entity, 'amount', State.suppliers.price);\r\n        return this;\r\n    }\r\n}\r\n\r\nState.suppliers[entityName] = () => new Money();\r\n","import DeterminantContainer from \"../rule/DeterminantContainer\";\r\nimport {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\n\r\nexport default class Race extends DeterminantContainer {\r\n    static entityName: string = 'race';\r\n\r\n    name: string;\r\n    specialFeature: string;\r\n}\r\n\r\nRegisterEntity(Race, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('specialFeature', FormFieldType.TEXT_AREA),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('specialFeatures', FormFieldType.TEXT_AREA),\r\n    CreateFormField('determinants', FormFieldType.RACE_DETERMINANTS),\r\n]);","import Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport Nation from \"./Nation\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\n\r\nexport default class Religion extends Entity {\r\n    static entityName: string = 'religion';\r\n\r\n    name: string;\r\n    nations: Nation[] = [];\r\n\r\n    updateWith(entity: Religion): Religion {\r\n        super.updateWith(entity);\r\n        this.updateEntityList(entity, 'nations', () => new Nation());\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterEntity(Religion, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('nations', FormFieldType.ENTITY_COMBOBOX, Nation.entityName),\r\n]);","import {FormFieldType}                                 from \"../../form/FormFieldType\";\r\nimport {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport DeterminantContainer                            from \"../rule/DeterminantContainer\";\r\n\r\nexport default class AnimalKind extends DeterminantContainer {\r\n    static entityName: string = 'animalKind';\r\n\r\n    name: string;\r\n    description: string;\r\n};\r\n\r\nRegisterEntity(AnimalKind,\r\n               [CreateColumn('name', FormFieldType.TEXT),\r\n                CreateColumn('description', FormFieldType.TEXT_AREA),],\r\n               [CreateFormField('name', FormFieldType.TEXT),\r\n                CreateFormField('description', FormFieldType.TEXT_AREA),\r\n                CreateFormField('determinants', FormFieldType.DETERMINANT),]);\r\n","import {FormFieldType}                                 from \"../../form/FormFieldType\";\r\nimport {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport DeterminantContainer                            from \"../rule/DeterminantContainer\";\r\nimport AnimalKind                                      from \"./AnimalKind\";\r\n\r\nexport default class Animal extends DeterminantContainer {\r\n  static entityName: string = 'animal';\r\n\r\n  name: string;\r\n  description: string;\r\n  animalKind: AnimalKind;\r\n\r\n  updateWith(entity: Animal): Animal {\r\n    super.updateWith(entity);\r\n    this.updateEntityProp(entity, 'animalKind', () => new AnimalKind());\r\n    return this;\r\n  }\r\n}\r\n\r\nRegisterEntity(Animal,\r\n               [CreateColumn('name', FormFieldType.TEXT),\r\n                CreateColumn('description', FormFieldType.TEXT_AREA),\r\n                CreateColumn('animalKind', FormFieldType.ENTITY_SELECT)],\r\n               [CreateFormField('name', FormFieldType.TEXT),\r\n                CreateFormField('description', FormFieldType.TEXT_AREA),\r\n                CreateFormField('animalKind', FormFieldType.ENTITY_SELECT, AnimalKind.entityName),\r\n                CreateFormField('determinants', FormFieldType.DETERMINANT),]);\r\n","import Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\n\r\nexport default class Character extends Entity {\r\n    static entityName: string = 'character';\r\n\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nRegisterEntity(Character, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n]);\r\n","import Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\n\r\nexport default class EyeColor extends Entity {\r\n    static entityName: string = 'eyeColor';\r\n\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nRegisterEntity(EyeColor, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n]);\r\n","import Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\n\r\nexport default class HairColor extends Entity {\r\n    static entityName: string = 'hairColor';\r\n\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nRegisterEntity(HairColor, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n]);\r\n","import DeterminantContainer from \"../rule/DeterminantContainer\";\r\nimport Price from \"../world/Price\";\r\nimport Modifier from \"../rule/Modifier\";\r\nimport ActionTime from \"../rule/ActionTime\";\r\nimport {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\nimport {Placement, placementWeaponName} from \"./Placement\";\r\n\r\nexport default class RangedWeaponBlueprint extends DeterminantContainer {\r\n    static entityName: string = 'rangedWeaponBlueprint';\r\n\r\n    name: string;\r\n    description: string;\r\n    suggestedPrice: Price = new Price();\r\n    suggestedWeight: number;\r\n    damage: Modifier = new Modifier();\r\n    prepareTime: ActionTime = new ActionTime();\r\n    placement: string[] = [Placement.HAND];\r\n    minimumRange: number = 0;\r\n    mediumRange: number = 0;\r\n    maximumRange: number = 0;\r\n\r\n    updateWith(entity: RangedWeaponBlueprint): RangedWeaponBlueprint {\r\n        super.updateWith(entity);\r\n        this.updateEntityProp(entity, 'suggestedPrice', () => new Price());\r\n        this.updateEntityProp(entity, 'damage', () => new Modifier());\r\n        this.updateEntityProp(entity, 'prepareTime', () => new ActionTime());\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterEntity(RangedWeaponBlueprint, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n    CreateColumn('damage', FormFieldType.MODIFIER),\r\n    CreateColumn('minimumRange', FormFieldType.INTEGER),\r\n    CreateColumn('mediumRange', FormFieldType.INTEGER),\r\n    CreateColumn('maximumRange', FormFieldType.INTEGER),\r\n    CreateColumn('prepareTime', FormFieldType.ACTION_TIME),\r\n    CreateColumn('suggestedPrice', FormFieldType.PRICE),\r\n    CreateColumn('suggestedWeight', FormFieldType.FLOAT),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('suggestedPrice', FormFieldType.PRICE),\r\n    CreateFormField('suggestedWeight', FormFieldType.INTEGER),\r\n    CreateFormField('damage', FormFieldType.MODIFIER),\r\n    CreateFormField('prepareTime', FormFieldType.ACTION_TIME),\r\n    CreateFormField('placement', FormFieldType.ENUM_COMBOBOX, placementWeaponName),\r\n    CreateFormField('minimumRange', FormFieldType.INTEGER),\r\n    CreateFormField('mediumRange', FormFieldType.INTEGER),\r\n    CreateFormField('maximumRange', FormFieldType.INTEGER),\r\n    CreateFormField('determinants', FormFieldType.DETERMINANT),\r\n]);","import {FormFieldType}                                 from \"../../form/FormFieldType\";\r\nimport {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport DeterminantContainer                            from \"../rule/DeterminantContainer\";\r\nimport Price                                           from \"../world/Price\";\r\nimport ArmorBlueprint                                  from \"./ArmorBlueprint\";\r\nimport ArmorPattern                                    from \"./ArmorPattern\";\r\nimport {availabilityEntityName}                        from \"./Availability\";\r\nimport RangedWeaponBlueprint                           from \"./RangedWeaponBlueprint\";\r\nimport Resource                                        from \"./Resource\";\r\n\r\nexport default class Ammunition extends DeterminantContainer {\r\n    static entityName: string = 'ammunition';\r\n\r\n    name: string;\r\n    description: string;\r\n    weight: number;\r\n    price: Price = new Price();\r\n    availability: string = 'COMMON';\r\n    primaryResource: Resource;\r\n    secondaryResource: Resource;\r\n    weaponTypes: RangedWeaponBlueprint[] = [];\r\n\r\n    updateWith(entity: Ammunition): Ammunition {\r\n        super.updateWith(entity);\r\n        this.updateEntityProp(entity, 'price', () => new Price());\r\n        this.updateEntityProp(entity, 'primaryResource', () => new Resource());\r\n        this.updateEntityProp(entity, 'secondaryResource', () => new Resource());\r\n        this.updateEntityList(entity, 'weaponTypes', () => new RangedWeaponBlueprint());\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterEntity(Ammunition,\r\n               [CreateColumn('name', FormFieldType.TEXT),\r\n                CreateColumn('description', FormFieldType.TEXT_AREA),\r\n                CreateColumn('price', FormFieldType.PRICE),\r\n                CreateColumn('type', FormFieldType.ENTITY_SELECT),\r\n                CreateColumn('availability', FormFieldType.TEXT),\r\n               ],\r\n               [CreateFormField('name', FormFieldType.TEXT),\r\n                CreateFormField('description', FormFieldType.TEXT_AREA),\r\n                CreateFormField('weight', FormFieldType.FLOAT),\r\n                CreateFormField('price', FormFieldType.PRICE),\r\n                CreateFormField('availability', FormFieldType.ENUM_SELECT, availabilityEntityName),\r\n                CreateFormField('primaryResource', FormFieldType.ENTITY_SELECT, Resource.entityName),\r\n                CreateFormField('secondaryResource', FormFieldType.ENTITY_SELECT, Resource.entityName),\r\n                CreateFormField('weaponTypes', FormFieldType.ENTITY_COMBOBOX, RangedWeaponBlueprint.entityName),\r\n                CreateFormField('determinants', FormFieldType.DETERMINANT),]);\r\n","import {FormFieldType}                                 from \"../../form/FormFieldType\";\r\nimport {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport DeterminantContainer                            from \"../rule/DeterminantContainer\";\r\nimport Price                                           from \"../world/Price\";\r\nimport {availabilityEntityName}                        from \"./Availability\";\r\nimport RangedWeaponBlueprint                           from \"./RangedWeaponBlueprint\";\r\nimport Resource                                        from \"./Resource\";\r\n\r\nexport default class RangedWeapon extends DeterminantContainer {\r\n    static entityName: string = 'rangedWeapon';\r\n\r\n    name: string;\r\n    description: string;\r\n    weight: number;\r\n    price: Price = new Price();\r\n    availability: string = 'COMMON';\r\n    primaryResource: Resource;\r\n    secondaryResource: Resource;\r\n    type: RangedWeaponBlueprint;\r\n\r\n    updateWith(entity: RangedWeapon): RangedWeapon {\r\n        super.updateWith(entity);\r\n        this.updateEntityProp(entity, 'price', () => new Price());\r\n        this.updateEntityProp(entity, 'primaryResource', () => new Resource());\r\n        this.updateEntityProp(entity, 'secondaryResource', () => new Resource());\r\n        this.updateEntityProp(entity, 'type', () => new RangedWeaponBlueprint());\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterEntity(RangedWeapon,\r\n               [CreateColumn('name', FormFieldType.TEXT),\r\n                CreateColumn('description', FormFieldType.TEXT_AREA),\r\n                CreateColumn('price', FormFieldType.PRICE),\r\n                CreateColumn('type', FormFieldType.ENTITY_SELECT),],\r\n               [CreateFormField('name', FormFieldType.TEXT),\r\n                CreateFormField('description', FormFieldType.TEXT_AREA),\r\n                CreateFormField('weight', FormFieldType.FLOAT),\r\n                CreateFormField('price', FormFieldType.PRICE),\r\n                CreateFormField('availability', FormFieldType.ENUM_SELECT, availabilityEntityName),\r\n                CreateFormField('primaryResource',\r\n                                FormFieldType.ENTITY_SELECT,\r\n                                Resource.entityName),\r\n                CreateFormField('secondaryResource',\r\n                                FormFieldType.ENTITY_SELECT,\r\n                                Resource.entityName),\r\n                CreateFormField('type',\r\n                                FormFieldType.BLUEPRINT_SELECT,\r\n                                RangedWeaponBlueprint.entityName),\r\n                CreateFormField('determinants', FormFieldType.DETERMINANT),]);\r\n","import Ammunition   from \"../crafting/Ammunition\";\r\nimport RangedWeapon from \"../crafting/RangedWeapon\";\r\nimport Entity       from \"../Entity\";\r\n\r\nexport default class PersonalRangedWeapon extends Entity {\r\n    rangedWeapon: RangedWeapon;\r\n    ammunition: Ammunition;\r\n    ammunitionAmount: number = 0;\r\n\r\n\r\n    updateWith(entity: PersonalRangedWeapon): PersonalRangedWeapon {\r\n        super.updateWith(entity);\r\n        super.updateEntityProp(entity, 'rangedWeapon', () => new RangedWeapon());\r\n        super.updateEntityProp(entity, 'ammunition', () => new Ammunition());\r\n        return this;\r\n    }\r\n}","import DeterminantContainer                            from \"../rule/DeterminantContainer\";\r\nimport {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType}                                 from \"../../form/FormFieldType\";\r\n\r\nexport default class PhysicalFeature extends DeterminantContainer {\r\n    static entityName: string = 'physicalFeature';\r\n\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nRegisterEntity(PhysicalFeature,\r\n               [CreateColumn('name', FormFieldType.TEXT),\r\n                CreateColumn('description', FormFieldType.TEXT_AREA),],\r\n               [CreateFormField('name', FormFieldType.TEXT),\r\n                CreateFormField('description', FormFieldType.TEXT_AREA),\r\n                CreateFormField('determinants', FormFieldType.DETERMINANT),]);\r\n","import {FormFieldType}                        from \"../../form/FormFieldType\";\r\nimport Armor                                  from \"../crafting/Armor\";\r\nimport Inventory                              from \"../crafting/Inventory\";\r\nimport MeleeWeapon                                             from \"../crafting/MeleeWeapon\";\r\nimport Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport Skill                                                   from \"../knowledge/Skill\";\r\nimport Spell                                  from \"../knowledge/Spell\";\r\nimport SpellSchoolLevel                       from \"../knowledge/SpellSchoolLevel\";\r\nimport Profession                             from \"../professions/Profession\";\r\nimport ProfessionClass                        from \"../professions/ProfessionClass\";\r\nimport Language                               from \"../world/Language\";\r\nimport Money                                  from \"../world/Money\";\r\nimport Nation                                 from \"../world/Nation\";\r\nimport Race                                   from \"../world/Race\";\r\nimport Religion                               from \"../world/Religion\";\r\nimport Animal                                 from \"./Animal\";\r\nimport Character                              from \"./Character\";\r\nimport CreatureDeterminants                   from \"./CreatureDeterminants\";\r\nimport EyeColor                               from \"./EyeColor\";\r\nimport HairColor                              from \"./HairColor\";\r\nimport PersonalRangedWeapon                   from \"./PersonalRangedWeapon\";\r\nimport PhysicalFeature                        from \"./PhysicalFeature\";\r\n\r\nexport default class Person extends Entity {\r\n  static entityName: string = 'person';\r\n\r\n  name: string;\r\n  gender: string;\r\n  age: number;\r\n  height: number;\r\n  weight: number;\r\n  fatePoints: number;\r\n  mana: number;\r\n  currentMana: number;\r\n  sanityPoints: number;\r\n  totalExperience: number;\r\n  experience: number;\r\n  birthplace: string;\r\n  parents: string;\r\n  family: string;\r\n  health: string;\r\n  nation: Nation;\r\n  religion: Religion;\r\n  hairColor: HairColor;\r\n  eyeColor: EyeColor;\r\n  physicalFeatures: PhysicalFeature[] = [];\r\n  race: Race;\r\n  personality: Character;\r\n  description: string;\r\n  history: string;\r\n  determinants: CreatureDeterminants = new CreatureDeterminants();\r\n  professionClass: ProfessionClass;\r\n  currentProfession: Profession;\r\n  professions: Profession[] = [];\r\n  skills: Skill[] = [];\r\n  inventory: Inventory[] = [];\r\n  meleeWeapons: MeleeWeapon[] = [];\r\n  rangedWeapons: PersonalRangedWeapon[] = [];\r\n  armor: Armor[] = [];\r\n  spellSchools: SpellSchoolLevel[] = [];\r\n  spells: Spell[] = [];\r\n  animals: Animal[] = [];\r\n  money: Money[] = [];\r\n  languages: Language[] = [];\r\n\r\n  updateWith(entity: *): Person {\r\n    this.updateProp(entity, 'id');\r\n    this.updateProp(entity, 'uuid');\r\n    this.updateProp(entity, 'name');\r\n    this.updateProp(entity, 'gender');\r\n    this.updateNumProp(entity, 'age');\r\n    this.updateNumProp(entity, 'height');\r\n    this.updateNumProp(entity, 'weight');\r\n    this.updateNumProp(entity, 'fatePoints');\r\n    this.updateNumProp(entity, 'mana');\r\n    this.updateNumProp(entity, 'currentMana');\r\n    this.updateNumProp(entity, 'sanityPoints');\r\n    this.updateNumProp(entity, 'totalExperience');\r\n    this.updateNumProp(entity, 'experience');\r\n    this.updateProp(entity, 'birthplace');\r\n    this.updateProp(entity, 'parents');\r\n    this.updateProp(entity, 'family');\r\n    this.updateProp(entity, 'health');\r\n\r\n    this.updateEntityProp(entity, 'nation', () => new Nation());\r\n    this.updateEntityProp(entity, 'religion', () => new Religion());\r\n    this.updateEntityProp(entity, 'hairColor', () => new HairColor());\r\n    this.updateEntityProp(entity, 'eyeColor', () => new EyeColor());\r\n    this.updateEntityProp(entity, 'race', () => new Race());\r\n    this.updateEntityProp(entity, 'personality', () => new Character());\r\n    this.updateEntityProp(entity, 'determinants', () => new CreatureDeterminants());\r\n    this.updateEntityProp(entity, 'professionClass', () => new ProfessionClass());\r\n    this.updateEntityProp(entity, 'currentProfession', () => new Profession());\r\n\r\n    this.updateEntityList(entity, 'physicalFeatures', () => new PhysicalFeature());\r\n    this.updateEntityList(entity, 'professions', () => new Profession());\r\n    this.updateEntityList(entity, 'skills', () => new Skill());\r\n    this.updateEntityList(entity, 'inventory', () => new Inventory());\r\n    this.updateEntityList(entity, 'meleeWeapons', () => new MeleeWeapon());\r\n    this.updateEntityList(entity, 'rangedWeapons', () => new PersonalRangedWeapon());\r\n    this.updateEntityList(entity, 'armor', () => new Armor());\r\n    this.updateEntityList(entity, 'spellSchools', () => new SpellSchoolLevel());\r\n    this.updateEntityList(entity, 'spells', () => new Spell());\r\n    this.updateEntityList(entity, 'animals', () => new Animal());\r\n    this.updateEntityList(entity, 'money', () => new Money());\r\n    this.updateEntityList(entity, 'languages', () => new Language());\r\n\r\n    return this;\r\n  }\r\n}\r\n\r\nRegisterEntity(Person,\r\n               [CreateColumn('name', FormFieldType.TEXT),\r\n                CreateColumn('race', FormFieldType.ENTITY_SELECT),\r\n                CreateColumn('nation', FormFieldType.ENTITY_SELECT),\r\n                CreateColumn('currentProfession', FormFieldType.ENTITY_SELECT),\r\n                CreateColumn('totalExperience', FormFieldType.TEXT),],\r\n               [CreateFormField('person', FormFieldType.CHARACTER_SHEET)]);","import CreatureDeterminants from \"../model/creature/CreatureDeterminants\";\r\nimport Person from \"../model/creature/Person\";\r\nimport Profession from \"../model/professions/Profession\";\r\nimport Determinant from \"../model/rule/Determinant\";\r\nimport Modifier, {ModifierType} from \"../model/rule/Modifier\";\r\nimport Race from \"../model/world/Race\";\r\nimport {State} from \"../state/State\";\r\nimport RemoteService from \"./RemoteService\";\r\n\r\nexport default class DeterminantService extends RemoteService {\r\n  addExperienceExtension(determinant: Determinant, onAdded: VoidFunction) {\r\n    this.requestFor(determinant,\r\n                    'determinant/addExperienceExtension',\r\n                    data => DeterminantService.afterResponse(data, onAdded));\r\n  }\r\n\r\n  removeExperienceExtension(determinant: Determinant, onRemoved) {\r\n    this.requestFor(determinant,\r\n                    'determinant/removeExperienceExtension',\r\n                    data => DeterminantService.afterResponse(data, onRemoved));\r\n  }\r\n\r\n  static afterResponse(data, afterUpdate) {\r\n    const newDeterminant = new Determinant();\r\n    newDeterminant.updateWith(data);\r\n    afterUpdate(newDeterminant);\r\n  }\r\n\r\n  static findDeterminantIn(determinants: Determinant[], type: string) {\r\n    return determinants.find(determinant => type === determinant.type)\r\n  }\r\n\r\n  static removeModifiersByType(modifiers: Modifier[], type: string): Modifier[] {\r\n    let mod = DeterminantService.findModifierByType(modifiers, type);\r\n    while (mod) {\r\n      modifiers.splice(modifiers.indexOf(mod), 1);\r\n      mod = DeterminantService.findModifierByType(modifiers, type);\r\n    }\r\n    return modifiers;\r\n  }\r\n\r\n  static findModifierByType(modifiers: Modifier[], type: string): Modifier {\r\n    return modifiers.find(value => value.type === type);\r\n  }\r\n\r\n  static sumValueByTypeIn(determinants: Determinant[], type: string): number {\r\n    return determinants.filter(det => type === det.type)\r\n                       .reduce((a, b) => a + b.calculateFinalValue(), 0)\r\n  }\r\n\r\n  static updateProfessionExtensions(profession: Profession,\r\n      creatureDeterminants: CreatureDeterminants) {\r\n    creatureDeterminants.determinants = creatureDeterminants.determinants.map(det => {\r\n      DeterminantService.setProfessionExtensions(profession, det);\r\n      return det;\r\n    })\r\n  }\r\n\r\n  static setProfessionExtensions(profession: Profession, determinant: Determinant) {\r\n    const professionExtensions = DeterminantService.findDeterminantIn(profession.determinants,\r\n                                                                      determinant.type);\r\n    if (professionExtensions) {\r\n      determinant.modifiers =\r\n          DeterminantService.removeModifiersByType(determinant.modifiers, ModifierType.PROFESSION);\r\n      professionExtensions.modifiers.forEach(mod => {\r\n        const newMod = new Modifier();\r\n        newMod.type  = mod.type;\r\n        newMod.value = mod.value;\r\n        determinant.modifiers.push(newMod);\r\n      });\r\n    }\r\n  }\r\n\r\n  rollForRace(race: Race) {\r\n    const creature = State.data.entity;\r\n    console.assert(creature.type === Person);\r\n    const currentDeterminant: CreatureDeterminants = creature.determinants;\r\n\r\n    this.requestForPath('determinant/generateDeterminants/' + creature.race.id,\r\n                        (resolved: CreatureDeterminants) => {\r\n                          resolved.determinants.forEach(newValue => {\r\n                            currentDeterminant.updateDeterminantValue(newValue.value, newValue.type)\r\n                          });\r\n                          State.updateEntity({determinants: currentDeterminant});\r\n                        });\r\n  }\r\n}","import {func} from \"prop-types\";\r\nimport RangedWeapon from \"../model/crafting/RangedWeapon\";\r\nimport PersonalRangedWeapon from \"../model/creature/PersonalRangedWeapon\";\r\nimport {State} from \"../state/State\";\r\nimport RemoteService from \"./RemoteService\";\r\n\r\nexport default class GearService extends RemoteService {\r\n    calculateMeleeDamage(weaponId: number, onResponse: func) {\r\n        this.rawGetRequestFor(`gear/getMeleeWeaponDamage/${weaponId}`, onResponse);\r\n    }\r\n\r\n    calculateArmorValue(armorId: number, onResponse: func) {\r\n        this.rawGetRequestFor(`gear/getArmorValue/${armorId}`, onResponse);\r\n    }\r\n\r\n    calculatePersonArmorValue(armorIds: number[], onResponse: func) {\r\n        this.requestFor(armorIds, 'gear/getArmorValuesForGear', onResponse)\r\n    }\r\n\r\n    static addPersonalRangedWeapon(rangedWeapon: RangedWeapon) {\r\n        const pWeps = State.data.entity.rangedWeapons;\r\n        const newPWep = new PersonalRangedWeapon();\r\n        newPWep.rangedWeapon = rangedWeapon;\r\n        pWeps.push(newPWep);\r\n        State.updateEntity({rangedWeapons: pWeps});\r\n    }\r\n}","import {FormFieldType} from \"../../form/FormFieldType\";\r\nimport Person from \"../creature/Person\";\r\nimport Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport SpellSchool from \"../knowledge/SpellSchool\";\r\nimport Nation from \"../world/Nation\";\r\nimport Race from \"../world/Race\";\r\n\r\nexport default class Realm extends Entity {\r\n  static entityName: string = 'realm';\r\n\r\n  name: string;\r\n  nations: Nation[]           = [];\r\n  spellSchools: SpellSchool[] = [];\r\n  persons: Person[]           = [];\r\n\r\n  updateWith(entity: Realm): Realm {\r\n    super.updateWith(entity);\r\n    this.updateEntityList(entity, 'nations', () => new Nation());\r\n    this.updateEntityList(entity, 'races', () => new Race());\r\n    this.updateEntityList(entity, 'spellSchools', () => new SpellSchool());\r\n    this.updateEntityList(entity, 'persons', () => new Person());\r\n    return this;\r\n  }\r\n}\r\n\r\nRegisterEntity(Realm,\r\n               [CreateColumn('name', FormFieldType.TEXT),],\r\n               [CreateFormField('name', FormFieldType.TEXT),\r\n                CreateFormField('nations', FormFieldType.ENTITY_COMBOBOX, Nation.entityName),\r\n                CreateFormField('spellSchools',\r\n                                FormFieldType.ENTITY_COMBOBOX,\r\n                                SpellSchool.entityName),\r\n                CreateFormField('persons', FormFieldType.ENTITY_COMBOBOX, Person.entityName),]);","import Realm from \"../realm/Realm\";\r\nimport SpellSchoolLevel from \"./SpellSchoolLevel\";\r\nimport Skill from \"./Skill\";\r\n\r\nexport default class CurrentMagicKnowledge {\r\n    currentSpellSchools: SpellSchoolLevel[] = [];\r\n    currentSkills: Skill[] = [];\r\n    realm: Realm;\r\n}","import Entity from \"../model/Entity\";\r\n\r\nexport const Collections = {\r\n  except: (from: Array<Entity>, except: Array<Entity>) => {\r\n    return from.filter(a => !except.find(b => a.name === b.name));\r\n  },\r\n\r\n  removeElement: (from: Array<any>, element: any): Array<any> => {\r\n    const indexOf = from.indexOf(element);\r\n    if (indexOf >= 0) {\r\n      from.splice(indexOf, 1);\r\n    }\r\n    return from;\r\n  },\r\n\r\n  addEntityIfNew: (element: any, to: Array<any>): Array<any> => {\r\n    if (!to.find(value => value.id === element.id)) {\r\n      to.push(element);\r\n    }\r\n    return to;\r\n  },\r\n\r\n  findByName: (array: Array, element: object) => {\r\n    return array.find(value => value.name === element.name);\r\n  },\r\n};\r\n\r\nexport function findEntity(array: Array<Entity>, element: Entity): Entity {\r\n  return findIn(array, element, ['name']);\r\n}\r\n\r\nexport function findIn<T>(array: Array<T>,\r\n                          element: T,\r\n                          toMatchPath: string[] = [],\r\n                          elementsPath = toMatchPath): T {\r\n  let toMatch = element;\r\n  toMatchPath.forEach(prop => toMatch = toMatch[prop]);\r\n\r\n  return array.find(t => {\r\n    let value = t;\r\n    elementsPath.forEach(prop => value = value[prop]);\r\n    return value === toMatch;\r\n  });\r\n}\r\n\r\nexport function removeFrom<T>(array: Array<T>, element: T): Array<T> {\r\n  const indexOf = array.indexOf(element);\r\n  if (indexOf >= 0) {\r\n    array.splice(indexOf, 1);\r\n  }\r\n  return array;\r\n}\r\n","import CurrentMagicKnowledge from \"../model/knowledge/CurrentMagicKnowledge\";\r\nimport {State} from \"../state/State\";\r\nimport {findEntity, findIn} from \"../util/Collections\";\r\nimport RemoteService from \"./RemoteService\";\r\n\r\nexport default class MagicService extends RemoteService {\r\n  getAvailableSpellSchools(currentMagicKnowledge: CurrentMagicKnowledge, onResponse: VoidFunction) {\r\n    this.requestFor(currentMagicKnowledge, 'magic/getAvailableSpellSchools', onResponse);\r\n  }\r\n\r\n  static getRelevantSpells() {\r\n    const {spells, spellSchools} = State.data.entity;\r\n    const availableSpells        = State.data.spell;\r\n    return availableSpells.filter(spell => !findEntity(spells, spell))\r\n                          .filter(spell => {\r\n                            const spellSchool = findIn(spellSchools,\r\n                                                       spell,\r\n                                                       ['spellSchool', 'name']);\r\n                            return spellSchool && spellSchool.level >= spell.level;\r\n                          })\r\n  }\r\n}\r\n","import {State} from \"../../state/State\";\r\n\r\nexport const Gender = {\r\n    MALE: 'MALE',\r\n    FEMALE: 'FEMALE',\r\n\r\n    allOf() {\r\n        return [this.MALE, this.FEMALE];\r\n    },\r\n};\r\n\r\nexport const GenderEntityName = 'gender';\r\nState.data[GenderEntityName] = Gender.allOf();","import Inventory from \"../model/crafting/Inventory\";\r\nimport Item from \"../model/crafting/Item\";\r\nimport {State} from \"../state/State\";\r\nimport {findIn, removeFrom} from \"../util/Collections\";\r\n\r\nexport default class ItemService {\r\n  static addItemToInventory(item: Item) {\r\n    let inventory = State.data.entity.inventory;\r\n    if (!findIn(inventory, item, ['name'], ['item', 'name'])) {\r\n      const incomingInventory  = new Inventory();\r\n      incomingInventory.item   = item;\r\n      incomingInventory.amount = 0;\r\n      inventory.push(incomingInventory);\r\n      State.updateEntity({inventory: inventory});\r\n    }\r\n  }\r\n\r\n  static inventoryWeight(): number {\r\n    return State.data.entity.inventory\r\n                .map(value => value.item.weight * value.amount)\r\n                .reduce((a, b) => a + b, 0);\r\n  }\r\n}","import Currency from \"../model/world/Currency\";\r\nimport Money from \"../model/world/Money\";\r\nimport {State} from \"../state/State\";\r\n\r\nexport default class MoneyService {\r\n  static addMoney(currency: Currency) {\r\n    const newMoney = new Money();\r\n    newMoney.currency = currency;\r\n\r\n    State.data.entity.money.push(newMoney);\r\n    State.updateEntity({money: State.data.entity.money})\r\n  }\r\n}","import DeterminantService from \"../client/DeterminantService\";\r\nimport Profession from \"../model/professions/Profession\";\r\nimport {State} from \"../state/State\";\r\nimport {Collections} from \"../util/Collections\";\r\n\r\nexport default class ProfessionService {\r\n  static getProfessions() {\r\n    const currentClass = State.data.entity.professionClass;\r\n    const data         = State.data[Profession.entityName];\r\n    if (currentClass) {\r\n      return data.filter(prof => prof.professionClass && (prof.professionClass.id\r\n                                                          === currentClass.id));\r\n    } else {\r\n      return State.data[Profession.entityName];\r\n    }\r\n  }\r\n\r\n  static updateProfession(profession: Profession) {\r\n    const {professions, determinants} = State.data.entity;\r\n    const newDeterminants = DeterminantService.updateProfessionExtensions(profession, determinants);\r\n    Collections.addEntityIfNew(profession, professions);\r\n    State.updateEntity({currentProfession: profession, professions: professions,\r\n                         determinants: newDeterminants});\r\n  }\r\n\r\n  static removeProfessionFromHistory(profession: Profession) {\r\n    const {professions, currentProfession} = State.data.entity;\r\n    Collections.removeElement(professions, profession);\r\n    if (currentProfession && profession.id === currentProfession.id) {\r\n      State.data.entity.currentProfession = null;\r\n    }\r\n    State.updateEntity({professions: professions});\r\n  }\r\n\r\n  static nextProfessions() {\r\n    const {currentProfession} = State.data.entity;\r\n    if (currentProfession && currentProfession.nextProfessions) {\r\n      return currentProfession.nextProfessions;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n}","// @flow\r\nimport React, {Component} from 'react';\r\nimport {State} from \"../../../state/State\";\r\nimport {removeFrom} from \"../../../util/Collections\";\r\n\r\nexport default class AnimalElement extends Component {\r\n  render() {\r\n    const {animal, ...other} = this.props;\r\n\r\n    return (<div {...other} onContextMenu={event => {\r\n      event.preventDefault();\r\n      State.updateEntity({animals: removeFrom(State.data.entity.animals, animal)})\r\n    }}>\r\n      <div>{animal.name}</div>\r\n    </div>);\r\n  };\r\n};\r\n","import {Placement} from \"../crafting/Placement\";\r\n\r\nexport default class CreatureArmorValues {\r\n    armorValues: Map<string, number>;\r\n\r\n\r\n    constructor() {\r\n        this.armorValues = new Map();\r\n        Placement.allOf().forEach(placement => {\r\n            this.armorValues.set(placement, 0);\r\n        })\r\n    }\r\n\r\n    getArmorValue(placement: string): number {\r\n        return this.armorValues.get(placement);\r\n    }\r\n\r\n    updateWith(values: CreatureArmorValues) {\r\n        this.armorValues = new Map();\r\n        Placement.allOf().map(placement => this.armorValues.set(placement, values[placement]));\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport GearService from \"../../../client/GearService\";\r\nimport {Placement} from \"../../../model/crafting/Placement\";\r\nimport CreatureArmorValues from \"../../../model/creature/CreatureArmorValues\";\r\nimport {State} from \"../../../state/State\";\r\n\r\nconst defaultComponentStyle = {\r\n    position: 'absolute',\r\n    width: 20,\r\n    textAlign: 'center',\r\n};\r\nconst defaultStyle = {\r\n    container: {\r\n        position: 'relative',\r\n    },\r\n    shield: {\r\n        ...defaultComponentStyle,\r\n        left: 130,\r\n        top: 85,\r\n    },\r\n    head: {\r\n        ...defaultComponentStyle,\r\n        left: 15,\r\n        top: 100,\r\n    },\r\n    rightHand: {\r\n        ...defaultComponentStyle,\r\n        left: 15,\r\n        top: 170,\r\n    },\r\n    leftHand: {\r\n        ...defaultComponentStyle,\r\n        left: 155,\r\n        top: 162,\r\n    },\r\n    torso: {\r\n        ...defaultComponentStyle,\r\n        left: 155,\r\n        top: 230,\r\n    },\r\n    rightLeg: {\r\n        ...defaultComponentStyle,\r\n        left: 15,\r\n        top: 295,\r\n    },\r\n    leftLeg: {\r\n        ...defaultComponentStyle,\r\n        left: 155,\r\n        top: 295,\r\n    },\r\n};\r\n\r\nconst gearService = new GearService();\r\n\r\nclass ArmorCalculationsComponent extends Component {\r\n    state = {\r\n        armorValues: new CreatureArmorValues(),\r\n    };\r\n\r\n    updateArmorValues = () => {\r\n        gearService.calculatePersonArmorValue(\r\n            State.data.entity.armor.map(armor => armor.id),\r\n            data => {\r\n                const armorCalcs = new CreatureArmorValues();\r\n                armorCalcs.updateWith(data);\r\n                this.setState({armorValues: armorCalcs, armor: State.data.entity.armor});\r\n            }\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const {classes, className, ...other} = this.props;\r\n        if (State.data.entity.armor !== this.state.armor) {\r\n            this.updateArmorValues();\r\n        }\r\n        return <div className={`${classes.container} ${className}`} {...other}>\r\n            <p className={classes.shield}>{this.state.armorValues.getArmorValue(Placement.SHIELD)}</p>\r\n            <p className={classes.head}>{this.state.armorValues.getArmorValue(Placement.HEAD)}</p>\r\n            <p className={classes.rightHand}>{this.state.armorValues.getArmorValue(Placement.HAND)}</p>\r\n            <p className={classes.leftHand}>{this.state.armorValues.getArmorValue(Placement.HAND)}</p>\r\n            <p className={classes.torso}>{this.state.armorValues.getArmorValue(Placement.TORSO)}</p>\r\n            <p className={classes.rightLeg}>{this.state.armorValues.getArmorValue(Placement.LEG)}</p>\r\n            <p className={classes.leftLeg}>{this.state.armorValues.getArmorValue(Placement.LEG)}</p>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default withStyles(defaultStyle)(ArmorCalculationsComponent)","import React, {Component} from \"react\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport GearService from \"../../../client/GearService\";\r\nimport {State} from \"../../../state/State\";\r\nimport {Collections} from \"../../../util/Collections\";\r\n\r\nconst gearService = new GearService();\r\nconst containerStyle = {display: 'flex', flexDirection: 'row'};\r\n\r\nclass ArmorElement extends Component {\r\n  state = {\r\n    armorValue: ''\r\n  };\r\n\r\n  updateArmor = () => {\r\n    gearService.calculateArmorValue(this.props.armor.id, text =>\r\n        this.setState({armorValue: text, armor: this.props.armor}));\r\n  };\r\n\r\n  updateEntity = armor => event => {\r\n      event.preventDefault();\r\n      State.updateEntity({armor: Collections.removeElement(State.data.entity.armor, armor)});\r\n  };\r\n\r\n  render() {\r\n    const {t, armor, disabled} = this.props;\r\n    if (this.state.armor !== armor) {\r\n      this.updateArmor();\r\n    }\r\n\r\n    let content = [<div style={{width: 150}}>{armor.name}</div>,\r\n                   <div style={{width: 210}}>{t(armor.type.placement)}</div>,\r\n                   <div style={{width: 50}}>{this.state.armorValue}</div>];\r\n\r\n      return disabled ?\r\n        <div style={containerStyle}>{content}</div> :\r\n        <div style={containerStyle} onContextMenu={this.updateEntity(armor)}>{content}</div>;\r\n  }\r\n}\r\n\r\nexport default withTranslation()(ArmorElement);","import withStyles             from \"@material-ui/core/styles/withStyles\";\r\nimport React, {PureComponent} from \"react\";\r\nimport {State}                from \"../../../state/State\";\r\n\r\nconst defaultClass = {\r\n  input: {\r\n    backgroundColor: 'transparent',\r\n    border: 0,\r\n    width: '100%',\r\n    fontFamily: 'wfrp',\r\n    fontSize: '24px',\r\n    textAlign: 'center',\r\n    outline: 'none',\r\n  },\r\n};\r\n\r\nclass SimpleTextField extends PureComponent {\r\n  parse = onChange => event => {\r\n    const {name, variant} = this.props;\r\n    const change = event.target.value;\r\n\r\n    if (change === '') {\r\n      onChange(change);\r\n      return;\r\n    }\r\n\r\n    if (variant === TextFieldType.INT) {\r\n      const value = parseInt(change);\r\n      if (value || value === 0) {\r\n        onChange(value);\r\n      } else {\r\n        event.target.value = State.data.entity[name] || '';\r\n      }\r\n\r\n    } else if (variant === TextFieldType.FLOAT) {\r\n      const value = parseFloat(change);\r\n      if (value || value === 0) {\r\n        onChange(value);\r\n      } else {\r\n        event.target.value = State.data.entity[name] || '';\r\n      }\r\n\r\n    } else {\r\n      onChange(change);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n            name,\r\n            value = State.data.entity[name],\r\n            classes,\r\n            customStyle,\r\n            onChange = val => State.updateEntity({[name]: val}),\r\n            multiline\r\n    } = this.props;\r\n\r\n    return multiline ?\r\n        <textarea className={classes.input} style={customStyle} value={value} onChange={this.parse(onChange)}/> :\r\n        <input className={classes.input} style={customStyle} value={value} onChange={this.parse(onChange)}/>;\r\n  }\r\n}\r\n\r\nexport default withStyles(defaultClass)(SimpleTextField);\r\n\r\nexport const TextFieldType = {\r\n  TEXT: 'TEXT', INT: 'INT', FLOAT: 'FLOAT',\r\n};","// @flow\r\nimport React, {Component} from 'react';\r\nimport SimpleTextField, {TextFieldType} from \"../../../form/sheet/field/SimpleTextField\";\r\nimport {State} from \"../../../state/State\";\r\nimport {removeFrom} from \"../../../util/Collections\";\r\n\r\nclass ItemElement extends Component {\r\n  updateAmount = amount => {\r\n    this.props.inventory.amount = amount;\r\n    State.updateEntity({inventory: State.data.entity.inventory});\r\n  };\r\n\r\n  static calculateWeight = inventory => {\r\n    return inventory.amount * inventory.item.weight;\r\n  };\r\n\r\n  render() {\r\n    const {inventory} = this.props;\r\n    return (<div style={{width: 290, display: 'flex'}}\r\n                 onContextMenu={event => {\r\n                   event.preventDefault();\r\n                   const allInventory = State.data.entity.inventory;\r\n                   removeFrom(allInventory, inventory);\r\n                   State.updateEntity({inventory: allInventory});\r\n                 }}>\r\n      <div style={{width: 150, minWidth: 150}}>{inventory.item.name}</div>\r\n      <div style={{width: 70, textAlign: 'center'}}>{ItemElement.calculateWeight(inventory)}</div>\r\n      <SimpleTextField style={{width: 50, textAlign: 'center'}}\r\n                       variant={TextFieldType.FLOAT}\r\n                       value={inventory.amount}\r\n                       onChange={this.updateAmount}/>\r\n    </div>);\r\n  };\r\n}\r\n\r\nexport default ItemElement;","// @flow\r\nimport React, {Component} from 'react';\r\nimport {State} from \"../../../state/State\";\r\nimport {removeFrom} from \"../../../util/Collections\";\r\nimport SimpleTextField, {TextFieldType} from \"./SimpleTextField\";\r\n\r\nexport default class MoneyElement extends Component {\r\n  updateAmount = amountType => amount => {\r\n    this.props.money.amount[amountType] = amount;\r\n    State.updateEntity({money: State.data.entity.money});\r\n  };\r\n\r\n  render() {\r\n    const {money, ...other} = this.props;\r\n\r\n    return <div {...other} style={{display: 'flex'}} onContextMenu={event => {\r\n      event.preventDefault();\r\n      State.updateEntity({money: removeFrom(State.data.entity.money, money)});\r\n    }}>\r\n      <div style={{width: 145}}>{money.currency.name}</div>\r\n      <SimpleTextField customStyle={{width: 40}}\r\n                       value={money.amount.gold}\r\n                       onChange={this.updateAmount('gold')}\r\n                       variant={TextFieldType.INT}/>\r\n      <SimpleTextField customStyle={{width: 45}}\r\n                       value={money.amount.silver}\r\n                       onChange={this.updateAmount('silver')}\r\n                       variant={TextFieldType.INT}/>\r\n      <SimpleTextField customStyle={{width: 50}}\r\n                       value={money.amount.lead}\r\n                       onChange={this.updateAmount('lead')}\r\n                       variant={TextFieldType.INT}/>\r\n    </div>;\r\n  };\r\n}\r\n","import React, {Component} from \"react\";\r\nimport {withStyles} from \"@material-ui/styles\";\r\nimport Add from \"@material-ui/icons/Add\";\r\nimport DeterminantService from \"../../../client/DeterminantService\";\r\nimport {ModifierType} from \"../../../model/rule/Modifier\";\r\n\r\nconst determinantService = new DeterminantService();\r\n\r\nconst fieldStyle = {\r\n    fieldContainer: {\r\n        position: 'relative'\r\n    },\r\n    extension: {\r\n        position: 'absolute',\r\n        top: '-10px',\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    checkboxContainer: {\r\n        position: 'absolute',\r\n        right: '5px',\r\n        display: 'flex',\r\n        flexFlow: 'row',\r\n        flexWrap: 'wrap',\r\n        maxWidth: 40,\r\n        zIndex: 1\r\n    },\r\n};\r\n\r\nconst ExtMark = props => <Add style={{fontSize: 14, margin: -2}} {...props}/>;\r\n\r\nclass ProfessionExtensionField extends Component {\r\n\r\n    addExtension = () => {\r\n        determinantService.addExperienceExtension(this.props.ext, this.props.onChange);\r\n    };\r\n\r\n    removeExtension = () => {\r\n        determinantService.removeExperienceExtension(this.props.ext, this.props.onChange);\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ext,\r\n            classes,\r\n            customClassName,\r\n            onChange,\r\n            ...other\r\n        } = this.props;\r\n\r\n        let professionValue = '0';\r\n        let extended = [];\r\n\r\n        if (ext) {\r\n            extended = ext.getExperienceExtensions();\r\n            const professionModifier = ext ? ext.modifiers.find(mod => mod.type === ModifierType.PROFESSION) : null;\r\n\r\n            if (professionModifier) {\r\n              professionValue = professionModifier.value;\r\n            }\r\n        }\r\n\r\n        return <div className={`${classes.fieldContainer} ${customClassName}`} {...other}\r\n                    onClick={this.addExtension}\r\n                    onContextMenu={(e) => {e.preventDefault(); this.removeExtension();}}>\r\n            <p className={classes.extension}>{'+' + professionValue}</p>\r\n            <div className={classes.checkboxContainer}>\r\n                {extended.map(mod => <ExtMark key={'' + mod.value + '-' + mod.type}/>)}\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default withStyles(fieldStyle)(ProfessionExtensionField);","import React, {Component} from \"react\";\r\nimport {withStyles} from \"@material-ui/styles\";\r\nimport CreatureDeterminants from \"../../../model/creature/CreatureDeterminants\";\r\nimport {DeterminantType} from \"../../../model/rule/Determinant\";\r\nimport {State} from \"../../../state/State\";\r\nimport ProfessionExtensionField from \"./ProfessionExtensionField\";\r\nimport SimpleTextField, {TextFieldType} from \"./SimpleTextField\";\r\n\r\nexport const PersonalDeterminantFieldStyle = {\r\n    row1: {\r\n        paddingTop: 10,\r\n        maxHeight: 35,\r\n        minHeight: 35,\r\n        width: '100%',\r\n        display: 'flex',\r\n    },\r\n    row2: {\r\n        maxHeight: 50,\r\n        minHeight: 50,\r\n        width: '100%',\r\n        display: 'flex',\r\n    },\r\n    row3: {\r\n        maxHeight: 50,\r\n        minHeight: 50,\r\n        width: '100%',\r\n        display: 'flex',\r\n        textAlign: 'center',\r\n    },\r\n\r\n    firstInRow: {\r\n        minHeight: 50,\r\n        maxHeight: 50,\r\n        minWidth: 47,\r\n        maxWidth: 47,\r\n    },\r\n    otherInRow: {\r\n        maxHeight: 50,\r\n        minHeight: 50,\r\n        minWidth: 47,\r\n        maxWidth: 47,\r\n    },\r\n    otherInRow2: {\r\n        maxHeight: 50,\r\n        minHeight: 50,\r\n        minWidth: 46,\r\n        maxWidth: 46,\r\n    },\r\n    lastRowChild: {\r\n        margin: '15px 0 0 0',\r\n    }\r\n};\r\n\r\nclass PersonalDeterminantsField extends Component {\r\n    updateDeterminant = determinant => value => {\r\n        determinant.value = value;\r\n        State.updateEntity({determinants: State.data.entity.determinants});\r\n    };\r\n\r\n    updateDeterminantExperience = determinant => {\r\n        const determinants: CreatureDeterminants = State.data.entity.determinants;\r\n        determinants.replaceDeterminant(determinant);\r\n        State.updateEntity({determinants: determinants});\r\n    };\r\n\r\n    render() {\r\n        const {classes, ...other} = this.props;\r\n        const person = State.data.entity;\r\n        const determinants: CreatureDeterminants = person.determinants;\r\n        const speed = determinants.findDeterminant(DeterminantType.SPEED);\r\n        const battle = determinants.findDeterminant(DeterminantType.BATTLE);\r\n        const shooting = determinants.findDeterminant(DeterminantType.SHOOTING);\r\n        const strength = determinants.findDeterminant(DeterminantType.STRENGTH);\r\n        const durability = determinants.findDeterminant(DeterminantType.DURABILITY);\r\n        const health = determinants.findDeterminant(DeterminantType.HEALTH);\r\n        const attack = determinants.findDeterminant(DeterminantType.ATTACK);\r\n        const initiative = determinants.findDeterminant(DeterminantType.INITIATIVE);\r\n        const dexterity = determinants.findDeterminant(DeterminantType.DEXTERITY);\r\n        const leaderSkills = determinants.findDeterminant(DeterminantType.LEADER_SKILLS);\r\n        const intelligence = determinants.findDeterminant(DeterminantType.INTELLIGENCE);\r\n        const control = determinants.findDeterminant(DeterminantType.CONTROL);\r\n        const will = determinants.findDeterminant(DeterminantType.WILL);\r\n        const charisma = determinants.findDeterminant(DeterminantType.CHARISMA);\r\n\r\n        return <div {...other}>\r\n            <div className={classes.row1}>\r\n                <SimpleTextField className={classes.firstInRow}  value={speed.value} onChange={this.updateDeterminant(speed)} variant={TextFieldType.INT} />\r\n                <SimpleTextField className={classes.otherInRow}  value={battle.value} onChange={this.updateDeterminant(battle)} variant={TextFieldType.INT} />\r\n                <SimpleTextField className={classes.otherInRow}  value={shooting.value} onChange={this.updateDeterminant(shooting)} variant={TextFieldType.INT} />\r\n                <SimpleTextField className={classes.otherInRow}  value={strength.value} onChange={this.updateDeterminant(strength)} variant={TextFieldType.INT} />\r\n                <SimpleTextField className={classes.otherInRow}  value={durability.value} onChange={this.updateDeterminant(durability)} variant={TextFieldType.INT} />\r\n                <SimpleTextField className={classes.otherInRow2} value={health.value} onChange={this.updateDeterminant(health)} variant={TextFieldType.INT} />\r\n                <SimpleTextField className={classes.otherInRow}  value={initiative.value} onChange={this.updateDeterminant(initiative)} variant={TextFieldType.INT} />\r\n                <SimpleTextField className={classes.otherInRow2} value={attack.value} onChange={this.updateDeterminant(attack)} variant={TextFieldType.INT} />\r\n                <SimpleTextField className={classes.otherInRow2} value={dexterity.value} onChange={this.updateDeterminant(dexterity)} variant={TextFieldType.INT} />\r\n                <SimpleTextField className={classes.otherInRow2} value={leaderSkills.value} onChange={this.updateDeterminant(leaderSkills)} variant={TextFieldType.INT} />\r\n                <SimpleTextField className={classes.otherInRow2} value={intelligence.value} onChange={this.updateDeterminant(intelligence)} variant={TextFieldType.INT} />\r\n                <SimpleTextField className={classes.otherInRow2} value={control.value} onChange={this.updateDeterminant(control)} variant={TextFieldType.INT} />\r\n                <SimpleTextField className={classes.otherInRow2} value={will.value} onChange={this.updateDeterminant(will)} variant={TextFieldType.INT} />\r\n                <SimpleTextField className={classes.otherInRow}  value={charisma.value} onChange={this.updateDeterminant(charisma)} variant={TextFieldType.INT} />\r\n            </div>\r\n            <div className={classes.row2}>\r\n                <ProfessionExtensionField ext={speed} customClassName={classes.firstInRow} onChange={this.updateDeterminantExperience}/>\r\n                <ProfessionExtensionField ext={battle} customClassName={classes.otherInRow} onChange={this.updateDeterminantExperience}/>\r\n                <ProfessionExtensionField ext={shooting} customClassName={classes.otherInRow} onChange={this.updateDeterminantExperience}/>\r\n                <ProfessionExtensionField ext={strength} customClassName={classes.otherInRow} onChange={this.updateDeterminantExperience}/>\r\n                <ProfessionExtensionField ext={durability} customClassName={classes.otherInRow} onChange={this.updateDeterminantExperience}/>\r\n                <ProfessionExtensionField ext={health} customClassName={classes.otherInRow2} onChange={this.updateDeterminantExperience}/>\r\n                <ProfessionExtensionField ext={initiative} customClassName={classes.otherInRow} onChange={this.updateDeterminantExperience}/>\r\n                <ProfessionExtensionField ext={attack} customClassName={classes.otherInRow2} onChange={this.updateDeterminantExperience}/>\r\n                <ProfessionExtensionField ext={dexterity} customClassName={classes.otherInRow2} onChange={this.updateDeterminantExperience}/>\r\n                <ProfessionExtensionField ext={leaderSkills} customClassName={classes.otherInRow2} onChange={this.updateDeterminantExperience}/>\r\n                <ProfessionExtensionField ext={intelligence} customClassName={classes.otherInRow2} onChange={this.updateDeterminantExperience}/>\r\n                <ProfessionExtensionField ext={control} customClassName={classes.otherInRow2} onChange={this.updateDeterminantExperience}/>\r\n                <ProfessionExtensionField ext={will} customClassName={classes.otherInRow2} onChange={this.updateDeterminantExperience}/>\r\n                <ProfessionExtensionField ext={charisma} customClassName={classes.otherInRow} onChange={this.updateDeterminantExperience}/>\r\n            </div>\r\n            <div className={classes.row3}>\r\n                <p className={`${classes.lastRowChild} ${classes.firstInRow} `}>{speed.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow} `}>{battle.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow} `}>{shooting.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow} `}>{strength.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow} `}>{durability.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{health.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow} `}>{initiative.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{attack.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{dexterity.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{leaderSkills.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{intelligence.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{control.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{will.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow} `}>{charisma.calculateExperienceValue()}</p>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default withStyles(PersonalDeterminantFieldStyle)(PersonalDeterminantsField);","import {Tooltip} from \"@material-ui/core\";\r\nimport React, {Component} from \"react\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from 'react-select/animated'\r\nimport {State} from \"../../../state/State\";\r\n\r\nconst simpleStyle      = {\r\n  control: (provided, state) => ({\r\n    width: '100%', display: 'flex'\r\n  }), dropdownIndicator: (provided, state) => ({\r\n    color: 'transparent'\r\n  }), indicatorSeparator: (provided, state) => ({\r\n    color: 'transparent'\r\n  }),\r\n};\r\nconst simpleStyleMulti = {\r\n  control: (provided, state) => ({\r\n    width: '100%', display: 'flex'\r\n  }), dropdownIndicator: (provided, state) => ({\r\n    color: 'transparent'\r\n  }), indicatorSeparator: (provided, state) => ({\r\n    color: 'transparent'\r\n  }), clearIndicator: (provided, state) => ({\r\n    color: 'transparent',\r\n  }), multiValueRemove: (provided, state) => ({\r\n    color: 'ghostwhite', maxHeight: '1px',\r\n  }), singleValue: (provided, state) => ({\r\n    color: 'black', maxHeight: '1px',\r\n  }), multiValueLabel: (provided, state) => ({\r\n    background: 'transparent', display: 'inline-flex', '&::after': {\r\n      content: '\",\"'\r\n    }\r\n  }), multiValue: (provided, state) => ({\r\n    background: 'transparent', display: 'inline-flex', height: '14px'\r\n  }),\r\n};\r\n\r\nexport default class SimpleEntitySelect extends Component {\r\n  render() {\r\n    const {\r\n            name,\r\n            propName = name,\r\n            value = State.data.entity[propName],\r\n            options = State.data[name],\r\n            multi,\r\n            className,\r\n            customStyle,\r\n            onChange = selected => State.updateEntity({[propName]: selected})\r\n          } = this.props;\r\n\r\n    return <Tooltip title={value && value.description ? value.description : ''}>\r\n      <div style={{...{display: 'inline-block'}, ...customStyle}}>\r\n        <Select className={className}\r\n                styles={multi ? simpleStyleMulti : simpleStyle}\r\n                value={value}\r\n                options={options}\r\n                onChange={onChange}\r\n                components={makeAnimated()}\r\n                getOptionLabel={option => {\r\n                  return <div>{option.name}</div>\r\n                }}\r\n                getOptionValue={option => {\r\n                  return option.id\r\n                }}\r\n                filterOption={(option, input) => option.data.name.startsWith(input)}\r\n                placeholder={<div/>}\r\n                isSearchable\r\n                isMulti={multi}/>\r\n      </div>\r\n    </Tooltip>;\r\n  }\r\n}","import React, {Component} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Ammunition from \"../../../model/crafting/Ammunition\";\r\nimport {State} from \"../../../state/State\";\r\nimport {Collections} from \"../../../util/Collections\";\r\nimport SimpleEntitySelect from \"./SimpleEntitySelect\";\r\nimport SimpleTextField, {TextFieldType} from \"./SimpleTextField\";\r\n\r\nconst weaponElementStyle = {\r\n    ammunitionAmountField: {\r\n        minWidth: 40,\r\n        maxWidth: 40,\r\n    }\r\n};\r\n\r\nclass RangedWeaponElement extends Component {\r\n    render() {\r\n        const {\r\n            pWep,\r\n        } = this.props;\r\n        const weapon = pWep.rangedWeapon;\r\n        const weaponType = weapon.type;\r\n        const prepareTime = weaponType.prepareTime.toString();\r\n\r\n        return <div style={{display: 'flex', flexDirection: 'column'}}\r\n                    onContextMenu={event => {\r\n            event.preventDefault();\r\n            State.updateEntity({['rangedWeapons']: Collections.removeElement(State.data.entity.rangedWeapons, pWep)});\r\n        }}>\r\n            <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                <div style={{width: 190}}>{weapon.name}</div>\r\n                <div style={{width: 38, textAlign: 'center'}}>{weaponType.minimumRange}</div>\r\n                <div style={{width: 38, textAlign: 'center'}}>{weaponType.mediumRange}</div>\r\n                <div style={{width: 38, textAlign: 'center'}}>{weaponType.maximumRange}</div>\r\n                <div style={{width: 38, textAlign: 'center'}}>{weaponType.damage.value}</div>\r\n                <div style={{width: 38, textAlign: 'center'}}>{prepareTime}</div>\r\n            </div>\r\n            <div style={{width: 170, height: 45, marginLeft: 10, display: 'flex'}}>\r\n                <SimpleEntitySelect name={Ammunition.entityName}\r\n                                    customStyle={{width: 140, height: 45}}\r\n                                    value={pWep.ammunition}\r\n                                    onChange={selected => {\r\n                                        pWep.ammunition = selected;\r\n                                        this.setState({newAmmunition: selected});\r\n                                    }}/>\r\n                <div onContextMenu={event => {\r\n                    event.preventDefault();\r\n                    pWep.ammunition = null;\r\n                    pWep.ammunitionAmount = 0;\r\n                    this.setState({newAmmunition: null});\r\n                }}>\r\n                    {\r\n                        pWep.ammunition ?\r\n                            <SimpleTextField customStyle={{width: 40}}\r\n                                             value={pWep.ammunitionAmount}\r\n                                             variant={TextFieldType.INT}\r\n                                             onChange={value => {\r\n                                                 pWep.ammunitionAmount = value;\r\n                                                 this.setState({currentAmount: value});\r\n                                             }}/> :\r\n                            <div/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default withStyles(weaponElementStyle)(RangedWeaponElement)","import {List} from \"@material-ui/core\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {Component} from \"react\";\r\nimport {State} from \"../../../state/State\";\r\nimport {Collections} from \"../../../util/Collections\";\r\nimport SimpleEntitySelect from \"./SimpleEntitySelect\";\r\nimport SimpleBar from 'simplebar-react';\r\nimport 'simplebar/dist/simplebar.min.css'\r\n\r\nconst fieldStyle = {\r\n  container: {\r\n    width: '100%'\r\n  }, selectComponent: {\r\n    width: '100%'\r\n  }, itemsList: {\r\n    height: '100%', width: '100%', overflow: 'auto',\r\n  }, itemContainer: {\r\n    display: 'flex', flexDirection: 'row'\r\n  },\r\n};\r\n\r\nconst selectStyle = {\r\n  placeholder: () => ({\r\n    color: 'transparent'\r\n  }), singleValue: () => ({\r\n    color: 'transparent'\r\n  }),\r\n};\r\n\r\nclass SelectableList extends Component {\r\n\r\n  render() {\r\n    const {\r\n            classes,\r\n            customStyle,\r\n            listStyle,\r\n            name,\r\n            propName = name,\r\n            value = State.data.entity[name],\r\n            data = State.data[name],\r\n            onGearAdd = selected => State.updateEntity(\r\n                {[propName]: Collections.addEntityIfNew(selected, State.data.entity[propName])}),\r\n            children,\r\n            ...other\r\n          } = this.props;\r\n\r\n    const currentStyle = {...classes, ...customStyle};\r\n\r\n    return <div style={{width: '100%'}} {...other}>\r\n      <SimpleEntitySelect name={name}\r\n                          options={data}\r\n                          customStyle={{width: '100%'}}\r\n                          onChange={onGearAdd}\r\n                          value={null}/>\r\n                          <SimpleBar style={{...{height: '100%', width: '100%'}, ...listStyle}}>\r\n                            {children}\r\n                          </SimpleBar>\r\n{/*\r\n      <List style={{...{height: '100%', width: '100%', overflow: 'auto'}, ...listStyle}}>\r\n      </List>\r\n*/}\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default withStyles(fieldStyle)(SelectableList)","import React, {Component} from \"react\";\r\nimport Select             from \"react-select\";\r\nimport makeAnimated       from 'react-select/animated'\r\nimport {State}            from \"../../../state/State\";\r\n\r\nconst simpleStyle = {\r\n  control: (provided, state) => ({\r\n    width: '100%', display: 'flex'\r\n  }), dropdownIndicator: (provided, state) => ({\r\n    color: 'transparent'\r\n  }), indicatorSeparator: (provided, state) => ({\r\n    color: 'white'\r\n  }),\r\n};\r\n\r\nexport default class SimpleEnumSelect extends Component {\r\n\r\n  getData = source => {\r\n    return source.map(e => {\r\n      return {label: e, value: e};\r\n    });\r\n  };\r\n\r\n  onSelected = selected => {\r\n    this.props.onChange(selected && selected.value)\r\n  };\r\n\r\n  render() {\r\n    const {name, value = State.data.entity[name], options = State.data[name], ...other} = this.props;\r\n\r\n    return <Select {...other}\r\n                   styles={simpleStyle}\r\n                   options={options}\r\n                   value={{label: value, value: value}}\r\n                   getOptionLabel={val => <div>{val.label ? val.label : (typeof val === \"string\"\r\n                       ? val\r\n                       : undefined)}</div>}\r\n                   getOptionValue={val => val}\r\n                   onChange={selected => State.updateEntity({[name]: selected})}\r\n                   components={makeAnimated()}\r\n                   isSearchable/>;\r\n  }\r\n}","import Tooltip from \"@material-ui/core/Tooltip\";\r\nimport React, {Component} from \"react\";\r\nimport {Menu, MenuItem} from \"@material-ui/core\";\r\nimport {State} from \"../../../state/State\";\r\n\r\nexport default class SimpleList extends Component {\r\n    state = {\r\n        anchorEl: null,\r\n        currentElement: null\r\n    };\r\n\r\n    handleClick = element => event => {\r\n        this.setState({anchorEl: event.currentTarget, currentElement: element})\r\n    };\r\n\r\n    onRemove = element => () => {\r\n        this.handleClose();\r\n        this.props.onRemove(element);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({anchorEl: null, currentElement: null})\r\n    };\r\n\r\n    render() {\r\n        const {name, data = State.data.entity[name], onRemove, ...other} = this.props;\r\n        return <div {...other}>\r\n            {data.map((element, index) => {\r\n                    const value = element.name || element;\r\n                    return <div key={'listed-entity-' + value} style={{display: 'inline-block'}}>\r\n                        {\r\n                            element.name ?\r\n                                element.description ?\r\n                                    <Tooltip title={element.description}><p onClick={this.handleClick(element)} style={{margin: 0}}>{(index > 0 ? ', ' : '') + value}</p></Tooltip> :\r\n                                    <p onClick={this.handleClick(element)} style={{margin: 0}}>{(index > 0 ? ', ' : '') + value}</p> :\r\n                                <p style={{margin: 0}}>{(index > 0 ? ', ' : '') + value}</p>\r\n                        }\r\n                        {\r\n                            element.name\r\n                            && <Menu id={'listed-menu-item-' + element.name}\r\n                                     anchorEl={this.state.anchorEl}\r\n                                     open={element === this.state.currentElement && this.state.anchorEl !== null}\r\n                                     onClose={this.handleClose}>\r\n                                {\r\n                                    <MenuItem onClick={this.onRemove(element)}>Remove</MenuItem>\r\n                                }\r\n                            </Menu>\r\n                        }\r\n                    </div>\r\n                }\r\n            )}\r\n        </div>;\r\n    }\r\n}","// @flow\r\nimport React, {Component} from 'react';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {DeterminantType} from \"../../../model/rule/Determinant\";\r\nimport {State} from \"../../../state/State\";\r\n\r\nconst componentStyle = {\r\n    container: {\r\n        height: 160,\r\n        width: 200,\r\n        paddingLeft: 140,\r\n        paddingTop: 80,\r\n        display: 'flex',\r\n        flexFlow: 'column',\r\n    },\r\n\r\n    firstRow: {\r\n        display: 'flex',\r\n        height: 45,\r\n        width: '100%',\r\n    },\r\n    nextRow: {\r\n        display: 'flex',\r\n        height: 45,\r\n        width: '100%',\r\n    },\r\n    cell: {\r\n        width: 70,\r\n        textAlign: 'center',\r\n        alignSelf: 'center',\r\n    },\r\n};\r\n\r\nclass SpeedComponent extends Component {\r\n    calc = (speed, tempo) => [speed * tempo, speed * tempo * 6, speed * tempo * 360 / 1000];\r\n    calculateSpeed = speed => [this.calc(speed, 2), this.calc(speed, 4), this.calc(speed, 16)];\r\n\r\n    render() {\r\n        const {classes, entity = State.data.entity} = this.props;\r\n        const speed = this.calculateSpeed(entity.determinants.findDeterminant(DeterminantType.SPEED).calculateExperienceValue());\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <div className={classes.firstRow}>\r\n                    <div className={classes.cell}>{speed[0][0]}</div>\r\n                    <div className={classes.cell}>{speed[0][1]}</div>\r\n                    <div className={classes.cell}>{speed[0][2]}</div>\r\n                </div>\r\n                <div className={classes.nextRow}>\r\n                    <div className={classes.cell}>{speed[1][0]}</div>\r\n                    <div className={classes.cell}>{speed[1][1]}</div>\r\n                    <div className={classes.cell}>{speed[1][2]}</div>\r\n                </div>\r\n                <div className={classes.nextRow}>\r\n                    <div className={classes.cell}>{speed[2][0]}</div>\r\n                    <div className={classes.cell}>{speed[2][1]}</div>\r\n                    <div className={classes.cell}>{speed[2][2]}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default withStyles(componentStyle)(SpeedComponent);","// @flow\r\nimport React, {Component} from 'react';\r\nimport {State} from \"../../../state/State\";\r\nimport {removeFrom} from \"../../../util/Collections\";\r\n\r\nclass SpellElement extends Component {\r\n  onContextMenu = spell => event => {\r\n    event.preventDefault();\r\n    State.updateEntity({spells: removeFrom(State.data.entity.spells, spell)});\r\n  };\r\n\r\n  render() {\r\n    const {spell, disabled} = this.props;\r\n    const ingredientsText   = spell.ingredients.map(item => item.name).join(', ');\r\n\r\n    const content = [<div style={{width: 155}}>{spell.name}</div>,\r\n                     <div style={{textAlign: 'center', width: 47}}>{spell.level}</div>,\r\n                     <div style={{textAlign: 'center', width: 47}}>{spell.manaCost}</div>,\r\n                     <div style={{textAlign: 'center', width: 47}}>{spell.range}</div>,\r\n                     <div style={{\r\n                       textAlign: 'center', width: 47\r\n                     }}>{spell.durationTime.toString()}</div>,\r\n                     <div style={{width: 140}}>{ingredientsText}</div>,\r\n                     <div style={{width: 130}}>{spell.effect}</div>,];\r\n    return disabled ?\r\n        <div style={{display: 'flex'}}>{content}</div> :\r\n        <div style={{display: 'flex'}} onContextMenu={this.onContextMenu(spell)}>{content}</div>;\r\n  };\r\n};\r\n\r\nexport default SpellElement;","import React, {Component} from 'react';\r\nimport MagicService from \"../../../client/MagicService\";\r\nimport CurrentMagicKnowledge from \"../../../model/knowledge/CurrentMagicKnowledge\";\r\nimport SpellSchoolLevel from \"../../../model/knowledge/SpellSchoolLevel\";\r\nimport {State} from \"../../../state/State\";\r\nimport {removeFrom} from \"../../../util/Collections\";\r\nimport SelectableList from \"./SelectableList\";\r\n\r\nclass SpellSchoolList extends Component {\r\n  static magicService = new MagicService();\r\n  state               = {\r\n    availableSpellSchools: new Map(),\r\n  };\r\n\r\n  onSpellSchoolAdd = magicSchool => {\r\n    const entity              = State.data.entity;\r\n    const currentSpellSchools = entity.spellSchools;\r\n    const currentLevelIndex   = currentSpellSchools.indexOf(currentSpellSchools.find(value => value.spellSchool.name\r\n                                                                                              === magicSchool.name));\r\n\r\n    if (currentLevelIndex >= 0) {\r\n      currentSpellSchools.splice(currentLevelIndex, 1);\r\n    }\r\n    let newSpellSchool = this.state.availableSpellSchools.get(magicSchool);\r\n    State.updateEntity({spellSchools: [...currentSpellSchools, newSpellSchool]});\r\n  };\r\n\r\n  onSpellSchoolRemove = spellSchool => event => {\r\n    event.preventDefault();\r\n    let newSpellSchools = removeFrom(State.data.entity.spellSchools, spellSchool);\r\n    this.refreshRelevantMagicSchools();\r\n    State.updateEntity({spellSchools: newSpellSchools});\r\n  };\r\n\r\n  refreshRelevantMagicSchools = () => {\r\n    const currentMagicKnowledge: CurrentMagicKnowledge = new CurrentMagicKnowledge();\r\n    currentMagicKnowledge.currentSpellSchools          = State.data.entity.spellSchools;\r\n    currentMagicKnowledge.realm                        = State.data.currentRealm;\r\n    SpellSchoolList.magicService.getAvailableSpellSchools(currentMagicKnowledge,\r\n                                                          this.setSpellSchools);\r\n  };\r\n\r\n  setSpellSchools = spellSchools => {\r\n    this.setState({\r\n                    availableSpellSchools: this.assembleSpellSchools(spellSchools),\r\n                    currentSpellSchools: State.data.entity.spellSchools\r\n                  });\r\n  };\r\n\r\n  assembleSpellSchools = spellSchools => {\r\n    const map = this.state.availableSpellSchools;\r\n    map.clear();\r\n    spellSchools.forEach(spellSchoolLevel => map.set(spellSchoolLevel.spellSchool,\r\n                                                     spellSchoolLevel));\r\n    return map;\r\n  };\r\n\r\n  static spellSchoolLevelText = (spellSchoolLevel: SpellSchoolLevel) => {\r\n    return spellSchoolLevel.spellSchool.name + ' p. ' + spellSchoolLevel.level;\r\n  };\r\n\r\n  render() {\r\n    const entity = State.data.entity;\r\n\r\n    if (this.state.currentSpellSchools !== entity.spellSchools) {\r\n      this.refreshRelevantMagicSchools();\r\n    }\r\n    const availableSpellSchools = [...this.state.availableSpellSchools.keys()];\r\n\r\n    return <div>\r\n      <SelectableList style={{height: 400, width: 200, paddingTop: 10}}\r\n                      listStyle={{height: 300, width: '100%', overflow: 'auto'}}\r\n                      data={availableSpellSchools}\r\n                      onGearAdd={this.onSpellSchoolAdd}>\r\n        {entity.spellSchools.map(spellSchoolLevel => <p\r\n            key={SpellSchoolList.spellSchoolLevelText(spellSchoolLevel)} style={{margin: 0}}\r\n            onContextMenu={this.onSpellSchoolRemove(spellSchoolLevel)}>\r\n          {SpellSchoolList.spellSchoolLevelText(spellSchoolLevel)}\r\n        </p>)}\r\n      </SelectableList>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default SpellSchoolList;","import React, {Component} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport GearService from \"../../../client/GearService\";\r\nimport {DeterminantType} from \"../../../model/rule/Determinant\";\r\nimport {State} from \"../../../state/State\";\r\nimport {Collections} from \"../../../util/Collections\";\r\n\r\nconst weaponElementStyle = {\r\n    itemContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'row'\r\n    },\r\n    itemName: {\r\n        minWidth: 180,\r\n        maxWidth: 180,\r\n    },\r\n    itemVariable: {\r\n        minWidth: 51,\r\n        maxWidth: 51,\r\n        textAlign: 'center',\r\n    },\r\n    damageText: {\r\n        minWidth: 51,\r\n        maxWidth: 51,\r\n        textAlign: 'center',\r\n        fontSize: 12,\r\n        paddingTop: 5,\r\n    },\r\n};\r\n\r\nconst weaponService = new GearService();\r\n\r\nclass WeaponElement extends Component {\r\n    state = {\r\n        damageText: ''\r\n    };\r\n\r\n    updateDamageValue = () => {\r\n        weaponService.calculateMeleeDamage(this.props.weapon.id, text => this.setState({\r\n            damageText: text,\r\n            weapon: this.props.weapon\r\n        }))\r\n    };\r\n\r\n    onRightClick = (name, weapon) => event => {\r\n        event.preventDefault();\r\n        State.updateEntity({[name]: Collections.removeElement(State.data.entity[name], weapon)});\r\n    };\r\n\r\n    render() {\r\n        const {name, classes, customStyle, weapon, disabled} = this.props;\r\n        const currentStyle = {...classes, ...customStyle};\r\n        if (weapon !== this.state.weapon) {\r\n            this.updateDamageValue();\r\n        }\r\n\r\n        const content = [\r\n            <div className={currentStyle.itemName}>{weapon.name}</div>,\r\n            <div className={currentStyle.itemVariable}>{weapon.getFinalValueForType(DeterminantType.INITIATIVE)}</div>,\r\n            <div className={currentStyle.itemVariable}>{weapon.getFinalValueForType(DeterminantType.BATTLE)}</div>,\r\n            <div className={currentStyle.damageText}>{this.state.damageText}</div>,\r\n            <div className={currentStyle.itemVariable}>{weapon.getFinalValueForType(DeterminantType.PARRY)}</div>];\r\n\r\n        return disabled ?\r\n            <div className={currentStyle.itemContainer}>{content}</div> :\r\n            <div className={currentStyle.itemContainer} onContextMenu={this.onRightClick(name, weapon)}>{content}</div>;\r\n    }\r\n}\r\n\r\nexport default withStyles(weaponElementStyle)(WeaponElement)","import {Menu, MenuItem, Tooltip} from \"@material-ui/core\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport PropTypes from 'prop-types';\r\nimport React, {Component} from 'react';\r\nimport {withTranslation} from \"react-i18next\";\r\nimport DeterminantService from \"../../client/DeterminantService\";\r\nimport GearService from \"../../client/GearService\";\r\nimport MagicService from \"../../client/MagicService\";\r\nimport FrontCharacterSheet from \"../../img/A.png\";\r\nimport Armor from \"../../model/crafting/Armor\";\r\nimport Item from \"../../model/crafting/Item\";\r\nimport MeleeWeapon from \"../../model/crafting/MeleeWeapon\";\r\nimport RangedWeapon from \"../../model/crafting/RangedWeapon\";\r\nimport Animal from \"../../model/creature/Animal\";\r\nimport Character from \"../../model/creature/Character\";\r\nimport EyeColor from \"../../model/creature/EyeColor\";\r\nimport {GenderEntityName} from \"../../model/creature/Gender\";\r\nimport HairColor from \"../../model/creature/HairColor\";\r\nimport PhysicalFeature from \"../../model/creature/PhysicalFeature\";\r\nimport Skill from \"../../model/knowledge/Skill\";\r\nimport Spell from \"../../model/knowledge/Spell\";\r\nimport Profession from \"../../model/professions/Profession\";\r\nimport ProfessionClass from \"../../model/professions/ProfessionClass\";\r\nimport Currency from \"../../model/world/Currency\";\r\nimport Language from \"../../model/world/Language\";\r\nimport Nation from \"../../model/world/Nation\";\r\nimport Race from \"../../model/world/Race\";\r\nimport Religion from \"../../model/world/Religion\";\r\nimport ItemService from \"../../service/ItemService\";\r\nimport MoneyService from \"../../service/MoneyService\";\r\nimport ProfessionService from \"../../service/ProfessionService\";\r\nimport {State} from \"../../state/State\";\r\nimport {Collections, removeFrom} from \"../../util/Collections\";\r\nimport AnimalElement from \"./field/AnimalElement\";\r\nimport ArmorCalculationsComponent from \"./field/ArmorCalculationsComponent\";\r\nimport ArmorElement from \"./field/ArmorElement\";\r\nimport ItemElement from \"./field/ItemElement\";\r\nimport MoneyElement from \"./field/MoneyElement\";\r\nimport PersonalDeterminantsField from \"./field/PersonalDeterminantsField\";\r\nimport RangedWeaponElement from \"./field/RangedWeaponElement\";\r\nimport SelectableList from \"./field/SelectableList\";\r\nimport SimpleEntitySelect from \"./field/SimpleEntitySelect\";\r\nimport SimpleEnumSelect from \"./field/SimpleEnumSelect\";\r\nimport SimpleList from \"./field/SimpleList\";\r\nimport SimpleTextField, {TextFieldType} from \"./field/SimpleTextField\";\r\nimport SpeedComponent from \"./field/SpeedComponent\";\r\nimport SpellElement from \"./field/SpellElement\";\r\nimport SpellSchoolList from \"./field/SpellSchoolList\";\r\nimport WeaponElement from \"./field/WeaponElement\";\r\n\r\nconst styles = () => ({\r\n  root: {\r\n    marginTop: 5,\r\n    background: `url(${FrontCharacterSheet})`,\r\n    fontFamily: 'wfrp',\r\n    fontSize: '24px',\r\n    backgroundSize: 'cover',\r\n    height: '1231px',\r\n    width: '1800px',\r\n    display: 'flex'\r\n  },\r\n\r\n  genderSelect: {\r\n    display: 'inline-block', width: 85,\r\n  },\r\n});\r\n\r\nclass CharacterSheetForm extends Component {\r\n  determinantService: DeterminantService = new DeterminantService();\r\n  state = {anchorEl: null, currentElement: null,\r\n    generateStatsAction: () => {\r\n      const race = State.data.entity.race;\r\n      race && this.determinantService.rollForRace(race);\r\n    }};\r\n\r\n  handleClose = () => {\r\n    this.setState({anchorEl: null, showMenu: ''})\r\n  };\r\n\r\n  render() {\r\n    const {classes, t} = this.props;\r\n    const entity    = State.data.entity;\r\n\r\n    return <div className={classes.root}>\r\n\r\n      {/*page one*/}\r\n      <div style={{width: 900, height: 1230}}>\r\n\r\n        {/*basic data*/}\r\n        <div style={{paddingTop: 33, paddingLeft: 33, width: 860}}>\r\n          <SimpleTextField name={'name'} customStyle={{width: 200}}/>\r\n          <SimpleEntitySelect name={Race.entityName} customStyle={{width: 140, paddingLeft: 20}} options={State.data.currentRealmData.races}/>\r\n          <SimpleEnumSelect name={GenderEntityName} className={classes.genderSelect}/>\r\n          <SimpleEntitySelect name={ProfessionClass.entityName} customStyle={{width: 240}}/>\r\n          <SimpleEntitySelect name={Character.entityName} propName={'personality'} customStyle={{width: 148}}/>\r\n        </div>\r\n        <div style={{paddingTop: 30, paddingLeft: 33, width: 860}}>\r\n          <SimpleTextField name={'age'} variant={TextFieldType.INT} customStyle={{width: 80}}/>\r\n          <SimpleTextField name={'height'} variant={TextFieldType.INT} customStyle={{width: 100, paddingLeft: 10}}/>\r\n          <SimpleTextField name={'weight'} variant={TextFieldType.FLOAT} customStyle={{width: 90, paddingLeft: 20}}/>\r\n          <SimpleEntitySelect name={HairColor.entityName} customStyle={{width: 110, paddingLeft: 10}}/>\r\n          <SimpleEntitySelect name={EyeColor.entityName} customStyle={{width: 90, paddingLeft: 0}}/>\r\n          <SimpleEntitySelect name={PhysicalFeature.entityName} propName={'physicalFeatures'} multi customStyle={{width: 280, paddingLeft: 60, maxHeight: 70, position: 'relative', top: -30, fontSize: '14px'}}/>\r\n        </div>\r\n\r\n        {/*profession*/}\r\n        <div style={{paddingTop: 30, paddingLeft: 33, width: 860}}>\r\n          <SimpleEntitySelect name={Profession.entityName} propName={'currentProfession'} options={ProfessionService.getProfessions()} onChange={ProfessionService.updateProfession} customStyle={{width: 240, paddingLeft: 0}}/>\r\n          <SimpleList name={'professions'} onRemove={ProfessionService.removeProfessionFromHistory} style={{display: 'inline-block', width: 350, fontSize: '14px'}}/>\r\n          <SimpleList name={'outgoingProfessions'} data={ProfessionService.nextProfessions()} onRemove={ProfessionService.removeProfessionFromHistory} style={{display: 'inline-block', width: 200, fontSize: '14px'}}/>\r\n        </div>\r\n\r\n        {/*determinants*/}\r\n        <div style={{paddingTop: 43, width: 890, display: 'flex'}}>\r\n          <div style={{width: 230, height: 50}} onContextMenu={event => {\r\n            event.preventDefault();\r\n            this.setState({anchorEl: event.target, currentElement: ['generateStats']});\r\n          }}/>\r\n          <PersonalDeterminantsField style={{width: 650}}/>\r\n        </div>\r\n\r\n        {/*skills and equipment*/}\r\n        <div style={{paddingTop: 10, paddingLeft: 20, width: 860, display: 'flex'}}>\r\n\r\n          {/*gear*/}\r\n          <div style={{paddingTop: 0, paddingLeft: 0, width: 430}}>\r\n            <SelectableList style={{width: 400, height: 220, paddingLeft: 40, paddingTop: 10}} listStyle={{height: 180}} name={MeleeWeapon.entityName} propName={'meleeWeapons'}>\r\n              {entity.meleeWeapons.map(weapon => <WeaponElement key={weapon.name} name={'meleeWeapons'} weapon={weapon}/>)}\r\n            </SelectableList>\r\n            <SelectableList style={{width: 400, height: 230, paddingLeft: 30, paddingTop: 10}} listStyle={{height: 180}} name={RangedWeapon.entityName} onGearAdd={GearService.addPersonalRangedWeapon}>\r\n              {entity.rangedWeapons.map(weapon => <RangedWeaponElement key={weapon.rangedWeapon.name} name={'meleeWeapons'} pWep={weapon}/>)}\r\n            </SelectableList>\r\n            <SelectableList style={{width: 400, height: 220, paddingLeft: 20}} name={Armor.entityName}>\r\n              {entity.armor.map(armor => <ArmorElement key={armor.name} name={'meleeWeapons'} armor={armor}/>)}\r\n            </SelectableList>\r\n          </div>\r\n\r\n          {/*skills and armor*/}\r\n          <div style={{paddingTop: 0, paddingLeft: 10, width: 210}}>\r\n\r\n            {/*skills*/}\r\n            <SelectableList style={{width: 200, height: 360, paddingLeft: 0, paddingTop: 10}} listStyle={{height: 300}} name={Skill.entityName} propName={'skills'} data={Collections.except(State.data.skill, entity.skills)}>\r\n              {entity.skills.map(skill => <Tooltip title={skill.description}><p key={skill.name} style={{margin: 0}}\r\n                                             onContextMenu={event => {\r\n                                               event.preventDefault();\r\n                                               State.updateEntity({\r\n                                                                    skills: Collections.removeElement(\r\n                                                                        entity.skills,\r\n                                                                        skill)\r\n                                                                  });\r\n                                             }}>{skill.name}</p></Tooltip>)}\r\n            </SelectableList>\r\n\r\n            {/*armor values*/}\r\n            <ArmorCalculationsComponent/>\r\n          </div>\r\n\r\n          {/*magic schools*/}\r\n          <SpellSchoolList/>\r\n        </div>\r\n      </div>\r\n\r\n      {/*page two*/}\r\n      <div style={{width: 900, height: 1230}}>\r\n\r\n        {/*spells*/}\r\n        <div style={{paddingTop: 0, paddingLeft: 20, width: 840}}>\r\n          <div style={{paddingTop: 0, paddingLeft: 20, width: 840, display: 'flex'}}>\r\n            <SelectableList style={{width: 630}} listStyle={{height: 220}} name={Spell.entityName} propName={'spells'} data={MagicService.getRelevantSpells()}>\r\n              {entity.spells.map(spell => <SpellElement spell={spell}/>)}\r\n            </SelectableList>\r\n\r\n            {/*fate and mana*/}\r\n            <div style={{width: 200}}>\r\n              <SimpleTextField name={'fatePoints'}  variant={TextFieldType.INT} customStyle={{width: '100%', height: 50, paddingTop: 55}}/>\r\n              <SimpleTextField name={'mana'}  variant={TextFieldType.INT} customStyle={{width: '100%', height: 50, paddingTop: 30}}/>\r\n              <SimpleTextField name={'currentMana'}  variant={TextFieldType.INT} customStyle={{width: '100%', height: 50, paddingTop: 35}}/>\r\n            </div>\r\n          </div>\r\n\r\n          {/*personal belongings*/}\r\n          <div style={{display: 'flex'}}>\r\n            <div style={{width: 300, paddingTop: 20}}>\r\n\r\n              {/*equipment*/}\r\n              <SelectableList style={{width: 300}} listStyle={{height: 370}} name={Item.entityName} onGearAdd={ItemService.addItemToInventory}>\r\n                {entity.inventory.map(eq => <ItemElement key={eq.item.name} inventory={eq}/>)}\r\n              </SelectableList>\r\n              <div style={{paddingLeft: 220}}>{ItemService.inventoryWeight()} kg</div>\r\n\r\n              {/*money*/}\r\n              <SelectableList style={{width: 285}} listStyle={{height: 150}} name={Currency.entityName} data={State.data.currentRealmData.currencies} onGearAdd={MoneyService.addMoney}>\r\n                {entity.money.map(money => <MoneyElement key={money.currency.name} money={money}/>)}\r\n              </SelectableList>\r\n\r\n            </div>\r\n\r\n            {/*other description*/}\r\n            <div>\r\n              <SpeedComponent/>\r\n\r\n              {/*personality*/}\r\n              <div style={{width: 350, height: 160, paddingTop: 10, display: 'flex'}}>\r\n\r\n                {/*languages*/}\r\n                <SelectableList style={{width: 100, paddingTop: 15}} listStyle={{height: 100}} name={Language.entityName} propName={'languages'} data={State.data.currentRealmData.languages}>\r\n                  {entity.languages.map(lang => <div onContextMenu={event => {\r\n                    event.preventDefault();\r\n                    State.updateEntity({languages: removeFrom(entity.languages, lang)});\r\n                  }}>{lang.name}</div>)}\r\n                </SelectableList>\r\n\r\n                {/*health*/}\r\n                <SimpleTextField name={'health'} variant={TextFieldType.TEXT} multiline customStyle={{width: 130, height: 100, alignSelf: 'flex-end'}}/>\r\n                <SimpleTextField name={'sanityPoints'} variant={TextFieldType.INT} customStyle={{width: 100, paddingLeft: 10}}/>\r\n              </div>\r\n\r\n              {/*history*/}\r\n              <div style={{width: 350}}>\r\n                <SimpleEntitySelect name={Nation.entityName} customStyle={{width: 170, height:50, marginLeft: 170, marginTop: 50}} options={State.data.currentRealmData.nations}/>\r\n                <SimpleTextField name={'parents'} variant={TextFieldType.TEXT} customStyle={{width: 120, height: 35, marginTop: 0, marginLeft: 220}}/>\r\n                <SimpleTextField name={'family'} variant={TextFieldType.TEXT} customStyle={{width: 220, height: 80, marginLeft: 110}}/>\r\n              </div>\r\n\r\n              {/*religion*/}\r\n              <div style={{width: 350, display: 'flex'}}>\r\n                <SimpleTextField name={'socialLevel'} variant={TextFieldType.TEXT} customStyle={{width: 80, height: 60, marginTop: 10, marginLeft: 110}}/>\r\n                <SimpleEntitySelect name={Religion.entityName} customStyle={{width: 150, marginTop: 35, marginLeft: 5}} data={State.data.currentRealmData.religions}/>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            {/*experience*/}\r\n            <div style={{marginLeft: 20, marginTop: 50}}>\r\n              <div style={{marginTop: 20}}>aktualnie:</div>\r\n              <SimpleTextField name={'experience'} variant={TextFieldType.INT} customStyle={{width: 150, height: 150}}/>\r\n              <div style={{marginTop: 20}}>całkowicie:</div>\r\n              <SimpleTextField name={'totalExperience'} variant={TextFieldType.INT} customStyle={{width: 150, height: 150}}/>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          {/*animals*/}\r\n          <SelectableList style={{width: 700}} listStyle={{height: 100}} name={Animal.entityName} propName={'animals'}>\r\n            {entity.animals.map(animal => <AnimalElement animal={animal}/>)}\r\n          </SelectableList>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <Menu anchorEl={this.state.anchorEl}\r\n            open={this.state.currentElement && this.state.anchorEl !== null}\r\n            onClose={this.handleClose}>\r\n        {\r\n          this.state.currentElement && this.state.currentElement.map(elementName =>\r\n            <MenuItem onClick={() => {\r\n              this.handleClose();\r\n              this.state[elementName + 'Action']();\r\n            }}>{t(elementName)}</MenuItem>\r\n          )\r\n        }\r\n      </Menu>\r\n    </div>;\r\n  }\r\n}\r\n\r\nCharacterSheetForm.propTypes = {\r\n  classes: PropTypes.object\r\n};\r\n\r\nexport default withStyles(styles)(withTranslation()(CharacterSheetForm));","import Add from \"@material-ui/icons/Add\";\r\nimport {withStyles} from \"@material-ui/styles\";\r\nimport React, {Component} from \"react\";\r\nimport {ModifierType} from \"../../../model/rule/Modifier\";\r\n\r\nconst fieldStyle = {\r\n    fieldContainer: {\r\n        position: 'relative'\r\n    },\r\n    extension: {\r\n        position: 'absolute',\r\n        top: '-10px',\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    checkboxContainer: {\r\n        position: 'absolute',\r\n        right: '5px',\r\n        display: 'flex',\r\n        flexFlow: 'row',\r\n        flexWrap: 'wrap',\r\n        maxWidth: 40,\r\n        zIndex: 1\r\n    },\r\n};\r\n\r\nconst ExtMark = props => <Add style={{fontSize: 14, margin: -2}} {...props}/>;\r\n\r\nclass ProfessionExtensionField extends Component {\r\n    render() {\r\n        const {\r\n            ext,\r\n            classes,\r\n            customClassName,\r\n            ...other\r\n        } = this.props;\r\n\r\n        let professionValue = '0';\r\n        let extended = [];\r\n\r\n        if (ext) {\r\n            extended = ext.getExperienceExtensions();\r\n            const professionModifier = ext ? ext.modifiers.find(mod => mod.type === ModifierType.PROFESSION) : null;\r\n\r\n            if (professionModifier) {\r\n              professionValue = professionModifier.value;\r\n            }\r\n        }\r\n\r\n        return <div className={`${classes.fieldContainer} ${customClassName}`} {...other}>\r\n            <p className={classes.extension}>{'+' + professionValue}</p>\r\n            <div className={classes.checkboxContainer}>\r\n                {extended.map(mod => <ExtMark key={'' + mod.value + '-' + mod.type}/>)}\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default withStyles(fieldStyle)(ProfessionExtensionField);","import {withStyles} from \"@material-ui/styles\";\r\nimport React, {Component} from \"react\";\r\nimport CreatureDeterminants from \"../../../model/creature/CreatureDeterminants\";\r\nimport {DeterminantType} from \"../../../model/rule/Determinant\";\r\nimport {State} from \"../../../state/State\";\r\nimport {PersonalDeterminantFieldStyle} from \"./PersonalDeterminantsField\";\r\nimport ProfessionExtensionView from \"./ProfessionExtensionView\";\r\n\r\nclass PersonalDeterminantsField extends Component {\r\n    render() {\r\n        const {classes, ...other} = this.props;\r\n        const person = State.data.entity;\r\n        const determinants: CreatureDeterminants = person.determinants;\r\n        const speed = determinants.findDeterminant(DeterminantType.SPEED);\r\n        const battle = determinants.findDeterminant(DeterminantType.BATTLE);\r\n        const shooting = determinants.findDeterminant(DeterminantType.SHOOTING);\r\n        const strength = determinants.findDeterminant(DeterminantType.STRENGTH);\r\n        const durability = determinants.findDeterminant(DeterminantType.DURABILITY);\r\n        const health = determinants.findDeterminant(DeterminantType.HEALTH);\r\n        const attack = determinants.findDeterminant(DeterminantType.ATTACK);\r\n        const initiative = determinants.findDeterminant(DeterminantType.INITIATIVE);\r\n        const dexterity = determinants.findDeterminant(DeterminantType.DEXTERITY);\r\n        const leaderSkills = determinants.findDeterminant(DeterminantType.LEADER_SKILLS);\r\n        const intelligence = determinants.findDeterminant(DeterminantType.INTELLIGENCE);\r\n        const control = determinants.findDeterminant(DeterminantType.CONTROL);\r\n        const will = determinants.findDeterminant(DeterminantType.WILL);\r\n        const charisma = determinants.findDeterminant(DeterminantType.CHARISMA);\r\n\r\n        return <div {...other}>\r\n            <div className={classes.row1} style={{paddingLeft: 15}}>\r\n                <div className={classes.firstInRow}>{speed.value}</div>\r\n                <div className={classes.otherInRow}>{battle.value}</div>\r\n                <div className={classes.otherInRow}>{shooting.value}</div>\r\n                <div className={classes.otherInRow}>{strength.value}</div>\r\n                <div className={classes.otherInRow}>{durability.value}</div>\r\n                <div className={classes.otherInRow2}>{health.value}</div>\r\n                <div className={classes.otherInRow}>{initiative.value}</div>\r\n                <div className={classes.otherInRow2}>{attack.value}</div>\r\n                <div className={classes.otherInRow2}>{dexterity.value}</div>\r\n                <div className={classes.otherInRow2}>{leaderSkills.value}</div>\r\n                <div className={classes.otherInRow2}>{intelligence.value}</div>\r\n                <div className={classes.otherInRow2}>{control.value}</div>\r\n                <div className={classes.otherInRow2}>{will.value}</div>\r\n                <div className={classes.otherInRow}>{charisma.value}</div>\r\n            </div>\r\n            <div className={classes.row2}>\r\n                <ProfessionExtensionView ext={speed} customClassName={classes.firstInRow}/>\r\n                <ProfessionExtensionView ext={battle} customClassName={classes.otherInRow}/>\r\n                <ProfessionExtensionView ext={shooting} customClassName={classes.otherInRow}/>\r\n                <ProfessionExtensionView ext={strength} customClassName={classes.otherInRow}/>\r\n                <ProfessionExtensionView ext={durability} customClassName={classes.otherInRow}/>\r\n                <ProfessionExtensionView ext={health} customClassName={classes.otherInRow2}/>\r\n                <ProfessionExtensionView ext={initiative} customClassName={classes.otherInRow}/>\r\n                <ProfessionExtensionView ext={attack} customClassName={classes.otherInRow2}/>\r\n                <ProfessionExtensionView ext={dexterity} customClassName={classes.otherInRow2}/>\r\n                <ProfessionExtensionView ext={leaderSkills} customClassName={classes.otherInRow2}/>\r\n                <ProfessionExtensionView ext={intelligence} customClassName={classes.otherInRow2}/>\r\n                <ProfessionExtensionView ext={control} customClassName={classes.otherInRow2}/>\r\n                <ProfessionExtensionView ext={will} customClassName={classes.otherInRow2}/>\r\n                <ProfessionExtensionView ext={charisma} customClassName={classes.otherInRow}/>\r\n            </div>\r\n            <div className={classes.row3}>\r\n                <p className={`${classes.lastRowChild} ${classes.firstInRow} `}>{speed.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow} `}>{battle.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow} `}>{shooting.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow} `}>{strength.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow} `}>{durability.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{health.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow} `}>{initiative.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{attack.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{dexterity.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{leaderSkills.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{intelligence.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{control.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{will.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow} `}>{charisma.calculateExperienceValue()}</p>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default withStyles(PersonalDeterminantFieldStyle)(PersonalDeterminantsField);","import React, {Component} from \"react\";\r\n\r\nclass RangedWeaponElement extends Component {\r\n    render() {\r\n        const {\r\n            pWep,\r\n        } = this.props;\r\n        const weapon = pWep.rangedWeapon;\r\n        const weaponType = weapon.type;\r\n        const prepareTime = weaponType.prepareTime.toString();\r\n\r\n        return <div style={{display: 'flex', flexDirection: 'column'}}>\r\n            <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                <div style={{width: 190}}>{weapon.name}</div>\r\n                <div style={{width: 38, textAlign: 'center'}}>{weaponType.minimumRange}</div>\r\n                <div style={{width: 38, textAlign: 'center'}}>{weaponType.mediumRange}</div>\r\n                <div style={{width: 38, textAlign: 'center'}}>{weaponType.maximumRange}</div>\r\n                <div style={{width: 38, textAlign: 'center'}}>{weaponType.damage.value}</div>\r\n                <div style={{width: 38, textAlign: 'center'}}>{prepareTime}</div>\r\n            </div>\r\n            <div style={{width: 170, height: 45, marginLeft: 10, display: 'flex'}}>\r\n                <div style={{width: 140, height: 45}}>{pWep.ammunition && pWep.ammunition.name}</div>\r\n                <div>{pWep.ammunition ? <div style={{width: 40}}>{pWep.ammunitionAmount}</div> : <div/>}</div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default RangedWeaponElement;","import React, {Component} from 'react';\r\nimport SimpleBar from 'simplebar-react';\r\n\r\nclass SimpleListView extends Component {\r\n  render() {\r\n    const {children, data, listStyle, ...other} = this.props;\r\n\r\n    return <div {...other}>\r\n      <SimpleBar style={{...{height: '100%', width: '100%'}, ...listStyle}}>\r\n        {children}\r\n        {data && data.map(element => <div>{element.name || element}</div>)}\r\n      </SimpleBar>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default SimpleListView;","import {Menu, MenuItem, Tooltip} from \"@material-ui/core\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport PropTypes from 'prop-types';\r\nimport React, {Component} from 'react';\r\nimport {withTranslation} from \"react-i18next\";\r\nimport DeterminantService from \"../../client/DeterminantService\";\r\nimport FrontCharacterSheet from \"../../img/A.png\";\r\nimport Animal from \"../../model/creature/Animal\";\r\nimport ItemService from \"../../service/ItemService\";\r\nimport ProfessionService from \"../../service/ProfessionService\";\r\nimport {State} from \"../../state/State\";\r\nimport AnimalElement from \"./field/AnimalElement\";\r\nimport ArmorCalculationsComponent from \"./field/ArmorCalculationsComponent\";\r\nimport ArmorElement from \"./field/ArmorElement\";\r\nimport ItemElement from \"./field/ItemElement\";\r\nimport PersonalDeterminantsView from \"./field/PersonalDeterminantsView\";\r\nimport RangedWeaponElementView from \"./field/RangedWeaponElementView\";\r\nimport SimpleList from \"./field/SimpleList\";\r\nimport SimpleListView from \"./field/SimpleListView\";\r\nimport SpeedComponent from \"./field/SpeedComponent\";\r\nimport SpellElement from \"./field/SpellElement\";\r\nimport SpellSchoolList from \"./field/SpellSchoolList\";\r\nimport WeaponElement from \"./field/WeaponElement\";\r\n\r\nconst styles = () => ({\r\n  root: {\r\n    marginTop: 5,\r\n    background: `url(${FrontCharacterSheet})`,\r\n    fontFamily: 'wfrp',\r\n    fontSize: '24px',\r\n    backgroundSize: 'cover',\r\n    height: '1231px',\r\n    width: '1800px',\r\n    display: 'flex'\r\n  },\r\n\r\n  genderSelect: {\r\n    display: 'inline-block', width: 85,\r\n  },\r\n});\r\n\r\nclass CharacterSheetView extends Component {\r\n  determinantService: DeterminantService = new DeterminantService();\r\n  state = {anchorEl: null, currentElement: null,\r\n    generateStatsAction: () => {\r\n      const race = State.data.entity.race;\r\n      race && this.determinantService.rollForRace(race);\r\n    }};\r\n\r\n  handleClose = () => {\r\n    this.setState({anchorEl: null, showMenu: ''})\r\n  };\r\n\r\n  listToDivs = (array: Object[]) => {\r\n    return array ? array.map(e => <div>{e.name}</div>) : <div/>\r\n  };\r\n\r\n\r\n  render() {\r\n    const {classes, t, editable} = this.props;\r\n    const entity    = State.data.entity;\r\n\r\n    return <div className={classes.root}>\r\n\r\n      {/*page one*/}\r\n      <div style={{width: 900, height: 1230}}>\r\n\r\n        {/*basic data*/}\r\n        <div style={{paddingTop: 40, paddingLeft: 33, width: 860, display: 'flex'}}>\r\n          <div style={{width: 200}}>{entity.name}</div>\r\n          <div style={{width: 140, paddingLeft: 20}}>{entity.race && entity.race.name}</div>\r\n          <div style={{display: 'inline-block', width: 85}}>{entity.gender === 'MALE' ? 'M' : 'K'}</div>\r\n          <div style={{width: 240}}>{entity.professionClass && entity.professionClass.name}</div>\r\n          <div style={{width: 148}}>{t(entity.personality && entity.personality.name)}</div>\r\n        </div>\r\n        <div style={{paddingTop: 40, paddingLeft: 33, width: 860, display: 'flex'}}>\r\n          <div style={{width: 80, paddingLeft: 5}}>{entity.age}</div>\r\n          <div style={{width: 100, paddingLeft: 10}}>{entity.height} cm</div>\r\n          <div style={{width: 90, paddingLeft: 20}}>{entity.weight} kg</div>\r\n          <div style={{width: 110, paddingLeft: 10}}>{entity.hairColor && entity.hairColor.name}</div>\r\n          <div style={{width: 90, paddingLeft: 0}}>{entity.eyeColor && entity.eyeColor.name}</div>\r\n          <div style={{width: 265, paddingLeft: 70, maxHeight: 70, position: 'relative', top: -30, fontSize: '14px'}}>{this.listToDivs(entity.physicalFeatures)}</div>\r\n        </div>\r\n\r\n        {/*profession*/}\r\n        <div style={{paddingTop: 40, paddingLeft: 33, width: 860, display: 'flex'}}>\r\n          <div style={{width: 240, paddingLeft: 10}}>{entity.currentProfession && entity.currentProfession.name}</div>\r\n          <SimpleListView data={entity.professions} style={{display: 'inline-block', width: 350, fontSize: '14px'}}/>\r\n          <SimpleList name={'outgoingProfessions'} data={ProfessionService.nextProfessions()} onRemove={ProfessionService.removeProfessionFromHistory} style={{display: 'inline-block', width: 200, fontSize: '14px'}}/>\r\n        </div>\r\n\r\n        {/*determinants*/}\r\n        <div style={{paddingTop: 50, width: 890, display: 'flex'}}>\r\n          <div style={{width: 230, height: 50}}/>\r\n          <PersonalDeterminantsView style={{width: 650}}/>\r\n        </div>\r\n\r\n        {/*skills and equipment*/}\r\n        <div style={{paddingTop: 0, paddingLeft: 20, width: 860, display: 'flex'}}>\r\n\r\n          {/*gear*/}\r\n          <div style={{paddingTop: 0, paddingLeft: 0, width: 430}}>\r\n            <SimpleListView style={{width: 400, height: 170, paddingLeft: 40, paddingTop: 60}}>\r\n              {entity.meleeWeapons.map(weapon => <WeaponElement key={weapon.name} name={'meleeWeapons'} weapon={weapon} disabled/>)}\r\n            </SimpleListView>\r\n            <SimpleListView style={{width: 400, height: 180, paddingLeft: 30, paddingTop: 60}}>\r\n              {entity.rangedWeapons.map(weapon => <RangedWeaponElementView key={weapon.rangedWeapon.name} pWep={weapon}/>)}\r\n            </SimpleListView>\r\n            <SimpleListView style={{width: 400, height: 230, paddingLeft: 20, paddingTop: 50}}>\r\n              {entity.armor.map(armor => <ArmorElement key={armor.name} name={'meleeWeapons'} armor={armor} disabled/>)}\r\n            </SimpleListView>\r\n          </div>\r\n\r\n          {/*skills and armor*/}\r\n          <div style={{paddingTop: 0, paddingLeft: 10, width: 210}}>\r\n\r\n            {/*skills*/}\r\n            <SimpleListView style={{width: 200, height: 315, paddingLeft: 0, paddingTop: 60}}>\r\n              {entity.skills.map(skill => <Tooltip title={skill.description}><p key={skill.name} style={{margin: 0}}>{skill.name}</p></Tooltip>)}\r\n            </SimpleListView>\r\n\r\n            {/*armor values*/}\r\n            <ArmorCalculationsComponent/>\r\n          </div>\r\n\r\n          {/*magic schools*/}\r\n          <SimpleListView style={{height: 350, width: 200, paddingTop: 60}} listStyle={{height: 250, width: '100%', overflow: 'auto'}}>\r\n            {entity.spellSchools.map(spellSchoolLevel =>\r\n                                         <p key={SpellSchoolList.spellSchoolLevelText(spellSchoolLevel)} style={{margin: 0}}>\r\n                                           {SpellSchoolList.spellSchoolLevelText(spellSchoolLevel)}\r\n                                         </p>)}\r\n          </SimpleListView>\r\n        </div>\r\n      </div>\r\n\r\n      {/*page two*/}\r\n      <div style={{width: 900, height: 1230}}>\r\n\r\n        {/*spells*/}\r\n        <div style={{paddingTop: 0, paddingLeft: 20, width: 840}}>\r\n          <div style={{paddingTop: 0, paddingLeft: 20, width: 840, display: 'flex'}}>\r\n            <SimpleListView style={{width: 630, height: 170, paddingTop: 50}}>\r\n              {entity.spells.map(spell => <SpellElement spell={spell} disabled/>)}\r\n            </SimpleListView>\r\n\r\n            {/*fate and mana*/}\r\n            <div style={{width: 200}}>\r\n              <div style={{width: '100%', height: 50, paddingTop: 60, textAlign: 'center'}}>{entity.fatePoints}</div>\r\n              <div style={{width: '100%', height: 50, paddingTop: 35, textAlign: 'center'}}>{entity.mana}</div>\r\n              <div style={{width: '100%', height: 50, paddingTop: 40, textAlign: 'center'}}>{entity.currentMana}</div>\r\n            </div>\r\n          </div>\r\n\r\n          {/*personal belongings*/}\r\n          <div style={{display: 'flex'}}>\r\n            <div style={{width: 300, paddingTop: 20}}>\r\n\r\n              {/*equipment*/}\r\n              <SimpleListView style={{width: 300, height: 368, paddingTop: 30}}>\r\n                {entity.inventory.map(eq => <div key={eq.id} style={{width: 290, display: 'flex'}}>\r\n                  <div style={{width: 150, minWidth: 150}}>{eq.item.name}</div>\r\n                  <div style={{width: 70, textAlign: 'center'}}>{ItemElement.calculateWeight(eq)} kg</div>\r\n                  <div style={{width: 50, textAlign: 'center'}}>{eq.amount}</div>\r\n                </div>)}\r\n              </SimpleListView>\r\n              <div style={{paddingLeft: 200}}>{ItemService.inventoryWeight()} kg</div>\r\n\r\n              {/*money*/}\r\n              <SimpleListView style={{width: 285, height: 150, paddingTop: 50}}>\r\n                {entity.money.map(money =>\r\n                                      <div style={{display: 'flex'}}>\r\n                                        <div style={{width: 150}}>{money.currency.name}</div>\r\n                                        <div style={{width: 35, textAlign: 'center'}}>{money.amount.gold}</div>\r\n                                        <div style={{width: 35, textAlign: 'center'}}>{money.amount.silver}</div>\r\n                                        <div style={{width: 50, textAlign: 'center'}}>{money.amount.lead}</div>\r\n                                      </div>\r\n                )}\r\n              </SimpleListView>\r\n\r\n            </div>\r\n\r\n            {/*other description*/}\r\n            <div>\r\n              <SpeedComponent/>\r\n\r\n              {/*personality*/}\r\n              <div style={{width: 350, height: 160, paddingTop: 55, display: 'flex'}}>\r\n\r\n                {/*languages*/}\r\n                <SimpleListView style={{width: 90, height: 100}}>\r\n                  {entity.languages.map(lang => <div>{lang.name}</div>)}\r\n                </SimpleListView>\r\n\r\n                {/*health*/}\r\n                <div style={{width: 130, height: 100, paddingLeft: 10}}>{entity.health}</div>\r\n                <div style={{width: 100, paddingLeft: 10, textAlign: 'center'}}>{entity.sanityPoints}</div>\r\n              </div>\r\n\r\n              {/*history*/}\r\n              <div style={{width: 350}}>\r\n                <div style={{width: 170, height:50, marginLeft: 170, marginTop: 50}}>{entity.nation && entity.nation.name}</div>\r\n                <div style={{width: 120, height: 35, marginTop: 0, marginLeft: 220}}>{entity.parents}</div>\r\n                <div style={{width: 220, height: 80, marginLeft: 110}}>{entity.family}</div>\r\n              </div>\r\n\r\n              {/*religion*/}\r\n              <div style={{width: 350, display: 'flex'}}>\r\n                <div style={{width: 80, height: 60, marginTop: 10, marginLeft: 110}}>{entity.socialLevel}</div>\r\n                <div style={{width: 150, marginTop: 35, marginLeft: 5}}>{entity.religion && entity.religion.name}</div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            {/*experience*/}\r\n            <div style={{marginLeft: 20, marginTop: 50}}>\r\n              <div style={{marginTop: 20}}>aktualnie:</div>\r\n              <div style={{width: 150, height: 150}}>{entity.experience}</div>\r\n              <div style={{marginTop: 20}}>całkowicie:</div>\r\n              <div style={{width: 150, height: 150}}>{entity.totalExperience}</div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          {/*animals*/}\r\n          <SimpleListView style={{width: 700}} listStyle={{height: 100}} name={Animal.entityName} propName={'animals'}>\r\n            {entity.animals.map(animal => <AnimalElement animal={animal}/>)}\r\n          </SimpleListView>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <Menu anchorEl={this.state.anchorEl}\r\n            open={this.state.currentElement && this.state.anchorEl !== null}\r\n            onClose={this.handleClose}>\r\n        {\r\n          this.state.currentElement && this.state.currentElement.map(elementName =>\r\n            <MenuItem onClick={() => {\r\n              this.handleClose();\r\n              this.state[elementName + 'Action']();\r\n            }}>{t(elementName)}</MenuItem>\r\n          )\r\n        }\r\n      </Menu>\r\n    </div>;\r\n  }\r\n}\r\n\r\nCharacterSheetView.propTypes = {\r\n  classes: PropTypes.object\r\n};\r\n\r\nexport default withStyles(styles)(withTranslation()(CharacterSheetView));","import {TextField} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {State} from \"../state/State\";\r\nimport ActionTimeField from \"./field/ActionTimeField\";\r\nimport BlueprintSelect from \"./field/BlueprintSelect\";\r\nimport DeterminantField from \"./field/DeterminantField\";\r\nimport EntitySelect from \"./field/EntitySelect\";\r\nimport EnumSelect from \"./field/EnumSelect\";\r\nimport IntegerField from \"./field/IntegerField\";\r\nimport ModifierField from \"./field/ModifierField\";\r\nimport PriceField from \"./field/PriceField\";\r\nimport RaceDeterminantsField from \"./field/RaceDeterminantsField\";\r\nimport FormFieldData from \"./FormFieldData\";\r\nimport {FormFieldType} from \"./FormFieldType\";\r\nimport CharacterSheetForm from \"./sheet/CharacterSheetForm\";\r\nimport CharacterSheetView from \"./sheet/CharacterSheetView\";\r\n\r\nconst basicStyle = {\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    field: {\r\n        width: '100%',\r\n    }\r\n};\r\n\r\nexport const CreateFormField = (fieldData: FormFieldData, t, editable) => {\r\n    const {name, type, suggestions, toView, toModel} = fieldData;\r\n    const entity = State.data.entity;\r\n    let value = entity[name];\r\n    value = toView ? toView(value) : value;\r\n    const onUpdate = updateProperty(name, toModel);\r\n\r\n    switch (type) {\r\n        case FormFieldType.TEXT:\r\n            return <TextField key={name} label={t(name)} value={value || ''} onChange={onUpdate} style={basicStyle.field} InputProps={{readOnly: !editable}}/>;\r\n\r\n        case FormFieldType.PASSWORD:\r\n            return <TextField key={name} label={t(name)} value={value || ''} onChange={onUpdate} style={basicStyle.field} type={'password'} InputProps={{readOnly: !editable}}/>;\r\n\r\n        case FormFieldType.TEXT_AREA:\r\n            return <TextField key={name} label={t(name)} value={value || ''} onChange={onUpdate} multiline style={basicStyle.field} InputProps={{readOnly: !editable}}/>;\r\n\r\n        case FormFieldType.INTEGER:\r\n            return <IntegerField key={name} label={t(name)} value={value || ''} onChange={onUpdate} style={basicStyle.field} InputProps={{readOnly: !editable}}/>;\r\n\r\n        case FormFieldType.FLOAT:\r\n            return <TextField key={name} label={t(name)} value={value || ''} type={'number'} onChange={onUpdate} style={basicStyle.field} InputProps={{readOnly: !editable}}/>;\r\n\r\n        case FormFieldType.DETERMINANT:\r\n            return <DeterminantField key={name} name={name} value={value} editable={editable}/>;\r\n\r\n        case FormFieldType.ENTITY_SELECT:\r\n            return <EntitySelect key={name} name={name} suggestions={suggestions} editable={editable}/>;\r\n\r\n        case FormFieldType.ENTITY_COMBOBOX:\r\n            return <EntitySelect key={name} name={name} suggestions={suggestions} multi editable={editable}/>;\r\n\r\n        case FormFieldType.ENUM_SELECT:\r\n            return <EnumSelect key={name} name={name} suggestions={suggestions} value={value} editable={editable}/>;\r\n\r\n        case FormFieldType.ENUM_COMBOBOX:\r\n            return <EnumSelect key={name} name={name} suggestions={suggestions} value={value} multi editable={editable}/>;\r\n\r\n        case FormFieldType.PRICE:\r\n            return <PriceField key={name} name={name} editable={editable}/>;\r\n\r\n        case FormFieldType.ACTION_TIME:\r\n            return <ActionTimeField key={name} name={name} editable={editable}/>;\r\n\r\n        case FormFieldType.MODIFIER:\r\n            return <ModifierField id={name} name={name} value={value} editable={editable}/>;\r\n\r\n        case FormFieldType.BLUEPRINT_SELECT:\r\n            return <BlueprintSelect key={name} name={name} suggestions={suggestions} editable={editable}/>;\r\n\r\n        case FormFieldType.RACE_DETERMINANTS:\r\n            return <RaceDeterminantsField key={name}/>;\r\n\r\n        case FormFieldType.CHARACTER_SHEET:\r\n            return editable ? <CharacterSheetForm/> : <CharacterSheetView/>;\r\n    }\r\n    throw fieldData;\r\n};\r\n\r\nconst updateProperty = (propName: string, toModel: func) => event => {\r\n    const newValue = event.target ? event.target.value : event;\r\n    const value = toModel ? toModel(newValue) : newValue;\r\n    const entity = State.data.entity;\r\n    entity.updateWith({[propName]: value});\r\n    State.update({entity: entity});\r\n};\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {Cancel, KeyboardReturn, Save} from \"@material-ui/icons\";\r\nimport {func} from \"prop-types\";\r\nimport React, {Component} from \"react\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport {State} from \"../state/State\";\r\nimport AuthoritiesService from \"../user/AuthoritiesService\";\r\nimport {CreateFormField} from \"./FormFieldGenerator\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '95%',\r\n        margin: 'auto',\r\n    }\r\n});\r\n\r\nclass EntityEditor extends Component {\r\n    saveForm = () => {\r\n        const {entity, entityName} = this.props;\r\n        State.services[entityName].save(entity, () => State.showTable(entityName));\r\n    };\r\n\r\n    getFormFields = (): Component[] => {\r\n        const {entityName, t} = this.props;\r\n        const editable = AuthoritiesService.hasAuthority(entityName);\r\n        return State.formFields[entityName]\r\n            .map(field => CreateFormField(field, t, editable))\r\n            .map(component => <Grid key={component.key} item>{component}</Grid>);\r\n    };\r\n\r\n    updateEntity = (propName: string, toModel: func) => event => {\r\n        const value = toModel ? toModel(event.target.value) : event.target.value;\r\n        this.updateForm({[propName]: value})\r\n    };\r\n    updateForm = (updates) => {\r\n        this.props.entity.updateWith(updates);\r\n        this.setState({entity: this.props.entity});\r\n    };\r\n\r\n    render() {\r\n        const {entityName, classes} = this.props;\r\n        const hasAuthority = AuthoritiesService.hasAuthority(entityName);\r\n\r\n        return <Grid container direction={\"column\"} className={classes.root}>\r\n            {this.getFormFields()}\r\n            <Grid item>\r\n                { hasAuthority ?\r\n                    [\r\n                        <IconButton onClick={this.saveForm}><Save/></IconButton>,\r\n                        <IconButton onClick={() => State.showTable(entityName)}><Cancel/></IconButton>\r\n                    ] :\r\n                    <IconButton onClick={() => {\r\n                        if (State.data.afterForm) {\r\n                            State.data.afterForm()\r\n                        } else {\r\n                            State.showTable(entityName)\r\n                        }\r\n                    }}><KeyboardReturn/></IconButton>}\r\n\r\n            </Grid>\r\n        </Grid>\r\n    }\r\n}\r\n\r\nexport default withTranslation()(withStyles(styles)(EntityEditor));","import {FormFieldType} from \"../../form/FormFieldType\";\r\nimport Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport Nation from \"./Nation\";\r\n\r\nexport default class Place extends Entity {\r\n  static entityName: string = 'place';\r\n\r\n  name: string;\r\n  description: string;\r\n  nation: Nation;\r\n\r\n  updateWith(entity: *): Place {\r\n    super.updateWith(entity);\r\n    this.updateEntityProp('nation', () => new Nation());\r\n    return this;\r\n  }\r\n}\r\n\r\nRegisterEntity(Place,\r\n               [CreateColumn('name', FormFieldType.TEXT),\r\n                CreateColumn('description', FormFieldType.TEXT_AREA),\r\n                CreateColumn('nation', FormFieldType.ENTITY_SELECT),],\r\n               [CreateFormField('name', FormFieldType.TEXT),\r\n                CreateFormField('description', FormFieldType.TEXT_AREA),\r\n                CreateFormField('nation', FormFieldType.ENTITY_SELECT, Nation.entityName),]);","import {FormFieldType} from \"../form/FormFieldType\";\r\nimport Entity, {CreateColumn, RegisterEntity} from \"../model/Entity\";\r\nimport Place from \"../model/world/Place\";\r\n\r\nexport default class Picture extends Entity {\r\n  static entityName = 'picture';\r\n\r\n  name: string;\r\n  place: Place;\r\n\r\n  updateWith(entity: *): Picture {\r\n    super.updateWith(entity);\r\n    this.updateEntityProp('place', () => new Place());\r\n    return this;\r\n  }\r\n}\r\n\r\nRegisterEntity(Picture,\r\n               [CreateColumn('name', FormFieldType.TEXT),\r\n                CreateColumn('place', FormFieldType.ENTITY_SELECT)],\r\n               []);","import {Button, IconButton, TextField} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Cancel} from \"@material-ui/icons\";\r\nimport {DropzoneArea} from \"material-ui-dropzone\";\r\nimport React, {Component} from \"react\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport PictureService from \"../client/PictureService\";\r\nimport EntitySelect from \"../form/field/EntitySelect\";\r\nimport Place from \"../model/world/Place\";\r\nimport {State} from \"../state/State\";\r\nimport AuthoritiesService from \"../user/AuthoritiesService\";\r\nimport Picture from \"./Picture\";\r\n\r\nconst pictureService = new PictureService();\r\n\r\nclass PictureUploadForm extends Component {\r\n  onResponse = () => {\r\n    State.showTable(Picture.entityName);\r\n    State.services.picture.loadData();\r\n  };\r\n\r\n  upload = files => {\r\n    const selectedFile = files[0];\r\n    if (!selectedFile) {\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    pictureService.uploadPicture(formData, this.onResponse);\r\n  };\r\n\r\n  setName = event => {\r\n    const value           = event.target.value;\r\n    this.props.value.name = value;\r\n    this.setState({name: value});\r\n  };\r\n\r\n  setPlace = place => {\r\n    this.props.value.place = place;\r\n    this.setState({place: place});\r\n  };\r\n\r\n  save = () => {\r\n    const value   = this.props.value;\r\n    const updates = {id: value.id, name: value.name};\r\n    if (value.place) {\r\n      updates.placeId = value.place.id;\r\n    }\r\n\r\n    pictureService.updateMetadata(updates, this.onResponse);\r\n  };\r\n\r\n  render() {\r\n    const {value, t}   = this.props;\r\n    const hasAuthority = AuthoritiesService.hasAuthority(Picture.entityName);\r\n\r\n    return <div style={{margin: 10}}>\r\n      {value ?\r\n\r\n          <Grid container spacing={2}>\r\n            <Grid item container xs={12} alignItems={\"center\"}>\r\n              <Grid item xs={4}>\r\n                <TextField value={value ? value.name : ''} onChange={this.setName}\r\n                           disabled={!value}/>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <EntitySelect name={Place.entityName} onChange={this.setPlace} value={value.place}\r\n                              editable/>\r\n              </Grid>\r\n              <Grid item xs={2}>{hasAuthority ?\r\n                  <Button onClick={this.save}>{t('save')}</Button> :\r\n                  <div/>}\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <img src={Picture.entityName + '/' + value.id} alt={value.name}\r\n                   style={{maxWidth: '80vw', maxHeight: '50vh'}}/>\r\n            </Grid>\r\n          </Grid> :\r\n\r\n          <DropzoneArea acceptedFiles={['image/jpeg', 'image/jpg', 'image/png']}\r\n                        onChange={this.upload}/>}\r\n\r\n      <IconButton onClick={() => State.showTable(Picture.entityName)}>\r\n        <Cancel/>\r\n      </IconButton>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default withTranslation()(PictureUploadForm);","import RemoteService from \"./RemoteService\";\r\nimport Picture from \"../img/Picture\";\r\n\r\nexport default class PictureService extends RemoteService {\r\n  uploadPicture(picture: object, onResponse: VoidFunction) {\r\n    this.rawPostRequest(Picture.entityName, picture, onResponse);\r\n  }\r\n\r\n  updateMetadata(updates: object, onResponse: VoidFunction) {\r\n    this.postRequestWithoutResponse(updates, Picture.entityName, onResponse)\r\n  }\r\n}","import {FormFieldType} from \"../../form/FormFieldType\";\r\nimport Person from \"../creature/Person\";\r\nimport Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport Place from \"../world/Place\";\r\nimport Realm from \"./Realm\";\r\n\r\nexport default class Scenario extends Entity {\r\n  static entityName: string = 'scenario';\r\n\r\n  name: string;\r\n  realm: Realm;\r\n  places: Place[]   = [];\r\n  persons: Person[] = [];\r\n\r\n  updateWith(entity: Scenario): Scenario {\r\n    this.updateProp(entity, 'id');\r\n    this.updateProp(entity, 'uuid');\r\n    this.updateProp(entity, 'name');\r\n    this.updateEntityProp(entity, 'realm', () => new Realm());\r\n    this.updateEntityList(entity, 'places', () => new Place());\r\n    this.updateEntityList(entity, 'persons', () => new Person());\r\n    return this;\r\n  }\r\n}\r\n\r\nRegisterEntity(Scenario,\r\n               [CreateColumn('name', FormFieldType.TEXT),\r\n                CreateColumn('realm', FormFieldType.ENTITY_SELECT),],\r\n               [CreateFormField('name', FormFieldType.TEXT),\r\n                CreateFormField('realm', FormFieldType.ENTITY_SELECT, Realm.entityName),\r\n                CreateFormField('places', FormFieldType.ENTITY_COMBOBOX, Place.entityName),\r\n                CreateFormField('persons', FormFieldType.ENTITY_COMBOBOX, Person.entityName),]);","import Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport React, {Component} from \"react\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport Carousel, {ModalGateway} from \"react-images\";\r\nimport ScenarioService from \"../client/ScenarioService\";\r\nimport EntitySelect from \"../form/field/EntitySelect\";\r\nimport Scenario from \"../model/realm/Scenario\";\r\nimport Person from \"../model/creature/Person\";\r\nimport {State} from \"../state/State\";\r\n\r\nclass ScenarioView extends Component {\r\n  state = {\r\n    currentScenario: undefined,\r\n    images: [],\r\n    imgStyle: {maxWidth: '40vw', height: '30vh'},\r\n    viewerIsOpen: false,\r\n    currentImage: null,\r\n  };\r\n\r\n  fetchImages = scenario => {\r\n    ScenarioService.fetchPicturesForScenario(scenario, data => {\r\n      const images = data.map(num => `picture/${num}`);\r\n      this.setState({images: images})\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const entity                                         = State.data.entity;\r\n    const {images, imgStyle, viewerIsOpen, currentImage} = this.state;\r\n\r\n    return <div style={{paddingTop: 10}}>\r\n      {entity ? <Grid container spacing={2}>\r\n        <Grid item container xs={3}>\r\n          {entity.persons.map(person => <Grid item xs={3}>\r\n            <Button onClick={() => {\r\n              State.showForm(Person.entityName, person);\r\n              State.update({afterForm: () => State.updateScenario(entity)})\r\n            }}>{person.name}</Button>\r\n          </Grid>)}\r\n        </Grid>\r\n        <Grid item container xs={9} spacing={2}>\r\n          {images.map((url, index) => <Grid item><Paper elevation={6}>\r\n            <img src={url} alt={url} style={imgStyle}\r\n                 onClick={() => this.setState({currentImage: index, viewerIsOpen: true})}/>\r\n          </Paper></Grid>)}\r\n        </Grid>\r\n      </Grid> : <div>\r\n        <EntitySelect name={Scenario.entityName}\r\n                      onChange={scenario => {\r\n                        State.updateScenario(scenario);\r\n                        this.fetchImages(scenario);\r\n                      }} value={null} editable/>\r\n      </div>}\r\n      <ModalGateway>\r\n        <Modal onClose={() => this.setState({viewerIsOpen: false, currentImage: null})}\r\n               open={viewerIsOpen}>\r\n          <Carousel currentIndex={currentImage} views={images.map(src => ({source: src}))}/>\r\n        </Modal>\r\n      </ModalGateway>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default withTranslation()(ScenarioView);","import Picture from \"../img/Picture\";\r\nimport Scenario from \"../model/realm/Scenario\";\r\n\r\nexport default class ScenarioService {\r\n  static fetchPicturesForScenario(scenario: Scenario, onData: number[] => void) {\r\n    fetch(`${Picture.entityName}/${Scenario.entityName}/${scenario.id}`, {\r\n      method: 'get',\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        response.json().then(onData);\r\n      } else {\r\n        alert(response.status);\r\n      }\r\n    });\r\n  }\r\n}","import IconButton from \"@material-ui/core/IconButton\";\r\nimport {Add, Delete, Edit, OpenInNew} from \"@material-ui/icons\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport React, {Component} from \"react\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport {State} from \"../state/State\";\r\nimport AuthoritiesService from \"../user/AuthoritiesService\";\r\n\r\nclass Table extends Component {\r\n  options = {\r\n    filterType: 'textField',\r\n    selectableRows: \"single\",\r\n    selectableRowsOnClick: true,\r\n    disableToolbarSelect: true,\r\n    selectableRowsHeader: false,\r\n    customToolbarSelect: (selectedRows, displayData, setSelectedRows) => {\r\n      if (selectedRows.data.length > 0) {\r\n        const entityName = State.data.showTable;\r\n        const entity     = State.data[entityName][selectedRows.data[0].dataIndex];\r\n\r\n        if (AuthoritiesService.hasAuthority(entityName)) {\r\n          return <React.Fragment>\r\n            <div>\r\n              <IconButton onClick={() => State.showForm(entityName, entity)}><Edit/></IconButton>\r\n              <IconButton\r\n                  onClick={() => State.services[entityName].delete(entity)}><Delete/></IconButton>\r\n            </div>\r\n          </React.Fragment>;\r\n        } else {\r\n            return <React.Fragment>\r\n                <IconButton onClick={() => State.showForm(entityName, entity)}><OpenInNew/></IconButton>\r\n            </React.Fragment>\r\n        }\r\n      }\r\n      return <React.Fragment/>\r\n    }\r\n  };\r\n\r\n  translateColumns = columns => {\r\n    const {t} = this.props;\r\n    columns.forEach(column => column.label = t(column.name));\r\n    return columns;\r\n  };\r\n\r\n  render() {\r\n    const {showTable} = State.data;\r\n    const {t} = this.props;\r\n    const hasAuthority = AuthoritiesService.hasAuthority(showTable);\r\n\r\n    const title = <div>\r\n      {t(showTable)}\r\n      {hasAuthority ? <IconButton onClick={() => State.update({\r\n                                                                showTable: null,\r\n                                                                showForm: showTable,\r\n                                                                entity: State.suppliers[showTable]()\r\n      })}>\r\n        <Add/>\r\n      </IconButton> : <div/>}\r\n    </div>;\r\n\r\n    return <MUIDataTable title={title}\r\n                         options={this.options}\r\n                         columns={this.translateColumns(State.columns[showTable])}\r\n                         data={State.data[showTable]}/>\r\n  }\r\n}\r\n\r\nexport default withTranslation()(Table);","import React, {Component} from \"react\";\r\nimport EntityEditor from \"../form/EntityEditor\";\r\nimport PictureUploadForm from \"../img/PictureUploadForm\";\r\nimport ScenarioView from \"../scenario/ScenarioView\";\r\nimport {State} from \"../state/State\";\r\nimport Table from \"./Table\";\r\n\r\nclass ContentPane extends Component {\r\n  render() {\r\n    const {showTable, showForm, showScenario, entity} = State.data;\r\n    let content                                       = <div/>;\r\n\r\n    if (showTable) {\r\n      content = <Table/>\r\n    } else if (showForm) {\r\n      if (showForm === 'picture') {\r\n        content = <PictureUploadForm value={entity.id ? entity : undefined}/>\r\n      } else {\r\n        content = <EntityEditor entity={entity} entityName={showForm}/>\r\n      }\r\n    } else if (showScenario) {\r\n      content = <ScenarioView/>\r\n    }\r\n\r\n    return content;\r\n  }\r\n\r\n}\r\n\r\nexport default ContentPane;","import DeterminantContainer from \"../rule/DeterminantContainer\";\r\nimport Price from \"../world/Price\";\r\nimport {Placement, placementJewelryName} from \"./Placement\";\r\nimport {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\nimport {availabilityEntityName} from \"./Availability\";\r\nimport Resource from \"./Resource\";\r\n\r\nexport default class Jewelry extends DeterminantContainer {\r\n    static entityName: string = 'jewelry';\r\n\r\n    name: string;\r\n    description: string;\r\n    weight: number;\r\n    price: Price = new Price();\r\n    availability: string = 'COMMON';\r\n    primaryResource: Resource;\r\n    secondaryResource: Resource;\r\n    placement: string = Placement.NECK;\r\n\r\n    updateWith(entity: *): Jewelry {\r\n        super.updateWith(entity);\r\n        this.updateEntityProp(entity, 'price', () => new Price());\r\n        this.updateEntityProp(entity, 'primaryResource', () => new Resource());\r\n        this.updateEntityProp(entity, 'secondaryResource', () => new Resource());\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterEntity(Jewelry, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n    CreateColumn('price', FormFieldType.PRICE),\r\n    CreateColumn('availability', FormFieldType.TEXT),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('weight', FormFieldType.FLOAT),\r\n    CreateFormField('price', FormFieldType.PRICE),\r\n    CreateFormField('availability', FormFieldType.ENUM_SELECT, availabilityEntityName),\r\n    CreateFormField('primaryResource', FormFieldType.ENTITY_SELECT, Resource.entityName),\r\n    CreateFormField('secondaryResource', FormFieldType.ENTITY_SELECT, Resource.entityName),\r\n    CreateFormField('placement', FormFieldType.ENUM_SELECT, placementJewelryName),\r\n]);","import React, {Component} from \"react\";\r\nimport {Button, Menu} from \"@material-ui/core\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {State} from \"../state/State\";\r\n\r\nclass MenuComponent extends Component {\r\n    state = {\r\n        anchorEl: null\r\n    };\r\n\r\n    handleClick = event => {\r\n        this.setState({anchorEl: event.currentTarget})\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({anchorEl: null})\r\n    };\r\n\r\n    handleItemClick = entityName => () => {\r\n        this.handleClose();\r\n        State.showTable(entityName);\r\n    };\r\n\r\n    render() {\r\n        const {t, name, entities} = this.props;\r\n        return <div>\r\n            <Button id={name}\r\n                    onClick={this.handleClick}>\r\n                {t(name)}\r\n            </Button>\r\n            <Menu id={name}\r\n                  anchorEl={this.state.anchorEl}\r\n                  open={this.state.anchorEl !== null}\r\n                  onClose={this.handleClose}>\r\n                {\r\n                    entities.map(entityName =>\r\n                        <MenuItem key={entityName} onClick={this.handleItemClick(entityName)}>\r\n                            {t(entityName)}\r\n                        </MenuItem>)\r\n                }\r\n            </Menu>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withTranslation()(MenuComponent);","import IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport React, {Component} from \"react\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport Picture from \"../img/Picture\";\r\nimport {State} from \"../state/State\";\r\nimport AuthoritiesService from \"../user/AuthoritiesService\";\r\nimport User from \"../user/User\";\r\n\r\nclass ToolsMenu extends Component {\r\n  state = {\r\n    anchorEl: null\r\n  };\r\n\r\n  handleClick = event => {\r\n    this.setState({anchorEl: event.currentTarget})\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({anchorEl: null})\r\n  };\r\n\r\n  showPictureForm = () => {\r\n    this.handleClose();\r\n    State.showTable(Picture.entityName);\r\n  };\r\n\r\n  showScenarioView = () => {\r\n    this.handleClose();\r\n    State.updateScenario(null);\r\n  };\r\n\r\n  showUsersTable = () => {\r\n    this.handleClose();\r\n    State.showTable(User.entityName);\r\n  };\r\n\r\n  render() {\r\n    const {t}     = this.props;\r\n    const isAdmin = AuthoritiesService.hasAuthority('admin');\r\n\r\n    return <div>\r\n      <IconButton aria-label={'More'}\r\n                  aria-owns={this.state.anchorEl !== null ? 'app-tools-menu' : undefined}\r\n                  aria-haspopup={'true'}\r\n                  onClick={this.handleClick}>\r\n        <MoreVertIcon/>\r\n      </IconButton>\r\n\r\n      <Menu id={'app-tools-menu'}\r\n            anchorEl={this.state.anchorEl}\r\n            open={this.state.anchorEl !== null}\r\n            onClose={this.handleClose}>\r\n        {isAdmin && <MenuItem onClick={this.showUsersTable}>{t('user')}</MenuItem>}\r\n        <MenuItem onClick={this.showPictureForm}>{t('picture')}</MenuItem>\r\n        <MenuItem onClick={this.showScenarioView}>{t('scenario')}</MenuItem>\r\n      </Menu>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default withTranslation()(ToolsMenu);","import {AppBar, CircularProgress, Toolbar} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {Component} from \"react\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport Select from \"react-select\";\r\nimport Flag from 'react-world-flags';\r\nimport RealmDataService from \"../client/RealmDataService\";\r\nimport Ammunition from \"../model/crafting/Ammunition\";\r\nimport Armor from \"../model/crafting/Armor\";\r\nimport ArmorBlueprint from \"../model/crafting/ArmorBlueprint\";\r\nimport ArmorPattern from \"../model/crafting/ArmorPattern\";\r\nimport Item from \"../model/crafting/Item\";\r\nimport Jewelry from \"../model/crafting/Jewelry\";\r\nimport MeleeWeapon from \"../model/crafting/MeleeWeapon\";\r\nimport MeleeWeaponBlueprint from \"../model/crafting/MeleeWeaponBlueprint\";\r\nimport RangedWeapon from \"../model/crafting/RangedWeapon\";\r\nimport RangedWeaponBlueprint from \"../model/crafting/RangedWeaponBlueprint\";\r\nimport Resource from \"../model/crafting/Resource\";\r\nimport Animal from \"../model/creature/Animal\";\r\nimport AnimalKind from \"../model/creature/AnimalKind\";\r\nimport Character from \"../model/creature/Character\";\r\nimport EyeColor from \"../model/creature/EyeColor\";\r\nimport HairColor from \"../model/creature/HairColor\";\r\nimport Person from \"../model/creature/Person\";\r\nimport PhysicalFeature from \"../model/creature/PhysicalFeature\";\r\nimport Skill from \"../model/knowledge/Skill\";\r\nimport Spell from \"../model/knowledge/Spell\";\r\nimport SpellSchool from \"../model/knowledge/SpellSchool\";\r\nimport Profession from \"../model/professions/Profession\";\r\nimport ProfessionClass from \"../model/professions/ProfessionClass\";\r\nimport Realm from \"../model/realm/Realm\";\r\nimport Scenario from \"../model/realm/Scenario\";\r\nimport Currency from \"../model/world/Currency\";\r\nimport Language from \"../model/world/Language\";\r\nimport Nation from \"../model/world/Nation\";\r\nimport Place from \"../model/world/Place\";\r\nimport Race from \"../model/world/Race\";\r\nimport Religion from \"../model/world/Religion\";\r\nimport {State} from \"../state/State\";\r\nimport AuthoritiesService from \"../user/AuthoritiesService\";\r\nimport MenuComponent from \"./MenuComponent\";\r\nimport ToolsMenu from \"./ToolsMenu\";\r\n\r\nconst styles           = theme => ({\r\n  languageIcon: {\r\n    marginLeft: 'auto', display: 'flex',\r\n  }, realmSelect: {\r\n    width: 200,\r\n  }\r\n});\r\nconst realmDataService = new RealmDataService();\r\n\r\nclass TopMenu extends Component {\r\n\r\n  showTable = entityName => () => {\r\n    State.update({showTable: entityName})\r\n  };\r\n\r\n  render() {\r\n    const {i18n, classes} = this.props;\r\n    const isGameMaster    = AuthoritiesService.hasAuthority('gamemaster');\r\n\r\n    const menuItems = isGameMaster ?\r\n        [<MenuComponent name={'world'}\r\n                        entities={[Nation.entityName,\r\n                                   Currency.entityName,\r\n                                   Language.entityName,\r\n                                   Race.entityName,\r\n                                   Religion.entityName,\r\n                                   Place.entityName,\r\n                                   Realm.entityName,\r\n                                   Scenario.entityName]}/>,\r\n         <MenuComponent name={'knowledge'}\r\n                        entities={[Skill.entityName,\r\n                                   ProfessionClass.entityName,\r\n                                   Profession.entityName,\r\n                                   SpellSchool.entityName,\r\n                                   Spell.entityName,]}/>,\r\n         <MenuComponent name={'crafting'}\r\n                        entities={[Item.entityName,\r\n                                   Armor.entityName,\r\n                                   MeleeWeapon.entityName,\r\n                                   RangedWeapon.entityName,\r\n                                   Ammunition.entityName,\r\n                                   Jewelry.entityName,]}/>,\r\n         <MenuComponent name={'types'}\r\n                        entities={[ArmorBlueprint.entityName,\r\n                                   MeleeWeaponBlueprint.entityName,\r\n                                   RangedWeaponBlueprint.entityName,\r\n                                   ArmorPattern.entityName,\r\n                                   Resource.entityName,]}/>,\r\n         < MenuComponent name={'creature'}\r\n                         entities={[...(State.data.currentRealm ? [Person.entityName] : []),\r\n                                    ...[Character.entityName,\r\n                                        EyeColor.entityName,\r\n                                        HairColor.entityName,\r\n                                        PhysicalFeature.entityName,\r\n                                        Animal.entityName,\r\n                                        AnimalKind.entityName,]]}/>] :\r\n        <div/>;\r\n\r\n    return <AppBar\r\n        position={\"relative\"}>\r\n      <Toolbar>\r\n        <ToolsMenu/>\r\n        {menuItems}\r\n        <div className={classes.languageIcon}>\r\n          {State.data.fetching.size > 0 && <IconButton><CircularProgress\r\n              color={\"secondary\"}/></IconButton>}\r\n          <Select className={classes.realmSelect}\r\n                  options={State.data.realm}\r\n                  getOptionLabel={option => <div>{option.name}</div>}\r\n                  getOptionValue={option => option.id}\r\n                  filterOption={(option, input) => option.data.name.startsWith(input)}\r\n                  value={State.data.currentRealm}\r\n                  onChange={realm => realmDataService.getRealmData(realm)}\r\n          />\r\n          <IconButton onClick={() => i18n.changeLanguage('en')}><Flag code={'gb'}\r\n                                                                      height={16}/></IconButton>\r\n          <IconButton onClick={() => i18n.changeLanguage('pl')}><Flag code={'pl'}\r\n                                                                      height={16}/></IconButton>\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>;\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(withTranslation()(TopMenu));\r\n","import Realm from \"../model/realm/Realm\";\r\nimport {State} from \"../state/State\";\r\nimport RemoteService from \"./RemoteService\";\r\n\r\nexport default class RealmDataService extends RemoteService {\r\n  getRealmData = (currentRealm: Realm) => {\r\n    if (currentRealm) {\r\n      this.requestForPath(`realmData/${currentRealm.id}`,\r\n                          data => State.update({currentRealmData: data, currentRealm: currentRealm}));\r\n    }\r\n  };\r\n}","import Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, {Component} from 'react';\r\nimport {withTranslation} from \"react-i18next\";\r\nimport FormFieldData from \"../form/FormFieldData\";\r\nimport {CreateFormField} from \"../form/FormFieldGenerator\";\r\nimport {FormFieldType} from \"../form/FormFieldType\";\r\nimport {State} from \"../state/State\";\r\nimport AuthoritiesService from \"./AuthoritiesService\";\r\nimport googleLogo from \"./google-logo.png\";\r\n\r\nconst loginFieldData = new FormFieldData();\r\nloginFieldData.name  = 'username';\r\nloginFieldData.type  = FormFieldType.TEXT;\r\n\r\nconst passwordFieldData = new FormFieldData();\r\npasswordFieldData.name  = 'password';\r\npasswordFieldData.type  = FormFieldType.PASSWORD;\r\n\r\nclass LoginComponent extends Component {\r\n  login = () => {\r\n    const user = State.data.entity;\r\n    if (user && user.username && user.password) {\r\n      fetch('login', {\r\n        method: 'post',\r\n        mode: 'cors',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify(user)\r\n      })\r\n      .then(res => res.json())\r\n      .then(authData => {\r\n        if (authData.token) {\r\n          State.updateUser(authData);\r\n          AuthoritiesService.updateAdminAuthoritiesIfNeeded();\r\n        }\r\n      })\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {t}        = this.props;\r\n    const loginField = new FormFieldData();\r\n    loginField.name  = 'username';\r\n\r\n    return <Grid container alignItems={\"center\"} spacing={2} xs={12} direction={\"column\"}>\r\n      <Grid item xs={6}>\r\n        <Typography>WFRP Helper</Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        {CreateFormField(loginFieldData, t, true)}\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        {CreateFormField(passwordFieldData, t, true)}\r\n      </Grid>\r\n      <Grid item xs={8}>\r\n        <Button onClick={this.login}>{t('login')}</Button>\r\n        <Button>{t('signup')}</Button>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Button>\r\n          <img src={googleLogo} alt={t('login with Google')} style={{width: 50, height: 50}}/>\r\n          <a href={'https://wfrp-helper.ey.r.appspot.com/oauth2/authorize/google?redirect_uri=https://wfrp-helper-frontend-dot-wfrp-helper.ey.r.appspot.com/oauth2/redirect'}\r\n             style={{fontSize: 18}}>{t('login with Google')}</a>\r\n{/*\r\n          <a href={'https://wfrp-helper.ey.r.appspot.com/oauth2/authorize/google?redirect_uri=http://localhost:3000/oauth2/redirect'}\r\n             style={{fontSize: 18}}>{t('login with Google')}</a>\r\n          <a href={'http://localhost:1081/oauth2/authorize/google?redirect_uri=http://localhost:3000/oauth2/redirect'}\r\n             style={{fontSize: 18}}>{t('login with Google')}</a>\r\n*/}\r\n        </Button>\r\n      </Grid>\r\n    </Grid>;\r\n  }\r\n}\r\n\r\nexport default withTranslation()(LoginComponent);","import React, {Component} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {State} from \"../state/State\";\r\n\r\nclass OAuth2RedirectComponent extends Component {\r\n  render() {\r\n    const token = new RegExp('[\\\\?&]token=([^&#]*)').exec(this.props.location.search)[1];\r\n    State.updateUser({token: token});\r\n\r\n    return <Redirect to={\"/\"}/>;\r\n  }\r\n}\r\n\r\nexport default OAuth2RedirectComponent;","import Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, {Component} from 'react';\r\nimport {withTranslation} from \"react-i18next\";\r\nimport AuthoritiesService from \"./AuthoritiesService\";\r\n\r\nconst authoritiesService = new AuthoritiesService();\r\n\r\nclass PasswordChangeComponent extends Component {\r\n  state = {\r\n    password: null, repeat: null\r\n  };\r\n\r\n  onChange = prop => event => {\r\n    this.setState({[prop]: event.target.value})\r\n  };\r\n\r\n  savePassword = () => {\r\n    const {password, repeat} = this.state;\r\n    if (password === repeat) {\r\n      authoritiesService.updatePassword(password);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {password, repeat} = this.state;\r\n    const {t}                = this.props;\r\n\r\n    return <div>\r\n      <TextField key={'password'}\r\n                 label={t('password')}\r\n                 value={password || ''}\r\n                 type={'password'}\r\n                 onChange={this.onChange('password')}/>\r\n      <TextField key={'passwordRepeat'}\r\n                 label={t('passwordRepeat')}\r\n                 value={repeat || ''}\r\n                 type={'password'}\r\n                 onChange={this.onChange('repeat')}/>\r\n      <Button onClick={this.savePassword}>{t('save')}</Button>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default withTranslation()(PasswordChangeComponent);","import {grey, orange} from \"@material-ui/core/colors\";\r\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core/styles\";\r\nimport React, {Component} from 'react';\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport ContentPane from \"./content/ContentPane\";\r\nimport TopMenu from \"./menu/TopMenu\";\r\nimport DataLoader from \"./state/DataLoader\";\r\nimport {State} from \"./state/State\";\r\nimport AuthoritiesService from \"./user/AuthoritiesService\";\r\nimport LoginComponent from \"./user/LoginComponent\";\r\nimport OAuth2RedirectComponent from \"./user/OAuth2RedirectComponent\";\r\nimport PasswordChangeComponent from \"./user/PasswordChangeComponent\";\r\nimport User from \"./user/User\";\r\n\r\nconst theme = createMuiTheme({\r\n                               palette: {primary: grey, secondary: orange},\r\n                             });\r\nconst authoritiesService = new AuthoritiesService();\r\n\r\nexport default class App extends Component {\r\n\r\n  constructor(props: P, context: any) {\r\n    super(props, context);\r\n    State.onUpdate = data => {\r\n      this.setState({data: data})\r\n    };\r\n    State.data.entity = new User();\r\n  }\r\n\r\n  render() {\r\n    const {token, oneTimePassword} = State.data.currentUser;\r\n\r\n    if (!token) {\r\n      return <MuiThemeProvider theme={theme}>\r\n        <Switch>\r\n          {/* For static spring build */}\r\n          <Route exact path={\"/index.html\"} component={LoginComponent}/>\r\n{/*\r\n          <Route exact path={\"/\"} component={LoginComponent}/>\r\n*/}\r\n          <Route path={\"/oauth2/redirect\"} component={OAuth2RedirectComponent}/>\r\n        </Switch>\r\n      </MuiThemeProvider>\r\n    }\r\n\r\n    if (oneTimePassword) {\r\n      return <MuiThemeProvider theme={theme}>\r\n        <PasswordChangeComponent/>\r\n      </MuiThemeProvider>\r\n    }\r\n\r\n    if (!State.data.currentUser.authorities) {\r\n      authoritiesService.refreshAuthorities();\r\n    }\r\n\r\n    if (!State.data.initialized) {\r\n      DataLoader.refreshData();\r\n      State.data.initialized = true;\r\n    }\r\n\r\n    return (<MuiThemeProvider theme={theme}>\r\n      <TopMenu/>\r\n      <ContentPane/>\r\n    </MuiThemeProvider>);\r\n  }\r\n}\r\n","import Picture from \"../img/Picture\";\r\nimport Ammunition      from \"../model/crafting/Ammunition\";\r\nimport MeleeWeapon     from \"../model/crafting/MeleeWeapon\";\r\nimport RangedWeapon    from \"../model/crafting/RangedWeapon\";\r\nimport Animal          from \"../model/creature/Animal\";\r\nimport AnimalKind      from \"../model/creature/AnimalKind\";\r\nimport Person          from \"../model/creature/Person\";\r\nimport Realm from \"../model/realm/Realm\";\r\nimport Scenario from \"../model/realm/Scenario\";\r\nimport Place from \"../model/world/Place\";\r\nimport {State}         from \"./State\";\r\nimport Nation          from \"../model/world/Nation\";\r\nimport Currency        from \"../model/world/Currency\";\r\nimport Language        from \"../model/world/Language\";\r\nimport Race            from \"../model/world/Race\";\r\nimport Religion        from \"../model/world/Religion\";\r\nimport Character       from \"../model/creature/Character\";\r\nimport Skill           from \"../model/knowledge/Skill\";\r\nimport ProfessionClass from \"../model/professions/ProfessionClass\";\r\nimport Profession      from \"../model/professions/Profession\";\r\nimport SpellSchool from \"../model/knowledge/SpellSchool\";\r\nimport Item                  from \"../model/crafting/Item\";\r\nimport {Availability}        from \"../model/crafting/Availability\";\r\nimport ArmorBlueprint        from \"../model/crafting/ArmorBlueprint\";\r\nimport Spell                 from \"../model/knowledge/Spell\";\r\nimport MeleeWeaponBlueprint  from \"../model/crafting/MeleeWeaponBlueprint\";\r\nimport RangedWeaponBlueprint from \"../model/crafting/RangedWeaponBlueprint\";\r\nimport ArmorPattern          from \"../model/crafting/ArmorPattern\";\r\nimport Resource              from \"../model/crafting/Resource\";\r\nimport EyeColor              from \"../model/creature/EyeColor\";\r\nimport HairColor             from \"../model/creature/HairColor\";\r\nimport PhysicalFeature       from \"../model/creature/PhysicalFeature\";\r\nimport Armor                 from \"../model/crafting/Armor\";\r\n\r\nconst DOMAINS = [\r\n    Nation, Currency, Language, Race, Religion, Place,\r\n    Character, EyeColor, HairColor, PhysicalFeature,\r\n    AnimalKind, Animal,\r\n    Skill, SpellSchool, Spell,\r\n    ProfessionClass, Profession,\r\n    Availability,\r\n    Item, Armor, MeleeWeapon, RangedWeapon, Ammunition,\r\n    ArmorBlueprint, MeleeWeaponBlueprint, RangedWeaponBlueprint,\r\n    ArmorPattern, Resource,\r\n    Person, Realm, Scenario,\r\n    Picture,\r\n];\r\n\r\nexport default class DataLoader {\r\n    static refreshData() {\r\n        Object.keys(State.services).forEach(serviceName => State.services[serviceName].loadData());\r\n    }\r\n}"],"sourceRoot":""}