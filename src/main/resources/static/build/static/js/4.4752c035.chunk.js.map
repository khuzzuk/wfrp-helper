{"version":3,"sources":["img/A.png","user/google-logo.png","model/ModelElement.js","form/FormFieldType.js","form/FormFieldData.js","client/Service.js","model/Entity.js","state/State.js","client/RemoteService.js","user/Role.js","user/User.js","user/AuthoritiesService.js","form/field/EnumSelect.js","form/field/IntegerField.js","model/rule/ActionTime.js","form/field/ActionTimeField.js","form/field/BlueprintSelect.js","model/rule/DiceRoll.js","model/rule/Modifier.js","model/rule/Determinant.js","form/field/DiceRollField.js","form/field/ModifierField.js","form/field/DeterminantField.js","form/field/EntitySelect.js","form/field/PriceField.js","form/field/RaceDeterminantsField.js","model/knowledge/Skill.js","model/professions/ProfessionClass.js","model/rule/DeterminantContainer.js","model/professions/Profession.js","model/creature/CreatureDeterminants.js","model/crafting/Availability.js","model/crafting/ArmorPattern.js","model/world/Price.js","model/crafting/Resource.js","model/crafting/Placement.js","model/crafting/ArmorBlueprint.js","model/crafting/Armor.js","model/crafting/Item.js","model/crafting/Inventory.js","model/crafting/MeleeWeaponBlueprint.js","model/crafting/MeleeWeapon.js","model/knowledge/SpellSchool.js","model/knowledge/Spell.js","model/knowledge/SpellSchoolLevel.js","model/world/Nation.js","model/world/Language.js","model/world/Currency.js","model/world/Money.js","model/world/Race.js","model/world/Religion.js","model/creature/AnimalKind.js","model/creature/Animal.js","model/creature/Character.js","model/creature/EyeColor.js","model/creature/HairColor.js","model/crafting/RangedWeaponBlueprint.js","model/crafting/Ammunition.js","model/crafting/RangedWeapon.js","model/creature/PersonalRangedWeapon.js","model/creature/PhysicalFeature.js","model/creature/Person.js","client/DeterminantService.js","client/GearService.js","model/realm/Realm.js","model/knowledge/CurrentMagicKnowledge.js","util/Collections.js","client/MagicService.js","model/creature/Gender.js","service/ItemService.js","service/MoneyService.js","service/ProfessionService.js","form/sheet/field/AnimalElement.js","model/creature/CreatureArmorValues.js","form/sheet/field/ArmorCalculationsComponent.js","form/sheet/field/ArmorElement.js","form/sheet/field/SimpleTextField.js","form/sheet/field/ItemElement.js","form/sheet/field/MoneyElement.js","form/sheet/field/ProfessionExtensionField.js","form/sheet/field/PersonalDeterminantsField.js","form/sheet/field/SimpleEntitySelect.js","form/sheet/field/RangedWeaponElement.js","form/sheet/field/SelectableList.js","form/sheet/field/SimpleEnumSelect.js","form/sheet/field/SimpleList.js","form/sheet/field/SpeedComponent.js","form/sheet/field/SpellElement.js","form/sheet/field/SpellSchoolList.js","form/sheet/field/WeaponElement.js","form/sheet/CharacterSheetForm.js","form/sheet/field/ProfessionExtensionView.js","form/sheet/field/PersonalDeterminantsView.js","form/sheet/field/RangedWeaponElementView.js","form/sheet/field/SimpleListView.js","form/sheet/CharacterSheetView.js","form/FormFieldGenerator.js","form/EntityEditor.js","model/world/Place.js","img/Picture.js","img/PictureUploadForm.js","client/PictureService.js","model/realm/Scenario.js","scenario/ScenarioView.js","client/ScenarioService.js","client/RealmDataService.js","content/Table.js","content/ContentPane.js","model/crafting/Jewelry.js","state/DataLoader.js","menu/MenuComponent.js","menu/ToolsMenu.js","menu/TopMenu.js","user/LoginComponent.js","user/OAuth2RedirectComponent.js","user/PasswordChangeComponent.js","App.js"],"names":["module","exports","ModelElement","updateWith","entity","Object","assign","this","updateProp","prop","updateNumProp","updateEntityProp","supplier","updateEntityList","map","val","newVal","FormFieldType","FormFieldData","Service","constructor","entityName","loadData","State","fetching","fetch","mode","headers","then","handleErrors","response","json","data","suppliers","update","fetchingFinished","save","onSuccess","method","body","JSON","stringify","status","message","value","window","confirm","Array","from","Set","errors","e","field","rejectedValue","join","updateUser","token","delete","Entity","CreateColumn","name","type","options","filter","sort","column","customBodyRender","toString","CreateFormField","suggestions","toView","toModel","formField","RegisterEntity","entityClass","columns","fields","services","formFields","showTable","showForm","afterForm","currentUser","username","password","onUpdate","user","showScenario","updateScenario","scenario","updateEntity","updates","add","logoutCodes","RemoteService","handleRawResponse","onResponse","text","includes","console","warn","handleResponse","requestFor","uri","jsonBody","postRequestWithoutResponse","requestForPath","catch","reason","log","rawGetRequestFor","rawPostRequest","Role","role","User","userService","roleService","AuthoritiesService","refreshAuthorities","authorities","updateAdminAuthoritiesIfNeeded","find","authority","toLowerCase","endsWith","updatePassword","newPassword","oneTimePassword","hasAuthority","EnumSelect","Component","getLabel","label","render","props","t","onChange","selected","multi","editable","Grid","container","spacing","alignItems","item","FormLabel","textFieldProps","InputLabelProps","shrink","styles","style","components","makeAnimated","getOptionLabel","getOptionValue","isSearchable","isClearable","isMulti","isDisabled","control","provided","state","width","marginLeft","withTranslation","IntegerField","updateInt","event","number","parseInt","target","other","TextField","ActionType","ACTION","ROUND","TURN","allOf","ActionTime","actionType","amount","ActionTimeField","key","InputProps","readOnly","BlueprintSelect","desc","suggestedPrice","suggestedWeight","xs","option","id","filterOption","input","startsWith","Dice","K2","K3","K4","K6","K8","K10","K12","K20","K100","DiceRoll","rolls","dice","ModifierType","REGULAR","PROFESSION","EXPERIENCE","DICE","Modifier","super","roll","Determinant","modifiers","getExperienceExtensions","mod","calculateExperienceValue","reduce","a","b","calculateFinalValue","DeterminantType","SPEED","BATTLE","SHOOTING","STRENGTH","DURABILITY","HEALTH","INITIATIVE","ATTACK","DEXTERITY","LEADER_SKILLS","INTELLIGENCE","CONTROL","WILL","CHARISMA","PARRY","OPPONENT_PARRY","personal","DiceRollField","updateDiceRoll","currentDiceRollEdit","ModifierField","currentModifierEdit","onAddDiceRoll","push","types","dices","diceRoll","Button","onClick","DeterminantField","deleteItem","splice","indexOf","currentDeterminantEdit","determinant","addDeterminant","addModifierToDeterminant","updateModifier","modifier","newModifier","modifierTypes","currentModifier","Paper","IconButton","Remove","EntitySelect","newValue","PriceField","updatePrice","part","price","marginRight","gold","silver","lead","determinantsNames","RaceDeterminantsField","regenerateDeterminants","determinants","length","forEach","updateDiceType","updateDiceRolls","updateBasicModifier","Skill","ProfessionClass","skills","DeterminantContainer","Profession","nextProfessions","CreatureDeterminants","speed","battle","shooting","strength","durability","health","attack","initiative","dexterity","leaderSkills","intelligence","will","charisma","newDeterminant","replaceDeterminant","updateDeterminantValue","findDeterminant","toReplace","determinantIndex","Availability","ArmorPattern","availability","Price","Resource","Placement","BODY","HEAD","TORSO","HAND","LEG","BELT","NECK","FINGER","SHIELD","BOTH_HANDS","armor","weapon","jewelry","ArmorBlueprint","placement","Armor","Item","Inventory","MeleeWeaponBlueprint","damage","prepareTime","MeleeWeapon","getFinalValueForType","determinantType","DeterminantService","sumValueByTypeIn","SpellSchool","levels","Spell","durationTime","ingredients","SpellSchoolLevel","level","Nation","names","namesFromModel","namesAsString","replace","split","Language","Currency","Money","currency","Race","Religion","nations","AnimalKind","Animal","Character","EyeColor","HairColor","RangedWeaponBlueprint","minimumRange","mediumRange","maximumRange","Ammunition","weaponTypes","RangedWeapon","PersonalRangedWeapon","ammunitionAmount","PhysicalFeature","Person","physicalFeatures","professions","inventory","meleeWeapons","rangedWeapons","spellSchools","spells","animals","money","languages","addExperienceExtension","onAdded","afterResponse","removeExperienceExtension","onRemoved","afterUpdate","findModifierByType","det","profession","creatureDeterminants","setProfessionExtensions","professionExtensions","findDeterminantIn","removeModifiersByType","newMod","rollForRace","race","creature","assert","currentDeterminant","resolved","GearService","calculateMeleeDamage","weaponId","calculateArmorValue","armorId","calculatePersonArmorValue","armorIds","rangedWeapon","pWeps","newPWep","Realm","persons","CurrentMagicKnowledge","currentSpellSchools","currentSkills","Collections","except","element","to","array","findIn","toMatchPath","elementsPath","toMatch","removeFrom","MagicService","getAvailableSpellSchools","currentMagicKnowledge","spell","spellSchool","Gender","MALE","FEMALE","ItemService","incomingInventory","weight","p","calculateRangedWeaponWeight","toFixed","ammunition","MoneyService","newMoney","ProfessionService","currentClass","professionClass","prof","newDeterminants","updateProfessionExtensions","currentProfession","AnimalElement","animal","onContextMenu","preventDefault","CreatureArmorValues","armorValues","Map","set","getArmorValue","get","values","defaultComponentStyle","position","textAlign","defaultStyle","shield","left","top","head","rightHand","leftHand","torso","rightLeg","leftLeg","gearService","ArmorCalculationsComponent","updateArmorValues","armorCalcs","setState","classes","className","withStyles","containerStyle","display","flexDirection","ArmorElement","disabled","content","SimpleTextField","PureComponent","parse","variant","change","TextFieldType","INT","FLOAT","parseFloat","customStyle","multiline","backgroundColor","border","fontFamily","fontSize","outline","TEXT","ItemElement","updateAmount","allInventory","minWidth","calculateWeight","MoneyElement","amountType","determinantService","ExtMark","margin","ProfessionExtensionField","addExtension","ext","removeExtension","customClassName","professionValue","extended","professionModifier","fieldContainer","extension","checkboxContainer","right","flexFlow","flexWrap","maxWidth","zIndex","PersonalDeterminantFieldStyle","row1","paddingTop","maxHeight","minHeight","row2","row3","firstInRow","otherInRow","otherInRow2","lastRowChild","PersonalDeterminantsField","updateDeterminant","updateDeterminantExperience","simpleStyle","dropdownIndicator","color","indicatorSeparator","simpleStyleMulti","clearIndicator","multiValueRemove","singleValue","multiValueLabel","background","multiValue","height","SimpleEntitySelect","propName","Tooltip","title","description","placeholder","RangedWeaponElement","pWep","weaponType","newAmmunition","currentAmount","ammunitionAmountField","SelectableList","listStyle","onGearAdd","children","selectComponent","itemsList","overflow","itemContainer","SimpleEnumSelect","getData","source","onSelected","undefined","SimpleList","anchorEl","currentElement","handleClick","currentTarget","onRemove","handleClose","index","Menu","open","onClose","MenuItem","SpeedComponent","calc","tempo","calculateSpeed","firstRow","cell","nextRow","paddingLeft","alignSelf","SpellElement","ingredientsText","manaCost","range","effect","SpellSchoolList","availableSpellSchools","onSpellSchoolAdd","magicSchool","currentLevelIndex","newSpellSchool","onSpellSchoolRemove","newSpellSchools","refreshRelevantMagicSchools","realm","currentRealm","magicService","setSpellSchools","assembleSpellSchools","clear","spellSchoolLevel","keys","spellSchoolLevelText","weaponService","WeaponElement","damageText","updateDamageValue","onRightClick","currentStyle","itemName","itemVariable","CharacterSheetForm","generateStatsAction","showMenu","root","currentRealmData","races","genderSelect","getProfessions","updateProfession","removeProfessionFromHistory","addPersonalRangedWeapon","skill","getRelevantSpells","addItemToInventory","eq","inventoryWeight","currencies","addMoney","lang","marginTop","religions","elementName","FrontCharacterSheet","backgroundSize","ProfessionExtensionView","SimpleListView","CharacterSheetView","listToDivs","gender","personality","age","hairColor","eyeColor","PersonalDeterminantsView","RangedWeaponElementView","fatePoints","mana","currentMana","sanityPoints","nation","parents","family","socialLevel","religion","experience","totalExperience","basicStyle","fieldData","updateProperty","EntityEditor","saveForm","getFormFields","component","updateForm","direction","Save","Cancel","KeyboardReturn","theme","Place","Picture","pictureService","uploadPicture","picture","updateMetadata","PictureUploadForm","upload","files","selectedFile","formData","FormData","append","setName","setPlace","place","placeId","src","alt","acceptedFiles","Scenario","places","ScenarioView","currentScenario","images","imgStyle","viewerIsOpen","currentImage","fetchImages","onData","ok","alert","fetchPicturesForScenario","num","person","url","elevation","Modal","currentIndex","views","realmData","realmMapping","worldLanguage","RealmDataService","getRealmData","Table","filterType","selectableRows","selectableRowsOnClick","disableToolbarSelect","selectableRowsHeader","customToolbarSelect","selectedRows","displayData","setSelectedRows","selectedName","Fragment","Edit","Delete","OpenInNew","translateColumns","hasRealmData","ContentPane","Jewelry","refreshRegistry","DataLoader","serviceName","supportedEntity","refreshForEntity","MenuComponent","handleItemClick","entities","ToolsMenu","showPictureForm","showScenarioView","showUsersTable","isAdmin","aria-label","aria-owns","aria-haspopup","realmDataService","TopMenu","i18n","menuItems","AppBar","Toolbar","languageIcon","size","CircularProgress","realmSelect","changeLanguage","code","loginFieldData","passwordFieldData","LoginComponent","login","res","authData","refreshData","Typography","googleLogo","href","OAuth2RedirectComponent","RegExp","exec","location","search","authoritiesService","PasswordChangeComponent","repeat","savePassword","createMuiTheme","palette","primary","grey","secondary","orange","App","context","initialized","exact","path"],"mappings":"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","file":"static/js/4.4752c035.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/A.8ca41e5c.png\";","module.exports = __webpack_public_path__ + \"static/media/google-logo.36158af3.png\";","export default class ModelElement {\r\n    updateWith(entity: any): ModelElement {\r\n        Object.assign(this, entity);\r\n        return this;\r\n    }\r\n\r\n    updateProp(entity: any, prop: string) {\r\n        if (typeof entity[prop] !== 'undefined') {\r\n            this[prop] = entity[prop];\r\n        }\r\n    }\r\n\r\n    updateNumProp(entity: any, prop: string) {\r\n        if (entity[prop] || entity[prop] === 0 || entity[prop] === '') {\r\n            this[prop] = entity[prop];\r\n        }\r\n    }\r\n\r\n    updateEntityProp(entity: any, prop: string, supplier: () => mixed) {\r\n        if (entity[prop]) {\r\n            this[prop] = supplier();\r\n            this[prop].updateWith(entity[prop]);\r\n        }\r\n    }\r\n\r\n    updateEntityList(entity: any, prop: string, supplier: () => mixed) {\r\n        if (entity[prop]) {\r\n            this[prop] = entity[prop]\r\n                .map(val => {\r\n                    const newVal = supplier();\r\n                    newVal.updateWith(val);\r\n                    return newVal;\r\n                });\r\n        }\r\n    }\r\n}","export const FormFieldType = {\r\n    TEXT: 'text',\r\n    PASSWORD: 'password',\r\n    TEXT_AREA: 'text_area',\r\n    BOOLEAN: 'boolean',\r\n    INTEGER: 'integer',\r\n    FLOAT: 'float',\r\n    ENUM_SELECT: 'enum_select',\r\n    ENUM_COMBOBOX: 'enum_combobox',\r\n    ENTITY_SELECT: 'entity_select',\r\n    ENTITY_COMBOBOX: 'entity_combobox',\r\n    PRICE: 'price',\r\n    ACTION_TIME: 'action_time',\r\n    DETERMINANT: 'determinant',\r\n    MODIFIER: 'modifier',\r\n    BLUEPRINT_SELECT: 'blueprint_select',\r\n    RACE_DETERMINANTS: 'race_determinants',\r\n    CHARACTER_SHEET: 'character_sheet',\r\n};\r\n","import {func, object} from \"prop-types\";\r\n\r\nclass FormFieldData {\r\n    type: string;\r\n    name: string;\r\n    suggestions: object[];\r\n    toView: func;\r\n    toModel: func;\r\n}\r\nexport default FormFieldData;","import {State} from \"../state/State\";\r\nimport {object} from \"prop-types\";\r\n\r\nexport default class Service {\r\n    entityName: string;\r\n\r\n    constructor(entityName: string) {\r\n        this.entityName = entityName;\r\n    }\r\n\r\n    loadData = () => {\r\n        State.fetching(this.entityName);\r\n        fetch(this.entityName, {\r\n            mode: 'cors',\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                // 'Authorization': 'Bearer ' + State.data.currentUser.token\r\n            }\r\n        })\r\n            .then(this.handleErrors)\r\n            .then(response => response.json())\r\n            .then(data => data.map(entity => State.suppliers[this.entityName]().updateWith(entity)))\r\n            .then(data => {\r\n                State.update({[this.entityName]: data});\r\n                State.fetchingFinished(this.entityName);\r\n            })\r\n    };\r\n    save = (entity: object, onSuccess: VoidFunction) => {\r\n        fetch(this.entityName, {\r\n            method: 'post',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Authorization': 'Bearer ' + State.data.currentUser.token\r\n            },\r\n            body: JSON.stringify(entity)\r\n        })\r\n            .then(this.handleErrors)\r\n            .then(this.loadData)\r\n            .then(onSuccess);\r\n    };\r\n    delete(entity: object) {\r\n        fetch(this.entityName, {\r\n            method: 'delete',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Authorization': 'Bearer ' + State.data.currentUser.token\r\n            },\r\n            body: JSON.stringify(entity)\r\n        })\r\n            .then(this.handleErrors)\r\n            .then(() => this.loadData())\r\n    }\r\n\r\n    handleErrors = (response) => {\r\n        if (response.status !== 200) {\r\n            let message = response.json();\r\n\r\n            if (response.status === 400) {\r\n                message.then(value => {\r\n                    window.confirm(Array.from(new Set(value.errors\r\n                        .map(e => 'cannot set field ' + e.field + ' with ' + e.rejectedValue + ', ' + e.message)))\r\n                        .join('\\n'));\r\n                });\r\n            } else if (response.status === 409) {\r\n                message.then(value => {\r\n                    window.confirm(value.errors[0].message);\r\n                });\r\n            } else if (response.status === 403 || response.status === 401 || response.status === 405) {\r\n                State.updateUser({token: null})\r\n            }\r\n            throw response;\r\n        }\r\n        return response;\r\n    };\r\n}","import ModelElement from \"./ModelElement\";\r\nimport {FormFieldType} from \"../form/FormFieldType\";\r\nimport FormFieldData from \"../form/FormFieldData\";\r\nimport {State} from \"../state/State\";\r\nimport Service from \"../client/Service\";\r\n\r\nclass Entity extends ModelElement {\r\n    id: number;\r\n    version: number;\r\n    uuid: string;\r\n}\r\n\r\nexport default Entity;\r\n\r\nexport const CreateColumn = (name: string, type: string) => {\r\n    const options = {filter: false, sort: false};\r\n    const column = {name: name, options: options};\r\n\r\n    switch (type) {\r\n        case FormFieldType.TEXT:\r\n        case FormFieldType.FLOAT:\r\n        case FormFieldType.INTEGER:\r\n        case FormFieldType.BOOLEAN:\r\n            options.filter = true;\r\n            options.sort = true;\r\n            break;\r\n        case FormFieldType.PRICE:\r\n        case FormFieldType.MODIFIER:\r\n        case FormFieldType.ACTION_TIME:\r\n            options.filter = false;\r\n            options.sort = true;\r\n            options.customBodyRender = val => val ? val.toString() : '';\r\n            break;\r\n        case FormFieldType.ENTITY_SELECT:\r\n        case FormFieldType.ENTITY_COMBOBOX:\r\n            options.filter = true;\r\n            options.sort = true;\r\n            options.customBodyRender = val => val ? val.name : '';\r\n            break;\r\n        default:\r\n            options.filter = false;\r\n            options.sort = false;\r\n    }\r\n\r\n    return column;\r\n};\r\n\r\nexport const CreateFormField = (name: string, type: string, suggestions: string, toView: string => string, toModel: string => string) => {\r\n    const formField = new FormFieldData();\r\n    formField.name = name;\r\n    formField.type = type;\r\n    formField.suggestions = suggestions;\r\n    formField.toView = toView;\r\n    formField.toModel = toModel;\r\n    return formField;\r\n};\r\n\r\nexport const RegisterEntity = (entityClass: any, columns: FormFieldData[], fields: FormFieldData[]) => {\r\n    State.suppliers[entityClass.entityName] = () => new entityClass();\r\n    State.services[entityClass.entityName] = new Service(entityClass.entityName);\r\n    State.columns[entityClass.entityName] = columns;\r\n    State.formFields[entityClass.entityName] = fields;\r\n};\r\n","import Entity from \"../model/Entity\";\r\n\r\nexport const State = {\r\n    data: {\r\n        showTable: null,\r\n        showForm: null,\r\n        afterForm: null,\r\n        fetching: new Set(),\r\n        currentUser: {\r\n            username: null,\r\n            password: null,\r\n            token: false\r\n        }\r\n    },\r\n    services: {},\r\n    formFields: {},\r\n    columns: {},\r\n    suppliers: {},\r\n    onUpdate: data => {},\r\n    update(data: any) {\r\n        this.data = {...this.data, ...data};\r\n        this.onUpdate(this.data);\r\n    },\r\n    updateUser(user: any) {\r\n        this.data.currentUser = {...this.data.currentUser, ...user};\r\n        this.onUpdate(this.data);\r\n    },\r\n    showTable(name: string) {\r\n        this.update({entity: null, showForm: null, showTable: name, showScenario: false});\r\n    },\r\n    showForm(name: string, entity: Entity) {\r\n        this.update({entity: entity, showForm: name, showTable: null, showScenario: false})\r\n    },\r\n    updateScenario(scenario: Entity) {\r\n        this.update({entity: scenario, showForm: null, showTable: null, showScenario: true})\r\n    },\r\n    updateEntity(updates: any) {\r\n        this.data.entity.updateWith(updates);\r\n        this.update({entity: this.data.entity});\r\n    },\r\n    fetching(entityName: string) {\r\n        this.data.fetching.add(entityName);\r\n        this.update({fetching: this.data.fetching});\r\n    },\r\n    fetchingFinished(entityName: string) {\r\n        this.data.fetching.delete(entityName);\r\n        this.update({fetching: this.data.fetching});\r\n    }\r\n};\r\n","import {State} from \"../state/State\";\r\n\r\nconst logoutCodes = [401, 403, 405, 302];\r\n\r\nexport default class RemoteService {\r\n    requestFor(data: object, uri: string, onResponse: VoidFunction) {\r\n        const jsonBody = JSON.stringify(data);\r\n        fetch(uri, {\r\n            method: 'post',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Authorization': 'Bearer ' + State.data.currentUser.token\r\n            },\r\n            body: jsonBody\r\n        }).then(this.handleResponse(onResponse));\r\n    }\r\n\r\n    postRequestWithoutResponse(data: object, uri: string, onResponse: VoidFunction) {\r\n        const jsonBody = JSON.stringify(data);\r\n        fetch(uri, {\r\n            method: 'post',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Authorization': 'Bearer ' + State.data.currentUser.token\r\n            },\r\n            body: jsonBody\r\n        }).then(this.handleRawResponse(onResponse));\r\n    }\r\n\r\n    requestForPath(uri: string, onResponse: VoidFunction) {\r\n        fetch(uri, {\r\n            method: 'get',\r\n            mode: 'cors',\r\n            headers: {\r\n                // 'Authorization': 'Bearer ' + State.data.currentUser.token\r\n            },\r\n        }).then(this.handleResponse(onResponse))\r\n        .catch(reason => console.log(reason));\r\n    }\r\n\r\n    rawGetRequestFor(uri: string, onResponse: VoidFunction) {\r\n        fetch(uri, {\r\n            method: 'get',\r\n            mode: 'cors',\r\n            headers: {\r\n                // 'Authorization': 'Bearer ' + State.data.currentUser.token\r\n            },\r\n        }).then(this.handleRawResponse(onResponse))\r\n    }\r\n\r\n    rawPostRequest(uri: string, data: object, onResponse: VoidFunction) {\r\n        fetch(uri, {\r\n            method: 'post',\r\n            mode: 'cors',\r\n            headers: {\r\n                // 'Authorization': 'Bearer ' + State.data.currentUser.token\r\n            },\r\n            body: data,\r\n        }).then(this.handleRawResponse(onResponse))\r\n    }\r\n\r\n    handleRawResponse = onResponse => response => {\r\n        if (response.status === 200) {\r\n            response.text().then(onResponse);\r\n        } else if (logoutCodes.includes(response.status)) {\r\n            State.updateUser({token: null})\r\n        } else {\r\n            console.warn(response.status);\r\n        }\r\n    };\r\n\r\n    handleResponse = onResponse => response => {\r\n        if (response.status === 200) {\r\n            response.json().then(onResponse);\r\n        } else if (logoutCodes.includes(response.status)) {\r\n            State.updateUser({token: false})\r\n        } else {\r\n            console.warn(response.status);\r\n        }\r\n    };\r\n}","import Entity from \"../model/Entity\";\r\nimport {State} from \"../state/State\";\r\n\r\nexport default class Role extends Entity {\r\n  static entityName: string = 'role';\r\n\r\n  authority: string;\r\n}\r\n\r\nState.suppliers.role = () => new Role();\r\n","import {FormFieldType} from \"../form/FormFieldType\";\r\nimport Entity, {CreateColumn, CreateFormField} from \"../model/Entity\";\r\nimport {State} from \"../state/State\";\r\nimport Role from \"./Role\";\r\n\r\nexport default class User extends Entity {\r\n  static entityName: string = 'user';\r\n\r\n  username: string;\r\n  password: string;\r\n  authorities: Role[];\r\n}\r\n\r\nState.suppliers.user = () => new User();\r\nState.columns.user    = [CreateColumn('username', FormFieldType.TEXT)];\r\nState.formFields.user = [CreateFormField('authorities', FormFieldType.ENTITY_COMBOBOX, Role.entityName)];","import RemoteService from \"../client/RemoteService\";\r\nimport Service from \"../client/Service\";\r\nimport {State} from \"../state/State\";\r\nimport Role from \"./Role\";\r\nimport User from \"./User\";\r\n\r\nconst userService = new Service(User.entityName);\r\nconst roleService = new Service(Role.entityName);\r\n\r\nexport default class AuthoritiesService extends RemoteService {\r\n  refreshAuthorities() {\r\n    this.requestForPath('authorities', authorities => {\r\n      State.updateUser({authorities: authorities});\r\n      AuthoritiesService.updateAdminAuthoritiesIfNeeded();\r\n    });\r\n  }\r\n\r\n  static hasAuthority(entityName: string) {\r\n    const authorities = State.data.currentUser.authorities;\r\n    return authorities && authorities.find(role => role.authority.toLowerCase()\r\n                                                       .endsWith(entityName.toLowerCase()));\r\n  }\r\n\r\n  updatePassword(newPassword: string) {\r\n    this.postRequestWithoutResponse({...State.data.currentUser, ...{password: newPassword}},\r\n                                    'password',\r\n                                    () => State.updateUser({oneTimePassword: false}))\r\n  }\r\n\r\n  static updateAdminAuthoritiesIfNeeded() {\r\n    if (AuthoritiesService.hasAuthority('admin')) {\r\n      roleService.loadData();\r\n      userService.loadData();\r\n      State.services.user = userService;\r\n    }\r\n  }\r\n}","import React, {Component} from \"react\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from 'react-select/animated'\r\nimport {FormLabel} from \"@material-ui/core\";\r\nimport {State} from \"../../state/State\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass EnumSelect extends Component {\r\n  static style = {\r\n    control: (provided, state) => ({\r\n      ...provided,\r\n      width: 400,\r\n      marginLeft: 10\r\n    })\r\n  };\r\n\r\n  getLabel = val => {\r\n    let label;\r\n    if (typeof val === 'string') label = val;\r\n    else if (val.label) label = val.label;\r\n    if (val.name) return val.name;\r\n    if (val) return val.toString();\r\n\r\n    return <div>label</div>;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      t,\r\n      name,\r\n      suggestions = name,\r\n      value,\r\n      label = t(name),\r\n      data = State.data[suggestions],\r\n      onChange = selected => State.updateEntity({[name]: selected}),\r\n      multi,\r\n      editable\r\n    } = this.props;\r\n\r\n    return <Grid container spacing={2} alignItems={\"center\"}>\r\n      <Grid item>\r\n        <FormLabel>{label}</FormLabel>\r\n      </Grid>\r\n      <Grid item>\r\n        <Select\r\n            textFieldProps={{label: label, InputLabelProps: {shrink: false}}}\r\n            styles={EnumSelect.style}\r\n            options={data}\r\n            components={makeAnimated()}\r\n            onChange={onChange}\r\n            value={multi ? value : {label: value, value: value}}\r\n            getOptionLabel={this.getLabel}\r\n            getOptionValue={val => val}\r\n            isSearchable\r\n            isClearable\r\n            isMulti={multi}\r\n            isDisabled={!editable}/>\r\n      </Grid>\r\n    </Grid>;\r\n  }\r\n}\r\n\r\nexport default withTranslation()(EnumSelect);","import {TextField} from \"@material-ui/core\";\r\nimport React, {Component} from \"react\";\r\n\r\nclass IntegerField extends Component {\r\n  updateInt = onChange => event => {\r\n    let number = parseInt(event.target.value);\r\n    if (number || number === 0) {\r\n      onChange(number)\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {onChange, ...other} = this.props;\r\n    return <TextField type='number' onChange={this.updateInt(onChange)} {...other}/>;\r\n  }\r\n}\r\n\r\nexport default IntegerField;","import ModelElement from \"../ModelElement\";\r\n\r\nexport const ActionType = {\r\n    ACTION: 'ACTION',\r\n    ROUND: 'ROUND',\r\n    TURN: 'TURN',\r\n\r\n    allOf() {\r\n        return [this.ACTION, this.ROUND, this.TURN];\r\n    }\r\n};\r\n\r\nexport default class ActionTime extends ModelElement {\r\n    actionType: string = ActionType.ACTION;\r\n    amount: number = 1;\r\n\r\n    toString(): string {\r\n        switch (this.actionType) {\r\n            case ActionType.ACTION:\r\n                return this.amount;\r\n            case ActionType.ROUND:\r\n                return this.amount + 'r';\r\n            case ActionType.TURN:\r\n                return this.amount + 't';\r\n            default:\r\n                return this.amount;\r\n        }\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {FormLabel, TextField} from \"@material-ui/core\";\r\nimport EnumSelect from \"./EnumSelect\";\r\nimport IntegerField from \"./IntegerField\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport {State} from \"../../state/State\";\r\nimport {ActionType} from \"../../model/rule/ActionTime\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass ActionTimeField extends Component {\r\n  onUpdate = updates => {\r\n    const {\r\n      name,\r\n      value = State.data.entity[name],\r\n    } = this.props;\r\n    Object.assign(value, updates);\r\n    State.updateEntity({[name]: value})\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      t,\r\n      name,\r\n      label = t(name),\r\n      value = State.data.entity[name],\r\n      editable\r\n    } = this.props;\r\n\r\n    return <Grid container alignItems={\"center\"} spacing={2}>\r\n      <Grid item>\r\n        <FormLabel>{label}</FormLabel>\r\n      </Grid>\r\n      <Grid item>\r\n        <EnumSelect key={'actionType'}\r\n                    label={t('type')}\r\n                    data={ActionType.allOf()}\r\n                    value={value.type}\r\n                    onChange={type => this.onUpdate({type: type})}\r\n                    editable={editable}/>\r\n      </Grid>\r\n      <Grid item>\r\n        <IntegerField key={'amount'}\r\n                      label={t('amount')}\r\n                      value={value.amount}\r\n                      onChange={amount => this.onUpdate({amount: amount})}\r\n                      InputProps={{readOnly: !editable}}/>\r\n      </Grid>\r\n    </Grid>;\r\n  }\r\n}\r\n\r\nexport default withTranslation()(ActionTimeField);","import Grid               from \"@material-ui/core/Grid\";\r\nimport React, {Component} from \"react\";\r\nimport {withTranslation}  from \"react-i18next\";\r\nimport Select            from \"react-select\";\r\nimport makeAnimated      from 'react-select/animated'\r\nimport {State}           from \"../../state/State\";\r\n\r\nclass BlueprintSelect extends Component {\r\n  render() {\r\n    const {\r\n            t,\r\n            name,\r\n            label = t(name),\r\n            suggestions = name,\r\n            data = State.data[suggestions],\r\n            value = State.data.entity[name],\r\n            onChange = selected => State.updateEntity({[name]: selected}),\r\n            editable\r\n    } = this.props;\r\n\r\n    const desc = value ? <div>{t('price')}: {value.suggestedPrice.toString()},\r\n      {t('wieght')}: {value.suggestedWeight} kg</div> : <div/>;\r\n\r\n    return <Grid container spacing={2} alignItems={\"center\"}>\r\n      <Grid item>{label}</Grid>\r\n      <Grid item xs={6}>\r\n        <Select textFieldProps={{label: label, InputLabelProps: {shrink: false}}}\r\n                options={data}\r\n                components={makeAnimated()}\r\n                getOptionLabel={option => <div>{option.name}</div>}\r\n                getOptionValue={option => option.id}\r\n                filterOption={(option, input) => option.data.name.startsWith(input)}\r\n                onChange={onChange}\r\n                value={value}\r\n                isDisabled={!editable}/>\r\n      </Grid>\r\n      <Grid item>\r\n        {desc}\r\n      </Grid>\r\n    </Grid>;\r\n  }\r\n}\r\n\r\nexport default withTranslation()(BlueprintSelect);","import {State} from \"../../state/State\";\r\nimport Entity from \"../Entity\";\r\n\r\nexport const Dice = {\r\n    K2: 'K2',\r\n    K3: 'K3',\r\n    K4: 'K4',\r\n    K6: 'K6',\r\n    K8: 'K8',\r\n    K10: 'K10',\r\n    K12: 'K12',\r\n    K20: 'K20',\r\n    K100: 'K100',\r\n\r\n    allOf() {\r\n        return [\r\n            this.K2,\r\n            this.K3,\r\n            this.K4,\r\n            this.K6,\r\n            this.K8,\r\n            this.K10,\r\n            this.K12,\r\n            this.K20,\r\n            this.K100,\r\n        ]\r\n    }\r\n};\r\n\r\nexport default class DiceRoll extends Entity {\r\n    dice: string;\r\n    rolls: number;\r\n\r\n    toString() {\r\n        return this.rolls + this.dice\r\n    }\r\n}\r\n\r\nState.data.dice = Dice.allOf();","import DiceRoll from \"./DiceRoll\";\r\nimport Entity from \"../Entity\";\r\n\r\nexport const ModifierType = {\r\n  REGULAR: 'REGULAR',\r\n  PROFESSION: 'PROFESSION',\r\n  EXPERIENCE: 'EXPERIENCE',\r\n  DICE: 'DICE',\r\n\r\n  allOf() {\r\n    return [\r\n      this.REGULAR,\r\n      this.PROFESSION,\r\n      this.EXPERIENCE,\r\n      this.DICE,\r\n    ];\r\n  }\r\n};\r\n\r\nclass Modifier extends Entity {\r\n  value: number;\r\n  type: string = ModifierType.REGULAR;\r\n  rolls: DiceRoll[] = [];\r\n\r\n  updateWith(entity: Modifier): Modifier {\r\n    super.updateWith(entity);\r\n    this.updateEntityList(entity, 'rolls', () => new DiceRoll());\r\n    return this;\r\n  }\r\n\r\n  toString() {\r\n    return this.type + ' ' + this.value + ' ' + this.rolls.map(\r\n        roll => roll.toString()).join(' ')\r\n  }\r\n}\r\n\r\nexport default Modifier;\r\n","import Modifier, {ModifierType} from \"./Modifier\";\r\nimport Entity                   from \"../Entity\";\r\n\r\nexport default class Determinant extends Entity {\r\n    type: string;\r\n    value: number = 0;\r\n    modifiers: Modifier[] = [];\r\n\r\n    updateWith(entity: Determinant): Determinant {\r\n        super.updateWith(entity);\r\n        this.updateEntityList(entity, 'modifiers', () => new Modifier());\r\n        return this;\r\n    }\r\n\r\n    getExperienceExtensions() {\r\n        return this.modifiers.filter(mod => mod.type === ModifierType.EXPERIENCE)\r\n    }\r\n\r\n    calculateExperienceValue() {\r\n        return this.value + this.getExperienceExtensions().reduce((a, b) => a + (b.value), 0);\r\n    }\r\n    calculateFinalValue() {\r\n        return this.value + this.modifiers.reduce((a, b) => a + (b.value), 0);\r\n    }\r\n}\r\n\r\nexport const DeterminantType = {\r\n    SPEED: 'SPEED',\r\n    BATTLE: 'BATTLE',\r\n    SHOOTING: 'SHOOTING',\r\n    STRENGTH: 'STRENGTH',\r\n    DURABILITY: 'DURABILITY',\r\n    HEALTH: 'HEALTH',\r\n    INITIATIVE: 'INITIATIVE',\r\n    ATTACK: 'ATTACK',\r\n    DEXTERITY: 'DEXTERITY',\r\n    LEADER_SKILLS: 'LEADER_SKILLS',\r\n    INTELLIGENCE: 'INTELLIGENCE',\r\n    CONTROL: 'CONTROL',\r\n    WILL: 'WILL',\r\n    CHARISMA: 'CHARISMA',\r\n    PARRY: 'PARRY',\r\n    OPPONENT_PARRY: 'OPPONENT_PARRY',\r\n\r\n    allOf(): string[] {\r\n        return [\r\n            this.SPEED,\r\n            this.BATTLE,\r\n            this.SHOOTING,\r\n            this.STRENGTH,\r\n            this.DURABILITY,\r\n            this.HEALTH,\r\n            this.INITIATIVE,\r\n            this.ATTACK,\r\n            this.DEXTERITY,\r\n            this.LEADER_SKILLS,\r\n            this.INTELLIGENCE,\r\n            this.CONTROL,\r\n            this.WILL,\r\n            this.CHARISMA,\r\n            this.PARRY,\r\n            this.OPPONENT_PARRY,\r\n        ];\r\n    },\r\n    personal(): string[] {\r\n        return [\r\n            this.SPEED,\r\n            this.BATTLE,\r\n            this.SHOOTING,\r\n            this.STRENGTH,\r\n            this.DURABILITY,\r\n            this.HEALTH,\r\n            this.INITIATIVE,\r\n            this.ATTACK,\r\n            this.DEXTERITY,\r\n            this.LEADER_SKILLS,\r\n            this.INTELLIGENCE,\r\n            this.CONTROL,\r\n            this.WILL,\r\n            this.CHARISMA,\r\n        ];\r\n    },\r\n};\r\n","import React, {Component} from \"react\";\r\nimport EnumSelect from \"./EnumSelect\";\r\nimport IntegerField from \"./IntegerField\";\r\nimport {State} from \"../../state/State\";\r\nimport {Dice} from \"../../model/rule/DiceRoll\";\r\n\r\nexport default class DiceRollField extends Component {\r\n    updateDiceRoll = updates => {\r\n        this.props.value.updateWith(updates);\r\n        State.update({currentDiceRollEdit: this.props.value});\r\n    };\r\n\r\n    render() {\r\n        const {value, id, editable} = this.props;\r\n\r\n        return <div key={id}>\r\n            <EnumSelect key={id + '_type'}\r\n                        label={'dice'}\r\n                        data={Dice.allOf()}\r\n                        value={value.dice}\r\n                        onChange={selected => this.updateDiceRoll({dice: selected})}\r\n                        editable={editable}/>\r\n            <IntegerField key={id + '_rolls'}\r\n                          label={'rolls'}\r\n                          value={value.rolls}\r\n                          onChange={number => this.updateDiceRoll({rolls: number})}\r\n                          InputProps={{readOnly: !editable}}/>\r\n        </div>;\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport EnumSelect from \"./EnumSelect\";\r\nimport IntegerField from \"./IntegerField\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport DiceRollField from \"./DiceRollField\";\r\nimport {ModifierType} from \"../../model/rule/Modifier\";\r\nimport {State} from \"../../state/State\";\r\nimport DiceRoll from \"../../model/rule/DiceRoll\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass ModifierField extends Component {\r\n\r\n    update = updates => {\r\n        this.props.value.updateWith(updates);\r\n        State.update({currentModifierEdit: this.props.value});\r\n    };\r\n\r\n    onAddDiceRoll = () => {\r\n        this.props.value.rolls.push(new DiceRoll());\r\n        State.update({currentModifierEdit: this.props.value});\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            t,\r\n            name,\r\n            value,\r\n            label = t(name),\r\n            id,\r\n            types = ModifierType.allOf(),\r\n            editable\r\n        } = this.props;\r\n\r\n        let dices = <div/>;\r\n        if (value.type === ModifierType.DICE) {\r\n            dices = <Grid item>\r\n                {\r\n                    value.rolls.map(diceRoll =>\r\n                        <DiceRollField id={id} key={id} value={diceRoll}\r\n                                       onChange={() => State.update({currentModifierEdit: value})}\r\n                                       editable={editable}/>\r\n                    )\r\n                }\r\n                {editable ?\r\n                    <Button onClick={this.onAddDiceRoll}>{t('newDice')}</Button> :\r\n                    <div/>\r\n                }\r\n            </Grid>;\r\n        }\r\n\r\n        return <Grid container item spacing={2} alignItems={\"center\"}>\r\n            <Grid item>\r\n                <IntegerField key={id + '_value'} label={label + ' – ' + t('value')}\r\n                              value={value.value}\r\n                              onChange={number => this.update({value: number})}\r\n                              InputProps={{readOnly: !editable}}/>\r\n            </Grid>\r\n            <Grid item>\r\n                <EnumSelect key={id || name + '_type'} label={t('modifierType') + ' ' + name ? t(name) : value.id}\r\n                            data={types} value={value.type}\r\n                            onChange={selected => this.update({type: selected})}\r\n                            editable={editable}/>\r\n            </Grid>\r\n            {dices}\r\n        </Grid>;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(ModifierField);","import Button                         from \"@material-ui/core/Button\";\r\nimport Grid                           from \"@material-ui/core/Grid\";\r\nimport IconButton                     from \"@material-ui/core/IconButton\";\r\nimport Paper                          from \"@material-ui/core/Paper\";\r\nimport {Remove}                       from \"@material-ui/icons\";\r\nimport React, {Component}             from \"react\";\r\nimport {withTranslation}              from \"react-i18next\";\r\nimport Determinant, {DeterminantType} from \"../../model/rule/Determinant\";\r\nimport Modifier, {ModifierType}       from \"../../model/rule/Modifier\";\r\nimport {State}                        from \"../../state/State\";\r\nimport EnumSelect                     from \"./EnumSelect\";\r\nimport IntegerField                   from \"./IntegerField\";\r\nimport ModifierField                  from \"./ModifierField\";\r\n\r\nclass DeterminantField extends Component {\r\n\r\n  deleteItem = (item) => {\r\n    const value = this.props.value;\r\n    value.splice(value.indexOf(item), 1);\r\n    State.update({currentDeterminantEdit: value});\r\n  };\r\n\r\n  update = (determinant, updates) => {\r\n    determinant.updateWith(updates);\r\n    State.updateEntity({[this.props.name]: this.props.value});\r\n  };\r\n\r\n  addDeterminant = () => {\r\n    const entity = State.data.entity;\r\n    const prop = this.props.name;\r\n\r\n    if (entity[prop]) {\r\n      entity[prop].push(new Determinant());\r\n      State.updateEntity({[prop]: entity[prop]});\r\n    } else {\r\n      State.updateEntity({[prop]: [new Determinant()]});\r\n    }\r\n  };\r\n\r\n  addModifierToDeterminant = (determinant) => () => {\r\n    determinant.modifiers.push(new Modifier());\r\n    State.updateEntity({[this.props.name]: this.props.value});\r\n  };\r\n\r\n  updateModifier = modifier => newModifier => {\r\n    modifier.updateWith(newModifier);\r\n    State.updateEntity({[this.props.name]: this.props.value});\r\n  };\r\n\r\n  render() {\r\n    const {\r\n            t,\r\n            name,\r\n            value,\r\n            modifierTypes = ModifierType.allOf(),\r\n            types = DeterminantType.allOf(),\r\n            editable\r\n          } = this.props;\r\n\r\n    return <Grid container spacing={2} alignItems={\"center\"}>\r\n      <Grid item>{t(name)}</Grid>\r\n      <Grid item container spacing={2} alignItems={\"center\"}>\r\n        {value && value.map(determinant => {\r\n          console.log(determinant);\r\n          return (\r\n              <Grid item container spacing={2} alignItems={\"center\"} key={determinant.id + determinant.type}>\r\n                <Grid item>\r\n                  <EnumSelect key={determinant.id + determinant.type}\r\n                              label={t(name) + determinant.type}\r\n                              data={types} value={determinant.type}\r\n                              onChange={selected => this.update(determinant, {type: selected})}\r\n                              editable={editable}/>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IntegerField key={determinant.id + determinant.type + 'value'} label={'value'}\r\n                                value={determinant.value}\r\n                                onChange={number => this.update(determinant, {value: number})}\r\n                                InputProps={{readOnly: !editable}}/>\r\n                </Grid>\r\n                {<Grid item container spacing={2} alignItems={\"center\"}>\r\n                  <Grid item>\r\n                    {t('modifier')}\r\n                  </Grid>\r\n                  <Grid item>\r\n                    {determinant.modifiers && determinant.modifiers.map(currentModifier => (\r\n                        <Paper key={determinant.id + determinant.type + '_' + currentModifier.id}>\r\n                          <ModifierField\r\n                              id={determinant.id\r\n                                  + determinant.type\r\n                                  + currentModifier.id\r\n                                  + currentModifier.type}\r\n                              value={currentModifier}\r\n                              types={modifierTypes}\r\n                              editable={editable}/>\r\n                        </Paper>))}\r\n                  </Grid>\r\n                  <Grid item>\r\n                    {editable ? <Button\r\n                            onClick={this.addModifierToDeterminant(determinant)}>{t('newModifier')}</Button> :\r\n                        <div/>\r\n                    }\r\n                  </Grid>\r\n                </Grid>}\r\n                {editable ?\r\n                    <IconButton key={determinant.id + determinant.type + 'remove'}\r\n                                onClick={() => this.deleteItem(determinant)}><Remove/></IconButton> :\r\n                    <div/>}\r\n              </Grid>)\r\n        })}\r\n      </Grid>\r\n      <Grid item>\r\n        {editable ? <Button onClick={this.addDeterminant}>{t('newDeterminant')}</Button> : <div/>}\r\n      </Grid>\r\n    </Grid>;\r\n  }\r\n}\r\n\r\nexport default withTranslation()(DeterminantField);","import React, {Component} from \"react\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from 'react-select/animated'\r\nimport {FormLabel} from \"@material-ui/core\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport {State} from \"../../state/State\";\r\n\r\nclass EntitySelect extends Component {\r\n    render() {\r\n        const {\r\n            t,\r\n            name,\r\n            label = t(name),\r\n            suggestions = name,\r\n            data = State.data[suggestions],\r\n            value = State.data.entity[name],\r\n            multi = false,\r\n            onChange = this.updateEntity,\r\n            editable\r\n        } = this.props;\r\n\r\n        return <div>\r\n            <FormLabel>{label}</FormLabel>\r\n            <Select textFieldProps={{label: label, InputLabelProps: {shrink: false}}}\r\n                    options={data}\r\n                    components={makeAnimated()}\r\n                    getOptionLabel={option => {\r\n                        return <div>{option.name || option.authority}</div>\r\n                    }}\r\n                    getOptionValue={option => {\r\n                        return option.id\r\n                    }}\r\n                    filterOption={(option, input) => !option.data.name || option.data.name.startsWith(input)}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    isMulti={multi}\r\n                    isDisabled={!editable}/>\r\n        </div>;\r\n    }\r\n\r\n    updateEntity = newValue => {\r\n        const {name} = this.props;\r\n        const entity = State.data.entity;\r\n        entity.updateWith({[name]: newValue});\r\n        State.update({entity: entity})\r\n    };\r\n}\r\n\r\nexport default withTranslation()(EntitySelect);","import React, {Component} from \"react\";\r\nimport {FormLabel, TextField} from \"@material-ui/core\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport {State} from \"../../state/State\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass PriceField extends Component {\r\n\r\n  updatePrice = (onChange, part) => event => {\r\n    const {name, value = State.data.entity[name]} = this.props;\r\n    let number = parseInt(event.target.value);\r\n    if (number || number === 0) {\r\n      onChange({...value, ...{[part]: number}})\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      t,\r\n      name,\r\n      label = t(name),\r\n      onChange = price => State.updateEntity({[name]: price}),\r\n      value = State.data.entity[name],\r\n      editable\r\n    } = this.props;\r\n\r\n    return <Grid container spacing={2} alignItems={\"center\"}>\r\n      <Grid item>\r\n        <FormLabel style={{marginRight: 10}}>{label}</FormLabel>\r\n      </Grid>\r\n      <Grid item>\r\n        <TextField label={t('gold')}\r\n                   type='number'\r\n                   value={value.gold}\r\n                   onChange={this.updatePrice(onChange, 'gold')}\r\n                   InputProps={{readOnly: !editable}}/>\r\n      </Grid>\r\n      <Grid item>\r\n        <TextField label={t('silver')}\r\n                   type='number'\r\n                   value={value.silver}\r\n                   onChange={this.updatePrice(onChange, 'silver')}\r\n                   InputProps={{readOnly: !editable}}/>\r\n      </Grid>\r\n      <Grid item>\r\n        <TextField label={t('lead')}\r\n                   type='number'\r\n                   value={value.lead}\r\n                   onChange={this.updatePrice(onChange, 'lead')}\r\n                   InputProps={{readOnly: !editable}}/>\r\n      </Grid>\r\n    </Grid>\r\n  }\r\n}\r\n\r\nexport default withTranslation()(PriceField);","import Grid from \"@material-ui/core/Grid\";\r\nimport React, {Component} from 'react';\r\nimport {withTranslation} from \"react-i18next\";\r\nimport Determinant from \"../../model/rule/Determinant\";\r\nimport DiceRoll from \"../../model/rule/DiceRoll\";\r\nimport Modifier, {ModifierType} from \"../../model/rule/Modifier\";\r\nimport {State} from \"../../state/State\";\r\nimport EnumSelect from \"./EnumSelect\";\r\nimport IntegerField from \"./IntegerField\";\r\n\r\nconst determinantsNames = ['SPEED',\r\n                           'BATTLE',\r\n                           'SHOOTING',\r\n                           'STRENGTH',\r\n                           'DURABILITY',\r\n                           'HEALTH',\r\n                           'INITIATIVE',\r\n                           'ATTACK',\r\n                           'DEXTERITY',\r\n                           'LEADER_SKILLS',\r\n                           'INTELLIGENCE',\r\n                           'CONTROL',\r\n                           'WILL',\r\n                           'CHARISMA',];\r\n\r\nclass RaceDeterminantsField extends Component {\r\n  regenerateDeterminants = entity => {\r\n    if (!entity.determinants || entity.determinants.length === 0) {\r\n      determinantsNames.forEach(name => {\r\n        const modifier = new Modifier();\r\n        modifier.type  = ModifierType.DICE;\r\n\r\n        const determinant = new Determinant();\r\n        determinant.type  = name;\r\n        determinant.modifiers.push(modifier);\r\n\r\n        entity.determinants.push(determinant);\r\n      })\r\n    } else {\r\n      entity.determinants.filter(determinant => !determinant.modifiers)\r\n            .forEach(determinant => {\r\n              determinant.modifiers = [new Modifier()]\r\n            });\r\n      entity.determinants.filter(determinant => determinant.modifiers.length === 0)\r\n            .forEach(determinant => determinant.modifiers.push(new Modifier()));\r\n    }\r\n  };\r\n\r\n  updateDiceType = determinant => type => {\r\n    if (!type && determinant.modifiers[0].rolls.length === 1) {\r\n      determinant.modifiers[0].rolls.length = 0;\r\n    } else if (type && determinant.modifiers[0].rolls.length === 0) {\r\n      determinant.modifiers[0].rolls.push(new DiceRoll());\r\n      determinant.modifiers[0].rolls[0].dice = type;\r\n    } else {\r\n      determinant.modifiers[0].rolls[0].dice = type;\r\n    }\r\n    State.updateEntity(State.data.entity);\r\n  };\r\n\r\n  updateDiceRolls = determinant => rolls => {\r\n    if (rolls === 0 && determinant.modifiers[0].rolls.length === 1) {\r\n      determinant.modifiers[0].rolls.length = 0;\r\n    } else if (rolls > 0 && determinant.modifiers[0].rolls.length === 0) {\r\n      determinant.modifiers[0].rolls.push(new DiceRoll());\r\n      determinant.modifiers[0].rolls[0].rolls = rolls;\r\n    } else {\r\n      determinant.modifiers[0].rolls[0].rolls = rolls;\r\n    }\r\n    State.updateEntity(State.data.entity);\r\n  };\r\n\r\n  updateBasicModifier = determinant => modifier => {\r\n    determinant.modifiers[0].value = modifier;\r\n    State.updateEntity(State.data.entity);\r\n  };\r\n\r\n  render() {\r\n    const {t}    = this.props;\r\n    const entity = State.data.entity;\r\n    this.regenerateDeterminants(entity);\r\n\r\n    const fields = entity.determinants.map(determinant => [\r\n        <Grid item xs={1}>{t(determinant.type)}</Grid>,\r\n        <Grid item xs={3}><EnumSelect name={'dice'}\r\n                                      value={determinant.modifiers[0].rolls.length && determinant.modifiers[0].rolls[0].dice}\r\n                                      editable\r\n                                      onChange={this.updateDiceType(determinant)}/></Grid>,\r\n        <Grid item xs={1}>{t('rolls')} <IntegerField value={determinant.modifiers[0].rolls.length && determinant.modifiers[0].rolls[0].rolls}\r\n                                                     onChange={this.updateDiceRolls(determinant)}/></Grid>,\r\n        <Grid item xs={1}>{t('plus')} <IntegerField value={determinant.modifiers[0].value}\r\n                                                    onChange={this.updateBasicModifier(determinant)}/></Grid>]);\r\n\r\n    return <Grid container spacing={2} alignItems={\"center\"}>\r\n      {fields.map(field => <Grid item container xs={12} alignItems={\"center\"}>{field}</Grid>)}\r\n    </Grid>;\r\n  }\r\n}\r\n\r\nexport default withTranslation()(RaceDeterminantsField);","import Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\n\r\nexport default class Skill extends Entity {\r\n    static entityName: string = 'skill';\r\n\r\n    name: string;\r\n    description: string;\r\n\r\n\r\n    updateWith(entity: Skill): Skill {\r\n        return super.updateWith(entity);\r\n    }\r\n}\r\n\r\nRegisterEntity(Skill, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n]);","import Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport Skill from \"../knowledge/Skill\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\n\r\nexport default class ProfessionClass extends Entity {\r\n    static entityName: string = 'professionClass';\r\n\r\n    name: string;\r\n    description: string;\r\n    skills: Skill[] = [];\r\n\r\n    updateWith(entity: ProfessionClass): ProfessionClass {\r\n        super.updateWith(entity);\r\n        this.updateEntityList(entity, 'skills', () => new Skill());\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterEntity(ProfessionClass, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('skills', FormFieldType.ENTITY_COMBOBOX, Skill.entityName)\r\n]);","import Entity from \"../Entity\";\r\nimport Determinant from \"./Determinant\";\r\n\r\nexport default class DeterminantContainer extends Entity {\r\n    determinants: Determinant[] = [];\r\n\r\n    updateWith(entity: DeterminantContainer): DeterminantContainer {\r\n        super.updateWith(entity);\r\n        this.updateEntityList(entity, 'determinants', () => new Determinant());\r\n        return this;\r\n    }\r\n}","import ProfessionClass from \"./ProfessionClass\";\r\nimport DeterminantContainer from \"../rule/DeterminantContainer\";\r\nimport Skill from \"../knowledge/Skill\";\r\nimport {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\n\r\nexport default class Profession extends DeterminantContainer {\r\n    static entityName: string = 'profession';\r\n\r\n    name: string;\r\n    description: string;\r\n    professionClass: ProfessionClass;\r\n    skills: Skill[] = [];\r\n    nextProfessions: Profession[] = [];\r\n\r\n    updateWith(entity: Profession): Profession {\r\n        super.updateWith(entity);\r\n        this.updateEntityProp(entity, 'professionClass', () => new ProfessionClass());\r\n        this.updateEntityList(entity, 'skills', () => new Skill());\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterEntity(Profession, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('professionClass', FormFieldType.ENTITY_SELECT, ProfessionClass.entityName),\r\n    CreateFormField('determinants', FormFieldType.DETERMINANT),\r\n    CreateFormField('skills', FormFieldType.ENTITY_COMBOBOX, Skill.entityName),\r\n    CreateFormField('nextProfessions', FormFieldType.ENUM_COMBOBOX, Profession.entityName),\r\n]);","import Profession                     from \"../professions/Profession\";\r\nimport Determinant, {DeterminantType} from \"../rule/Determinant\";\r\n\r\nexport default class CreatureDeterminants {\r\n    determinants: Determinant[] = [];\r\n\r\n    constructor() {\r\n        const speed = new Determinant();\r\n        speed.type = DeterminantType.SPEED;\r\n        const battle = new Determinant();\r\n        battle.type = DeterminantType.BATTLE;\r\n        const shooting = new Determinant();\r\n        shooting.type = DeterminantType.SHOOTING;\r\n        const strength = new Determinant();\r\n        strength.type = DeterminantType.STRENGTH;\r\n        const durability = new Determinant();\r\n        durability.type = DeterminantType.DURABILITY;\r\n        const health = new Determinant();\r\n        health.type = DeterminantType.HEALTH;\r\n        const attack = new Determinant();\r\n        attack.type = DeterminantType.ATTACK;\r\n        const initiative = new Determinant();\r\n        initiative.type = DeterminantType.INITIATIVE;\r\n        const dexterity = new Determinant();\r\n        dexterity.type = DeterminantType.DEXTERITY;\r\n        const leaderSkills = new Determinant();\r\n        leaderSkills.type = DeterminantType.LEADER_SKILLS;\r\n        const intelligence = new Determinant();\r\n        intelligence.type = DeterminantType.INTELLIGENCE;\r\n        const control = new Determinant();\r\n        control.type = DeterminantType.CONTROL;\r\n        const will = new Determinant();\r\n        will.type = DeterminantType.WILL;\r\n        const charisma = new Determinant();\r\n        charisma.type = DeterminantType.CHARISMA;\r\n        this.determinants.push(speed, battle, shooting, strength, durability, health, attack, initiative,\r\n            dexterity, leaderSkills, intelligence, control, will, charisma);\r\n    }\r\n\r\n    updateWith(determinants: CreatureDeterminants): CreatureDeterminants {\r\n        if (determinants.determinants) {\r\n            determinants.determinants.forEach(determinant => {\r\n                const newDeterminant = new Determinant();\r\n                newDeterminant.updateWith(determinant);\r\n                this.replaceDeterminant(newDeterminant);\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    updateDeterminantValue(value: number, type: string) {\r\n        this.findDeterminant(type).value = value;\r\n    }\r\n\r\n    findDeterminant(type: string) {\r\n        return this.determinants.find(determinant => type === determinant.type)\r\n    }\r\n\r\n    replaceDeterminant(determinant: Determinant) {\r\n        const toReplace = this.findDeterminant(determinant.type);\r\n        let determinantIndex = this.determinants.indexOf(toReplace);\r\n        this.determinants.splice(determinantIndex, 1);\r\n        this.determinants.push(determinant);\r\n    }\r\n}","import {State} from \"../../state/State\";\r\n\r\nexport const Availability = [\r\n    'ABUNDANT',\r\n    'PLENTIFUL',\r\n    'COMMON',\r\n    'AVERAGE',\r\n    'SCARCE',\r\n    'RARE',\r\n    'VERY_RARE'\r\n];\r\n\r\nexport const availabilityEntityName = 'availability';\r\n\r\nState.data[availabilityEntityName] = Availability;","import Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {Availability, availabilityEntityName} from \"./Availability\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\n\r\nexport default class ArmorPattern extends Entity {\r\n    static entityName: string = 'armorPattern';\r\n\r\n    name: string;\r\n    description: string;\r\n    priceMultiplier: number;\r\n    weight: number;\r\n    strength: number;\r\n    availability: string = Availability[0];\r\n}\r\n\r\nRegisterEntity(ArmorPattern, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n    CreateColumn('strength', FormFieldType.INTEGER),\r\n    CreateColumn('availability', FormFieldType.TEXT),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('priceMultiplier', FormFieldType.FLOAT),\r\n    CreateFormField('weight', FormFieldType.FLOAT),\r\n    CreateFormField('strength', FormFieldType.FLOAT),\r\n    CreateFormField('availability', FormFieldType.ENUM_SELECT, availabilityEntityName),\r\n]);","import ModelElement from \"../ModelElement\";\r\nimport {State} from \"../../state/State\";\r\n\r\nexport const entityName = 'price';\r\n\r\nexport default class Price extends ModelElement {\r\n    gold: number = 0;\r\n    silver: number = 0;\r\n    lead: number = 0;\r\n\r\n    toString() {\r\n        return this.gold + ' ' + this.silver + ' ' + this.lead;\r\n    }\r\n}\r\n\r\nState.suppliers[entityName] = () => new Price();\r\n","import Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\nimport {availabilityEntityName} from \"./Availability\";\r\n\r\nexport default class Resource extends Entity {\r\n    static entityName: string = 'resource';\r\n\r\n    name: string;\r\n    description: string;\r\n    priceMultiplier: number;\r\n    weight: number;\r\n    durability: number;\r\n    strength: number;\r\n    availability: string = 'COMMON';\r\n}\r\n\r\nRegisterEntity(Resource, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n    CreateColumn('priceMultiplier', FormFieldType.FLOAT),\r\n    CreateColumn('durability', FormFieldType.FLOAT),\r\n    CreateColumn('strength', FormFieldType.FLOAT),\r\n    CreateColumn('availability', FormFieldType.TEXT),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('priceMultiplier', FormFieldType.FLOAT),\r\n    CreateFormField('weight', FormFieldType.FLOAT),\r\n    CreateFormField('durability', FormFieldType.FLOAT),\r\n    CreateFormField('strength', FormFieldType.FLOAT),\r\n    CreateFormField('availability', FormFieldType.ENUM_SELECT, availabilityEntityName),\r\n]);","import {State} from \"../../state/State\";\r\n\r\nexport const Placement = {\r\n    BODY: 'BODY',\r\n    HEAD: 'HEAD',\r\n    TORSO: 'TORSO',\r\n    HAND: 'HAND',\r\n    LEG: 'LEG',\r\n    BELT: 'BELT',\r\n    NECK: 'NECK',\r\n    FINGER: 'FINGER',\r\n    SHIELD: 'SHIELD',\r\n    BOTH_HANDS: 'BOTH_HANDS',\r\n\r\n    allOf() {\r\n        return [\r\n            this.BODY,\r\n            this.HEAD,\r\n            this.TORSO,\r\n            this.HAND,\r\n            this.LEG,\r\n            this.BELT,\r\n            this.NECK,\r\n            this.FINGER,\r\n            this.SHIELD,\r\n            this.BOTH_HANDS,\r\n        ];\r\n    },\r\n\r\n    armor() {\r\n        return [\r\n            this.BODY,\r\n            this.HEAD,\r\n            this.TORSO,\r\n            this.HAND,\r\n            this.LEG,\r\n            this.BELT,\r\n            this.SHIELD,\r\n        ];\r\n    },\r\n\r\n    weapon() {\r\n        return [\r\n            this.HAND,\r\n            this.BOTH_HANDS,\r\n            this.SHIELD,\r\n        ];\r\n    },\r\n\r\n    jewelry() {\r\n        return [\r\n            this.NECK,\r\n            this.FINGER,\r\n        ];\r\n    },\r\n};\r\n\r\nexport const placementName = 'placement';\r\nexport const placementArmorName = 'placementArmor';\r\nexport const placementWeaponName = 'placementWeapon';\r\nexport const placementJewelryName = 'placementJewelry';\r\n\r\nState.data[placementName] = Placement.allOf();\r\nState.data[placementArmorName] = Placement.armor();\r\nState.data[placementWeaponName] = Placement.weapon();\r\nState.data[placementJewelryName] = Placement.jewelry();","import DeterminantContainer from \"../rule/DeterminantContainer\";\r\nimport Price from \"../world/Price\";\r\nimport {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\nimport {placementArmorName} from \"./Placement\";\r\n\r\nexport default class ArmorBlueprint extends DeterminantContainer {\r\n    static entityName: string = 'armorBlueprint';\r\n\r\n    name: string;\r\n    description: string;\r\n    armor: number;\r\n    suggestedPrice: Price = new Price();\r\n    suggestedWeight: number;\r\n    placement: string[] = [];\r\n\r\n    updateWith(entity: DeterminantContainer): ArmorBlueprint {\r\n        super.updateWith(entity);\r\n        this.updateEntityProp(entity, 'suggestedPrice', () => new Price());\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterEntity(ArmorBlueprint, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n    CreateColumn('armor', FormFieldType.INTEGER),\r\n    CreateColumn('placement', FormFieldType.TEXT),\r\n    CreateColumn('suggestedPrice', FormFieldType.PRICE),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('armor', FormFieldType.INTEGER),\r\n    CreateFormField('suggestedPrice', FormFieldType.PRICE),\r\n    CreateFormField('suggestedWeight', FormFieldType.INTEGER),\r\n    CreateFormField('placement', FormFieldType.ENUM_COMBOBOX, placementArmorName),\r\n    CreateFormField('determinants', FormFieldType.DETERMINANT),\r\n]);","import ArmorPattern                                    from \"./ArmorPattern\";\r\nimport DeterminantContainer\r\n                                                       from \"../rule/DeterminantContainer\";\r\nimport Price                                           from \"../world/Price\";\r\nimport Resource                                        from \"./Resource\";\r\nimport ArmorBlueprint                                  from \"./ArmorBlueprint\";\r\nimport {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType}                                 from \"../../form/FormFieldType\";\r\nimport {availabilityEntityName}                        from \"./Availability\";\r\n\r\nexport default class Armor extends DeterminantContainer {\r\n  static entityName: string = 'armor';\r\n\r\n  name: string;\r\n  description: string;\r\n  weight: number;\r\n  price: Price = new Price();\r\n  availability: string = 'COMMON';\r\n  primaryResource: Resource;\r\n  secondaryResource: Resource;\r\n  type: ArmorBlueprint;\r\n  armorPattern: ArmorPattern;\r\n\r\n  updateWith(entity: *): Armor {\r\n    super.updateWith(entity);\r\n    this.updateEntityProp(entity, 'price', () => new Price());\r\n    this.updateEntityProp(entity, 'primaryResource', () => new Resource());\r\n    this.updateEntityProp(entity, 'secondaryResource', () => new Resource());\r\n    this.updateEntityProp(entity, 'type', () => new ArmorBlueprint());\r\n    this.updateEntityProp(entity, 'armorPattern', () => new ArmorPattern());\r\n    return this;\r\n  }\r\n}\r\n\r\nRegisterEntity(Armor,\r\n               [CreateColumn('name', FormFieldType.TEXT),\r\n                CreateColumn('description', FormFieldType.TEXT_AREA),\r\n                CreateColumn('price', FormFieldType.PRICE),\r\n                CreateColumn('type', FormFieldType.ENTITY_SELECT),\r\n                CreateColumn('armorPattern', FormFieldType.ENTITY_SELECT),\r\n               ],\r\n               [CreateFormField('name', FormFieldType.TEXT),\r\n                CreateFormField('description', FormFieldType.TEXT_AREA),\r\n                CreateFormField('weight', FormFieldType.FLOAT),\r\n                CreateFormField('price', FormFieldType.PRICE),\r\n                CreateFormField('availability', FormFieldType.ENUM_SELECT, availabilityEntityName),\r\n                CreateFormField('primaryResource', FormFieldType.ENTITY_SELECT, Resource.entityName),\r\n                CreateFormField('secondaryResource', FormFieldType.ENTITY_SELECT, Resource.entityName),\r\n                CreateFormField('type', FormFieldType.BLUEPRINT_SELECT, ArmorBlueprint.entityName),\r\n                CreateFormField('armorPattern', FormFieldType.ENTITY_SELECT, ArmorPattern.entityName),\r\n                CreateFormField('determinants', FormFieldType.DETERMINANT),]);\r\n","import Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport Price from \"../world/Price\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\nimport {availabilityEntityName} from \"./Availability\";\r\n\r\nexport default class Item extends Entity {\r\n    static entityName: string = 'miscItem';\r\n\r\n    name: string;\r\n    description: string;\r\n    weight: number;\r\n    price: Price = new Price();\r\n    availability: string = 'COMMON';\r\n\r\n\r\n    updateWith(entity: *): Item {\r\n        super.updateWith(entity);\r\n        this.updateEntityProp(entity, 'price', () => new Price());\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterEntity(Item, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n    CreateColumn('weight', FormFieldType.FLOAT),\r\n    CreateColumn('price', FormFieldType.PRICE),\r\n    CreateColumn('availability', FormFieldType.ENUM_SELECT),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('weight', FormFieldType.FLOAT),\r\n    CreateFormField('price', FormFieldType.PRICE),\r\n    CreateFormField('availability', FormFieldType.ENUM_SELECT, availabilityEntityName),\r\n]);","import Item from \"./Item\";\r\nimport Entity from \"../Entity\";\r\n\r\nexport default class Inventory extends Entity {\r\n    item: Item;\r\n    amount: number = 1;\r\n\r\n    updateWith(entity: Inventory): Inventory {\r\n        super.updateWith(entity);\r\n        this.updateEntityProp(entity, 'item', () => new Item());\r\n        return this;\r\n    }\r\n}","import DeterminantContainer from \"../rule/DeterminantContainer\";\r\nimport Price from \"../world/Price\";\r\nimport Modifier from \"../rule/Modifier\";\r\nimport ActionTime from \"../rule/ActionTime\";\r\nimport {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\nimport {Placement, placementWeaponName} from \"./Placement\";\r\n\r\nexport default class MeleeWeaponBlueprint extends DeterminantContainer {\r\n    static entityName: string = 'meleeWeaponBlueprint';\r\n\r\n    name: string;\r\n    description: string;\r\n    suggestedPrice: Price = new Price();\r\n    suggestedWeight: number;\r\n    damage: Modifier = new Modifier();\r\n    prepareTime: ActionTime = new ActionTime();\r\n    placement: string = Placement.HAND;\r\n\r\n    updateWith(entity: MeleeWeaponBlueprint): MeleeWeaponBlueprint {\r\n        super.updateWith(entity);\r\n        this.updateEntityProp(entity, 'suggestedPrice', () => new Price());\r\n        this.updateEntityProp(entity, 'damage', () => new Modifier());\r\n        this.updateEntityProp(entity, 'prepareTime', () => new ActionTime());\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterEntity(MeleeWeaponBlueprint, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n    CreateColumn('damage', FormFieldType.MODIFIER),\r\n    CreateColumn('placement', FormFieldType.TEXT),\r\n    CreateColumn('suggestedPrice', FormFieldType.PRICE),\r\n    CreateColumn('suggestedWeight', FormFieldType.FLOAT),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('suggestedPrice', FormFieldType.PRICE),\r\n    CreateFormField('suggestedWeight', FormFieldType.INTEGER),\r\n    CreateFormField('damage', FormFieldType.MODIFIER),\r\n    CreateFormField('prepareTime', FormFieldType.ACTION_TIME),\r\n    CreateFormField('placement', FormFieldType.ENUM_COMBOBOX, placementWeaponName),\r\n    CreateFormField('determinantes', FormFieldType.DETERMINANT),\r\n]);","import DeterminantService from \"../../client/DeterminantService\";\r\nimport {FormFieldType}                                 from \"../../form/FormFieldType\";\r\nimport {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport DeterminantContainer                            from \"../rule/DeterminantContainer\";\r\nimport Price                                           from \"../world/Price\";\r\nimport {availabilityEntityName}                        from \"./Availability\";\r\nimport MeleeWeaponBlueprint                            from \"./MeleeWeaponBlueprint\";\r\nimport Resource                                        from \"./Resource\";\r\n\r\nexport default class MeleeWeapon extends DeterminantContainer {\r\n  static entityName: string = 'meleeWeapon';\r\n\r\n  name: string;\r\n  description: string;\r\n  weight: number;\r\n  price: Price = new Price();\r\n  availability: string = 'COMMON';\r\n  primaryResource: Resource;\r\n  secondaryResource: Resource;\r\n  type: MeleeWeaponBlueprint;\r\n\r\n  updateWith(entity: *): MeleeWeapon {\r\n    super.updateWith(entity);\r\n    this.updateEntityProp(entity, 'price', () => new Price());\r\n    this.updateEntityProp(entity, 'primaryResource', () => new Resource());\r\n    this.updateEntityProp(entity, 'secondaryResource', () => new Resource());\r\n    this.updateEntityProp(entity, 'type', () => new MeleeWeaponBlueprint());\r\n    return this;\r\n  }\r\n\r\n  getFinalValueForType(determinantType: string): number {\r\n    return DeterminantService.sumValueByTypeIn(this.type.determinants, determinantType)\r\n           + DeterminantService.sumValueByTypeIn(this.determinants, determinantType);\r\n  }\r\n}\r\n\r\nRegisterEntity(MeleeWeapon,\r\n               [CreateColumn('name', FormFieldType.TEXT),\r\n                CreateColumn('description', FormFieldType.TEXT_AREA),\r\n                CreateColumn('price', FormFieldType.PRICE),\r\n                CreateColumn('type', FormFieldType.ENTITY_SELECT),],\r\n               [CreateFormField('name', FormFieldType.TEXT),\r\n                CreateFormField('description', FormFieldType.TEXT_AREA),\r\n                CreateFormField('weight', FormFieldType.FLOAT),\r\n                CreateFormField('price', FormFieldType.PRICE),\r\n                CreateFormField('availability', FormFieldType.ENUM_SELECT, availabilityEntityName),\r\n                CreateFormField('primaryResource',\r\n                                FormFieldType.ENTITY_SELECT,\r\n                                Resource.entityName),\r\n                CreateFormField('secondaryResource',\r\n                                FormFieldType.ENTITY_SELECT,\r\n                                Resource.entityName),\r\n                CreateFormField('type',\r\n                                FormFieldType.BLUEPRINT_SELECT,\r\n                                MeleeWeaponBlueprint.entityName),\r\n                CreateFormField('determinants', FormFieldType.DETERMINANT),]);\r\n","import Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\n\r\nexport default class SpellSchool extends Entity {\r\n    static entityName: string = 'spellSchool';\r\n\r\n    name: string;\r\n    description: string;\r\n    levels: number = 0;\r\n\r\n    updateWith(entity: *): SpellSchool {\r\n        return super.updateWith(entity);\r\n    }\r\n}\r\n\r\nRegisterEntity(SpellSchool, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n    CreateColumn('levels', FormFieldType.INTEGER),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('levels', FormFieldType.INTEGER),\r\n]);","import Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport ActionTime from \"../rule/ActionTime\";\r\nimport SpellSchool from \"./SpellSchool\";\r\nimport Item from \"../crafting/Item\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\n\r\nexport default class Spell extends Entity {\r\n    static entityName: string = 'spell';\r\n\r\n    name: string;\r\n    description: string;\r\n    effect: string;\r\n    level: number;\r\n    manaCost: number;\r\n    range: number;\r\n    prepareTime: ActionTime = new ActionTime();\r\n    durationTime: ActionTime = new ActionTime();\r\n    spellSchool: SpellSchool;\r\n    ingredients: Item[] = [];\r\n\r\n\r\n    updateWith(entity: Spell): Spell {\r\n        super.updateWith(entity);\r\n        this.updateEntityProp(entity, 'prepareTime', () => new ActionTime());\r\n        this.updateEntityProp(entity, 'durationTime', () => new ActionTime());\r\n        this.updateEntityProp(entity, 'spellSchool', () => new SpellSchool());\r\n        this.updateEntityList(entity, 'ingredients', () => new Item());\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterEntity(Spell, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n    CreateColumn('level', FormFieldType.INTEGER),\r\n    CreateColumn('manaCost', FormFieldType.INTEGER),\r\n    CreateColumn('range', FormFieldType.INTEGER),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('effect', FormFieldType.TEXT_AREA),\r\n    CreateFormField('level', FormFieldType.INTEGER),\r\n    CreateFormField('manaCost', FormFieldType.INTEGER),\r\n    CreateFormField('range', FormFieldType.INTEGER),\r\n    CreateFormField('prepareTime', FormFieldType.ACTION_TIME),\r\n    CreateFormField('durationTime', FormFieldType.ACTION_TIME),\r\n    CreateFormField('spellSchool', FormFieldType.ENTITY_SELECT, SpellSchool.entityName),\r\n    CreateFormField('ingredients', FormFieldType.ENTITY_COMBOBOX, Item.entityName),\r\n]);","import Entity from \"../Entity\";\r\nimport SpellSchool from \"./SpellSchool\";\r\n\r\nexport default class SpellSchoolLevel extends Entity {\r\n    spellSchool: SpellSchool;\r\n    level: number = 0;\r\n\r\n\r\n    updateWith(entity: *): SpellSchoolLevel {\r\n        super.updateWith(entity);\r\n        this.updateEntityProp(entity, 'spellSchool', () => new SpellSchool());\r\n        return this;\r\n    }\r\n}","import Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\n\r\nexport default class Nation extends Entity {\r\n    static entityName: string = 'nation';\r\n\r\n    name: string;\r\n    description: string;\r\n    names: string[] = [];\r\n}\r\n\r\nconst convertToNames = (namesAsString: string) => {\r\n    return namesAsString.replace('\\r', '').split('\\n');\r\n};\r\nconst convertToField = (namesFromModel: string[]) => {\r\n    return namesFromModel.join(\"\\n\");\r\n};\r\n\r\nRegisterEntity(Nation, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA)\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('names', FormFieldType.TEXT_AREA, null, convertToField, convertToNames),\r\n]);\r\n","import {FormFieldType} from \"../../form/FormFieldType\";\r\nimport Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport Nation from \"./Nation\";\r\n\r\nexport default class Language extends Entity {\r\n  static entityName: string = 'worldLanguage';\r\n\r\n  name: string;\r\n  description: string;\r\n  nations: Nation[];\r\n\r\n  updateWith(entity: Language): Language {\r\n    super.updateWith(entity);\r\n    this.updateEntityList(entity, 'nations', () => new Nation());\r\n    return this;\r\n  }\r\n}\r\n\r\nRegisterEntity(Language,\r\n               [CreateColumn('name', FormFieldType.TEXT),\r\n                CreateColumn('description', FormFieldType.TEXT_AREA),],\r\n               [CreateFormField('name', FormFieldType.TEXT),\r\n                CreateFormField('description', FormFieldType.TEXT_AREA),\r\n                CreateFormField('nations', FormFieldType.ENTITY_COMBOBOX, Nation.entityName),]);","import Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport Nation from \"./Nation\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\n\r\nexport default class Currency extends Entity {\r\n    static entityName: string = 'currency';\r\n\r\n    name: string;\r\n    description: string;\r\n    valueMultiplier: number;\r\n    nations: Nation[];\r\n\r\n    updateWith(entity: *): Currency {\r\n        super.updateWith(entity);\r\n        this.updateEntityList(entity, 'nations', () => new Nation());\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterEntity(Currency, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n    CreateColumn('valueMultiplier', FormFieldType.FLOAT)\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('valueMultiplier', FormFieldType.FLOAT),\r\n    CreateFormField('nations', FormFieldType.ENTITY_COMBOBOX, Nation.entityName),\r\n]);","import Entity from \"../Entity\";\r\nimport Price from \"./Price\";\r\nimport {State} from \"../../state/State\";\r\nimport Currency from \"./Currency\";\r\n\r\nexport const entityName = 'money';\r\n\r\nexport default class Money extends Entity {\r\n    currency: Currency;\r\n    amount: Price = new Price();\r\n\r\n\r\n    updateWith(entity: Money): Money {\r\n        super.updateWith(entity);\r\n        this.updateEntityProp(entity, 'currency', State.suppliers.currency);\r\n        this.updateEntityProp(entity, 'amount', State.suppliers.price);\r\n        return this;\r\n    }\r\n}\r\n\r\nState.suppliers[entityName] = () => new Money();\r\n","import DeterminantContainer from \"../rule/DeterminantContainer\";\r\nimport {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\nimport Nation from \"./Nation\";\r\n\r\nexport default class Race extends DeterminantContainer {\r\n    static entityName: string = 'race';\r\n\r\n    name: string;\r\n    specialFeature: string;\r\n    nations: Nation;\r\n\r\n    updateWith(entity: DeterminantContainer): DeterminantContainer {\r\n        super.updateWith(entity)\r\n        this.updateEntityList(entity, 'nations', () => new Nation());\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterEntity(Race, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('specialFeature', FormFieldType.TEXT_AREA),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('specialFeatures', FormFieldType.TEXT_AREA),\r\n    CreateFormField('nations', FormFieldType.ENTITY_COMBOBOX, Nation.entityName),\r\n    CreateFormField('determinants', FormFieldType.RACE_DETERMINANTS),\r\n]);","import Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport Nation from \"./Nation\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\n\r\nexport default class Religion extends Entity {\r\n    static entityName: string = 'religion';\r\n\r\n    name: string;\r\n    nations: Nation[] = [];\r\n\r\n    updateWith(entity: Religion): Religion {\r\n        super.updateWith(entity);\r\n        this.updateEntityList(entity, 'nations', () => new Nation());\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterEntity(Religion, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('nations', FormFieldType.ENTITY_COMBOBOX, Nation.entityName),\r\n]);","import {FormFieldType}                                 from \"../../form/FormFieldType\";\r\nimport {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport DeterminantContainer                            from \"../rule/DeterminantContainer\";\r\n\r\nexport default class AnimalKind extends DeterminantContainer {\r\n    static entityName: string = 'animalKind';\r\n\r\n    name: string;\r\n    description: string;\r\n};\r\n\r\nRegisterEntity(AnimalKind,\r\n               [CreateColumn('name', FormFieldType.TEXT),\r\n                CreateColumn('description', FormFieldType.TEXT_AREA),],\r\n               [CreateFormField('name', FormFieldType.TEXT),\r\n                CreateFormField('description', FormFieldType.TEXT_AREA),\r\n                CreateFormField('determinants', FormFieldType.DETERMINANT),]);\r\n","import {FormFieldType}                                 from \"../../form/FormFieldType\";\r\nimport {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport DeterminantContainer                            from \"../rule/DeterminantContainer\";\r\nimport AnimalKind                                      from \"./AnimalKind\";\r\n\r\nexport default class Animal extends DeterminantContainer {\r\n  static entityName: string = 'animal';\r\n\r\n  name: string;\r\n  description: string;\r\n  animalKind: AnimalKind;\r\n\r\n  updateWith(entity: Animal): Animal {\r\n    super.updateWith(entity);\r\n    this.updateEntityProp(entity, 'animalKind', () => new AnimalKind());\r\n    return this;\r\n  }\r\n}\r\n\r\nRegisterEntity(Animal,\r\n               [CreateColumn('name', FormFieldType.TEXT),\r\n                CreateColumn('description', FormFieldType.TEXT_AREA),\r\n                CreateColumn('animalKind', FormFieldType.ENTITY_SELECT)],\r\n               [CreateFormField('name', FormFieldType.TEXT),\r\n                CreateFormField('description', FormFieldType.TEXT_AREA),\r\n                CreateFormField('animalKind', FormFieldType.ENTITY_SELECT, AnimalKind.entityName),\r\n                CreateFormField('determinants', FormFieldType.DETERMINANT),]);\r\n","import Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\n\r\nexport default class Character extends Entity {\r\n    static entityName: string = 'character';\r\n\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nRegisterEntity(Character, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n]);\r\n","import Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\n\r\nexport default class EyeColor extends Entity {\r\n    static entityName: string = 'eyeColor';\r\n\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nRegisterEntity(EyeColor, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n]);\r\n","import Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\n\r\nexport default class HairColor extends Entity {\r\n    static entityName: string = 'hairColor';\r\n\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nRegisterEntity(HairColor, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n]);\r\n","import DeterminantContainer from \"../rule/DeterminantContainer\";\r\nimport Price from \"../world/Price\";\r\nimport Modifier from \"../rule/Modifier\";\r\nimport ActionTime from \"../rule/ActionTime\";\r\nimport {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\nimport {Placement, placementWeaponName} from \"./Placement\";\r\n\r\nexport default class RangedWeaponBlueprint extends DeterminantContainer {\r\n    static entityName: string = 'rangedWeaponBlueprint';\r\n\r\n    name: string;\r\n    description: string;\r\n    suggestedPrice: Price = new Price();\r\n    suggestedWeight: number;\r\n    damage: Modifier = new Modifier();\r\n    prepareTime: ActionTime = new ActionTime();\r\n    placement: string[] = [Placement.HAND];\r\n    minimumRange: number = 0;\r\n    mediumRange: number = 0;\r\n    maximumRange: number = 0;\r\n\r\n    updateWith(entity: RangedWeaponBlueprint): RangedWeaponBlueprint {\r\n        super.updateWith(entity);\r\n        this.updateEntityProp(entity, 'suggestedPrice', () => new Price());\r\n        this.updateEntityProp(entity, 'damage', () => new Modifier());\r\n        this.updateEntityProp(entity, 'prepareTime', () => new ActionTime());\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterEntity(RangedWeaponBlueprint, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n    CreateColumn('damage', FormFieldType.MODIFIER),\r\n    CreateColumn('minimumRange', FormFieldType.INTEGER),\r\n    CreateColumn('mediumRange', FormFieldType.INTEGER),\r\n    CreateColumn('maximumRange', FormFieldType.INTEGER),\r\n    CreateColumn('prepareTime', FormFieldType.ACTION_TIME),\r\n    CreateColumn('suggestedPrice', FormFieldType.PRICE),\r\n    CreateColumn('suggestedWeight', FormFieldType.FLOAT),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('suggestedPrice', FormFieldType.PRICE),\r\n    CreateFormField('suggestedWeight', FormFieldType.INTEGER),\r\n    CreateFormField('damage', FormFieldType.MODIFIER),\r\n    CreateFormField('prepareTime', FormFieldType.ACTION_TIME),\r\n    CreateFormField('placement', FormFieldType.ENUM_COMBOBOX, placementWeaponName),\r\n    CreateFormField('minimumRange', FormFieldType.INTEGER),\r\n    CreateFormField('mediumRange', FormFieldType.INTEGER),\r\n    CreateFormField('maximumRange', FormFieldType.INTEGER),\r\n    CreateFormField('determinants', FormFieldType.DETERMINANT),\r\n]);","import {FormFieldType}                                 from \"../../form/FormFieldType\";\r\nimport {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport DeterminantContainer                            from \"../rule/DeterminantContainer\";\r\nimport Price                                           from \"../world/Price\";\r\nimport {availabilityEntityName}                        from \"./Availability\";\r\nimport RangedWeaponBlueprint                           from \"./RangedWeaponBlueprint\";\r\nimport Resource                                        from \"./Resource\";\r\n\r\nexport default class Ammunition extends DeterminantContainer {\r\n    static entityName: string = 'ammunition';\r\n\r\n    name: string;\r\n    description: string;\r\n    weight: number;\r\n    price: Price = new Price();\r\n    availability: string = 'COMMON';\r\n    primaryResource: Resource;\r\n    secondaryResource: Resource;\r\n    weaponTypes: RangedWeaponBlueprint[] = [];\r\n\r\n    updateWith(entity: Ammunition): Ammunition {\r\n        super.updateWith(entity);\r\n        this.updateEntityProp(entity, 'price', () => new Price());\r\n        this.updateEntityProp(entity, 'primaryResource', () => new Resource());\r\n        this.updateEntityProp(entity, 'secondaryResource', () => new Resource());\r\n        this.updateEntityList(entity, 'weaponTypes', () => new RangedWeaponBlueprint());\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterEntity(Ammunition,\r\n               [CreateColumn('name', FormFieldType.TEXT),\r\n                CreateColumn('description', FormFieldType.TEXT_AREA),\r\n                CreateColumn('price', FormFieldType.PRICE),\r\n                CreateColumn('type', FormFieldType.ENTITY_SELECT),\r\n                CreateColumn('availability', FormFieldType.TEXT),\r\n               ],\r\n               [CreateFormField('name', FormFieldType.TEXT),\r\n                CreateFormField('description', FormFieldType.TEXT_AREA),\r\n                CreateFormField('weight', FormFieldType.FLOAT),\r\n                CreateFormField('price', FormFieldType.PRICE),\r\n                CreateFormField('availability', FormFieldType.ENUM_SELECT, availabilityEntityName),\r\n                CreateFormField('primaryResource', FormFieldType.ENTITY_SELECT, Resource.entityName),\r\n                CreateFormField('secondaryResource', FormFieldType.ENTITY_SELECT, Resource.entityName),\r\n                CreateFormField('weaponTypes', FormFieldType.ENTITY_COMBOBOX, RangedWeaponBlueprint.entityName),\r\n                CreateFormField('determinants', FormFieldType.DETERMINANT),]);\r\n","import {FormFieldType}                                 from \"../../form/FormFieldType\";\r\nimport {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport DeterminantContainer                            from \"../rule/DeterminantContainer\";\r\nimport Price                                           from \"../world/Price\";\r\nimport {availabilityEntityName}                        from \"./Availability\";\r\nimport RangedWeaponBlueprint                           from \"./RangedWeaponBlueprint\";\r\nimport Resource                                        from \"./Resource\";\r\n\r\nexport default class RangedWeapon extends DeterminantContainer {\r\n    static entityName: string = 'rangedWeapon';\r\n\r\n    name: string;\r\n    description: string;\r\n    weight: number;\r\n    price: Price = new Price();\r\n    availability: string = 'COMMON';\r\n    primaryResource: Resource;\r\n    secondaryResource: Resource;\r\n    type: RangedWeaponBlueprint;\r\n\r\n    updateWith(entity: RangedWeapon): RangedWeapon {\r\n        super.updateWith(entity);\r\n        this.updateEntityProp(entity, 'price', () => new Price());\r\n        this.updateEntityProp(entity, 'primaryResource', () => new Resource());\r\n        this.updateEntityProp(entity, 'secondaryResource', () => new Resource());\r\n        this.updateEntityProp(entity, 'type', () => new RangedWeaponBlueprint());\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterEntity(RangedWeapon,\r\n               [CreateColumn('name', FormFieldType.TEXT),\r\n                CreateColumn('description', FormFieldType.TEXT_AREA),\r\n                CreateColumn('price', FormFieldType.PRICE),\r\n                CreateColumn('type', FormFieldType.ENTITY_SELECT),],\r\n               [CreateFormField('name', FormFieldType.TEXT),\r\n                CreateFormField('description', FormFieldType.TEXT_AREA),\r\n                CreateFormField('weight', FormFieldType.FLOAT),\r\n                CreateFormField('price', FormFieldType.PRICE),\r\n                CreateFormField('availability', FormFieldType.ENUM_SELECT, availabilityEntityName),\r\n                CreateFormField('primaryResource',\r\n                                FormFieldType.ENTITY_SELECT,\r\n                                Resource.entityName),\r\n                CreateFormField('secondaryResource',\r\n                                FormFieldType.ENTITY_SELECT,\r\n                                Resource.entityName),\r\n                CreateFormField('type',\r\n                                FormFieldType.BLUEPRINT_SELECT,\r\n                                RangedWeaponBlueprint.entityName),\r\n                CreateFormField('determinants', FormFieldType.DETERMINANT),]);\r\n","import Ammunition   from \"../crafting/Ammunition\";\r\nimport RangedWeapon from \"../crafting/RangedWeapon\";\r\nimport Entity       from \"../Entity\";\r\n\r\nexport default class PersonalRangedWeapon extends Entity {\r\n    rangedWeapon: RangedWeapon;\r\n    ammunition: Ammunition;\r\n    ammunitionAmount: number = 0;\r\n\r\n\r\n    updateWith(entity: PersonalRangedWeapon): PersonalRangedWeapon {\r\n        super.updateWith(entity);\r\n        super.updateEntityProp(entity, 'rangedWeapon', () => new RangedWeapon());\r\n        super.updateEntityProp(entity, 'ammunition', () => new Ammunition());\r\n        return this;\r\n    }\r\n}","import DeterminantContainer                            from \"../rule/DeterminantContainer\";\r\nimport {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType}                                 from \"../../form/FormFieldType\";\r\n\r\nexport default class PhysicalFeature extends DeterminantContainer {\r\n    static entityName: string = 'physicalFeature';\r\n\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nRegisterEntity(PhysicalFeature,\r\n               [CreateColumn('name', FormFieldType.TEXT),\r\n                CreateColumn('description', FormFieldType.TEXT_AREA),],\r\n               [CreateFormField('name', FormFieldType.TEXT),\r\n                CreateFormField('description', FormFieldType.TEXT_AREA),\r\n                CreateFormField('determinants', FormFieldType.DETERMINANT),]);\r\n","import {FormFieldType}                        from \"../../form/FormFieldType\";\r\nimport Armor                                  from \"../crafting/Armor\";\r\nimport Inventory                              from \"../crafting/Inventory\";\r\nimport MeleeWeapon                                             from \"../crafting/MeleeWeapon\";\r\nimport Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport Skill                                                   from \"../knowledge/Skill\";\r\nimport Spell                                  from \"../knowledge/Spell\";\r\nimport SpellSchoolLevel                       from \"../knowledge/SpellSchoolLevel\";\r\nimport Profession                             from \"../professions/Profession\";\r\nimport ProfessionClass                        from \"../professions/ProfessionClass\";\r\nimport Language                               from \"../world/Language\";\r\nimport Money                                  from \"../world/Money\";\r\nimport Nation                                 from \"../world/Nation\";\r\nimport Race                                   from \"../world/Race\";\r\nimport Religion                               from \"../world/Religion\";\r\nimport Animal                                 from \"./Animal\";\r\nimport Character                              from \"./Character\";\r\nimport CreatureDeterminants                   from \"./CreatureDeterminants\";\r\nimport EyeColor                               from \"./EyeColor\";\r\nimport HairColor                              from \"./HairColor\";\r\nimport PersonalRangedWeapon                   from \"./PersonalRangedWeapon\";\r\nimport PhysicalFeature                        from \"./PhysicalFeature\";\r\n\r\nexport default class Person extends Entity {\r\n  static entityName: string = 'person';\r\n\r\n  name: string;\r\n  gender: string;\r\n  age: number;\r\n  height: number;\r\n  weight: number;\r\n  fatePoints: number;\r\n  mana: number;\r\n  currentMana: number;\r\n  sanityPoints: number;\r\n  totalExperience: number;\r\n  experience: number;\r\n  birthplace: string;\r\n  parents: string;\r\n  family: string;\r\n  health: string;\r\n  nation: Nation;\r\n  religion: Religion;\r\n  hairColor: HairColor;\r\n  eyeColor: EyeColor;\r\n  physicalFeatures: PhysicalFeature[] = [];\r\n  race: Race;\r\n  personality: Character;\r\n  description: string;\r\n  history: string;\r\n  determinants: CreatureDeterminants = new CreatureDeterminants();\r\n  professionClass: ProfessionClass;\r\n  currentProfession: Profession;\r\n  professions: Profession[] = [];\r\n  skills: Skill[] = [];\r\n  inventory: Inventory[] = [];\r\n  meleeWeapons: MeleeWeapon[] = [];\r\n  rangedWeapons: PersonalRangedWeapon[] = [];\r\n  armor: Armor[] = [];\r\n  spellSchools: SpellSchoolLevel[] = [];\r\n  spells: Spell[] = [];\r\n  animals: Animal[] = [];\r\n  money: Money[] = [];\r\n  languages: Language[] = [];\r\n\r\n  updateWith(entity: *): Person {\r\n    this.updateProp(entity, 'id');\r\n    this.updateProp(entity, 'uuid');\r\n    this.updateProp(entity, 'version');\r\n    this.updateProp(entity, 'name');\r\n    this.updateProp(entity, 'gender');\r\n    this.updateNumProp(entity, 'age');\r\n    this.updateNumProp(entity, 'height');\r\n    this.updateNumProp(entity, 'weight');\r\n    this.updateNumProp(entity, 'fatePoints');\r\n    this.updateNumProp(entity, 'mana');\r\n    this.updateNumProp(entity, 'currentMana');\r\n    this.updateNumProp(entity, 'sanityPoints');\r\n    this.updateNumProp(entity, 'totalExperience');\r\n    this.updateNumProp(entity, 'experience');\r\n    this.updateProp(entity, 'birthplace');\r\n    this.updateProp(entity, 'parents');\r\n    this.updateProp(entity, 'family');\r\n    this.updateProp(entity, 'health');\r\n\r\n    this.updateEntityProp(entity, 'nation', () => new Nation());\r\n    this.updateEntityProp(entity, 'religion', () => new Religion());\r\n    this.updateEntityProp(entity, 'hairColor', () => new HairColor());\r\n    this.updateEntityProp(entity, 'eyeColor', () => new EyeColor());\r\n    this.updateEntityProp(entity, 'race', () => new Race());\r\n    this.updateEntityProp(entity, 'personality', () => new Character());\r\n    this.updateEntityProp(entity, 'determinants', () => new CreatureDeterminants());\r\n    this.updateEntityProp(entity, 'professionClass', () => new ProfessionClass());\r\n    this.updateEntityProp(entity, 'currentProfession', () => new Profession());\r\n\r\n    this.updateEntityList(entity, 'physicalFeatures', () => new PhysicalFeature());\r\n    this.updateEntityList(entity, 'professions', () => new Profession());\r\n    this.updateEntityList(entity, 'skills', () => new Skill());\r\n    this.updateEntityList(entity, 'inventory', () => new Inventory());\r\n    this.updateEntityList(entity, 'meleeWeapons', () => new MeleeWeapon());\r\n    this.updateEntityList(entity, 'rangedWeapons', () => new PersonalRangedWeapon());\r\n    this.updateEntityList(entity, 'armor', () => new Armor());\r\n    this.updateEntityList(entity, 'spellSchools', () => new SpellSchoolLevel());\r\n    this.updateEntityList(entity, 'spells', () => new Spell());\r\n    this.updateEntityList(entity, 'animals', () => new Animal());\r\n    this.updateEntityList(entity, 'money', () => new Money());\r\n    this.updateEntityList(entity, 'languages', () => new Language());\r\n\r\n    return this;\r\n  }\r\n}\r\n\r\nRegisterEntity(Person,\r\n               [CreateColumn('name', FormFieldType.TEXT),\r\n                CreateColumn('race', FormFieldType.ENTITY_SELECT),\r\n                CreateColumn('nation', FormFieldType.ENTITY_SELECT),\r\n                CreateColumn('currentProfession', FormFieldType.ENTITY_SELECT),\r\n                CreateColumn('totalExperience', FormFieldType.TEXT),],\r\n               [CreateFormField('person', FormFieldType.CHARACTER_SHEET)]);","import CreatureDeterminants from \"../model/creature/CreatureDeterminants\";\r\nimport Person from \"../model/creature/Person\";\r\nimport Profession from \"../model/professions/Profession\";\r\nimport Determinant from \"../model/rule/Determinant\";\r\nimport Modifier, {ModifierType} from \"../model/rule/Modifier\";\r\nimport Race from \"../model/world/Race\";\r\nimport {State} from \"../state/State\";\r\nimport RemoteService from \"./RemoteService\";\r\n\r\nexport default class DeterminantService extends RemoteService {\r\n  addExperienceExtension(determinant: Determinant, onAdded: VoidFunction) {\r\n    this.requestFor(determinant,\r\n                    'determinant/addExperienceExtension',\r\n                    data => DeterminantService.afterResponse(data, onAdded));\r\n  }\r\n\r\n  removeExperienceExtension(determinant: Determinant, onRemoved) {\r\n    this.requestFor(determinant,\r\n                    'determinant/removeExperienceExtension',\r\n                    data => DeterminantService.afterResponse(data, onRemoved));\r\n  }\r\n\r\n  static afterResponse(data, afterUpdate) {\r\n    const newDeterminant = new Determinant();\r\n    newDeterminant.updateWith(data);\r\n    afterUpdate(newDeterminant);\r\n  }\r\n\r\n  static findDeterminantIn(determinants: Determinant[], type: string) {\r\n    return determinants.find(determinant => type === determinant.type)\r\n  }\r\n\r\n  static removeModifiersByType(modifiers: Modifier[], type: string): Modifier[] {\r\n    let mod = DeterminantService.findModifierByType(modifiers, type);\r\n    while (mod) {\r\n      modifiers.splice(modifiers.indexOf(mod), 1);\r\n      mod = DeterminantService.findModifierByType(modifiers, type);\r\n    }\r\n    return modifiers;\r\n  }\r\n\r\n  static findModifierByType(modifiers: Modifier[], type: string): Modifier {\r\n    return modifiers.find(value => value.type === type);\r\n  }\r\n\r\n  static sumValueByTypeIn(determinants: Determinant[], type: string): number {\r\n    return determinants.filter(det => type === det.type)\r\n                       .reduce((a, b) => a + b.calculateFinalValue(), 0)\r\n  }\r\n\r\n  static updateProfessionExtensions(profession: Profession,\r\n      creatureDeterminants: CreatureDeterminants) {\r\n    creatureDeterminants.determinants = creatureDeterminants.determinants.map(det => {\r\n      DeterminantService.setProfessionExtensions(profession, det);\r\n      return det;\r\n    })\r\n  }\r\n\r\n  static setProfessionExtensions(profession: Profession, determinant: Determinant) {\r\n    const professionExtensions = DeterminantService.findDeterminantIn(profession.determinants,\r\n                                                                      determinant.type);\r\n    if (professionExtensions) {\r\n      determinant.modifiers =\r\n          DeterminantService.removeModifiersByType(determinant.modifiers, ModifierType.PROFESSION);\r\n      professionExtensions.modifiers.forEach(mod => {\r\n        const newMod = new Modifier();\r\n        newMod.type  = mod.type;\r\n        newMod.value = mod.value;\r\n        determinant.modifiers.push(newMod);\r\n      });\r\n    }\r\n  }\r\n\r\n  rollForRace(race: Race) {\r\n    const creature = State.data.entity;\r\n    console.assert(creature.type === Person);\r\n    const currentDeterminant: CreatureDeterminants = creature.determinants;\r\n\r\n    this.requestForPath('determinant/generateDeterminants/' + creature.race.id,\r\n                        (resolved: CreatureDeterminants) => {\r\n                          resolved.determinants.forEach(newValue => {\r\n                            currentDeterminant.updateDeterminantValue(newValue.value, newValue.type)\r\n                          });\r\n                          State.updateEntity({determinants: currentDeterminant});\r\n                        });\r\n  }\r\n}","import {func} from \"prop-types\";\r\nimport RangedWeapon from \"../model/crafting/RangedWeapon\";\r\nimport PersonalRangedWeapon from \"../model/creature/PersonalRangedWeapon\";\r\nimport {State} from \"../state/State\";\r\nimport RemoteService from \"./RemoteService\";\r\n\r\nexport default class GearService extends RemoteService {\r\n    calculateMeleeDamage(weaponId: number, onResponse: func) {\r\n        this.rawGetRequestFor(`gear/getMeleeWeaponDamage/${weaponId}`, onResponse);\r\n    }\r\n\r\n    calculateArmorValue(armorId: number, onResponse: func) {\r\n        this.rawGetRequestFor(`gear/getArmorValue/${armorId}`, onResponse);\r\n    }\r\n\r\n    calculatePersonArmorValue(armorIds: number[], onResponse: func) {\r\n        this.requestFor(armorIds, 'gear/getArmorValuesForGear', onResponse)\r\n    }\r\n\r\n    static addPersonalRangedWeapon(rangedWeapon: RangedWeapon) {\r\n        const pWeps = State.data.entity.rangedWeapons;\r\n        const newPWep = new PersonalRangedWeapon();\r\n        newPWep.rangedWeapon = rangedWeapon;\r\n        pWeps.push(newPWep);\r\n        State.updateEntity({rangedWeapons: pWeps});\r\n    }\r\n}","import {FormFieldType} from \"../../form/FormFieldType\";\r\nimport Person from \"../creature/Person\";\r\nimport Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport SpellSchool from \"../knowledge/SpellSchool\";\r\nimport Nation from \"../world/Nation\";\r\nimport Race from \"../world/Race\";\r\n\r\nexport default class Realm extends Entity {\r\n  static entityName: string = 'realm';\r\n\r\n  name: string;\r\n  nations: Nation[]           = [];\r\n  spellSchools: SpellSchool[] = [];\r\n  persons: Person[]           = [];\r\n\r\n  updateWith(entity: Realm): Realm {\r\n    super.updateWith(entity);\r\n    this.updateEntityList(entity, 'nations', () => new Nation());\r\n    this.updateEntityList(entity, 'races', () => new Race());\r\n    this.updateEntityList(entity, 'spellSchools', () => new SpellSchool());\r\n    this.updateEntityList(entity, 'persons', () => new Person());\r\n    return this;\r\n  }\r\n}\r\n\r\nRegisterEntity(Realm,\r\n               [CreateColumn('name', FormFieldType.TEXT),],\r\n               [CreateFormField('name', FormFieldType.TEXT),\r\n                CreateFormField('nations', FormFieldType.ENTITY_COMBOBOX, Nation.entityName),\r\n                CreateFormField('spellSchools',\r\n                                FormFieldType.ENTITY_COMBOBOX,\r\n                                SpellSchool.entityName),\r\n                CreateFormField('persons', FormFieldType.ENTITY_COMBOBOX, Person.entityName),]);","import Realm from \"../realm/Realm\";\r\nimport SpellSchoolLevel from \"./SpellSchoolLevel\";\r\nimport Skill from \"./Skill\";\r\n\r\nexport default class CurrentMagicKnowledge {\r\n    currentSpellSchools: SpellSchoolLevel[] = [];\r\n    currentSkills: Skill[] = [];\r\n    realm: Realm;\r\n}","import Entity from \"../model/Entity\";\r\n\r\nexport const Collections = {\r\n  except: (from: Array<Entity>, except: Array<Entity>) => {\r\n    return from.filter(a => !except.find(b => a.name === b.name));\r\n  },\r\n\r\n  removeElement: (from: Array<any>, element: any): Array<any> => {\r\n    const indexOf = from.indexOf(element);\r\n    if (indexOf >= 0) {\r\n      from.splice(indexOf, 1);\r\n    }\r\n    return from;\r\n  },\r\n\r\n  addEntityIfNew: (element: any, to: Array<any>): Array<any> => {\r\n    if (!to.find(value => value.id === element.id)) {\r\n      to.push(element);\r\n    }\r\n    return to;\r\n  },\r\n\r\n  findByName: (array: Array, element: object) => {\r\n    return array.find(value => value.name === element.name);\r\n  },\r\n};\r\n\r\nexport function findEntity(array: Array<Entity>, element: Entity): Entity {\r\n  return findIn(array, element, ['name']);\r\n}\r\n\r\nexport function findIn<T>(array: Array<T>,\r\n                          element: T,\r\n                          toMatchPath: string[] = [],\r\n                          elementsPath = toMatchPath): T {\r\n  let toMatch = element;\r\n  toMatchPath.forEach(prop => toMatch = toMatch[prop]);\r\n\r\n  return array.find(t => {\r\n    let value = t;\r\n    elementsPath.forEach(prop => value = value[prop]);\r\n    return value === toMatch;\r\n  });\r\n}\r\n\r\nexport function removeFrom<T>(array: Array<T>, element: T): Array<T> {\r\n  const indexOf = array.indexOf(element);\r\n  if (indexOf >= 0) {\r\n    array.splice(indexOf, 1);\r\n  }\r\n  return array;\r\n}\r\n","import CurrentMagicKnowledge from \"../model/knowledge/CurrentMagicKnowledge\";\r\nimport {State} from \"../state/State\";\r\nimport {findEntity, findIn} from \"../util/Collections\";\r\nimport RemoteService from \"./RemoteService\";\r\n\r\nexport default class MagicService extends RemoteService {\r\n  getAvailableSpellSchools(currentMagicKnowledge: CurrentMagicKnowledge, onResponse: VoidFunction) {\r\n    this.requestFor(currentMagicKnowledge, 'magic/getAvailableSpellSchools', onResponse);\r\n  }\r\n\r\n  static getRelevantSpells() {\r\n    const {spells, spellSchools} = State.data.entity;\r\n    const availableSpells        = State.data.spell;\r\n    return availableSpells.filter(spell => !findEntity(spells, spell))\r\n                          .filter(spell => {\r\n                            const spellSchool = findIn(spellSchools,\r\n                                                       spell,\r\n                                                       ['spellSchool', 'name']);\r\n                            return spellSchool && spellSchool.level >= spell.level;\r\n                          })\r\n  }\r\n}\r\n","import {State} from \"../../state/State\";\r\n\r\nexport const Gender = {\r\n    MALE: 'MALE',\r\n    FEMALE: 'FEMALE',\r\n\r\n    allOf() {\r\n        return [this.MALE, this.FEMALE];\r\n    },\r\n};\r\n\r\nexport const GenderEntityName = 'gender';\r\nState.data[GenderEntityName] = Gender.allOf();","import Inventory from \"../model/crafting/Inventory\";\r\nimport Item from \"../model/crafting/Item\";\r\nimport PersonalRangedWeapon from \"../model/creature/PersonalRangedWeapon\";\r\nimport {State} from \"../state/State\";\r\nimport {findIn, removeFrom} from \"../util/Collections\";\r\n\r\nexport default class ItemService {\r\n  static addItemToInventory(item: Item) {\r\n    let inventory = State.data.entity.inventory;\r\n    if (!findIn(inventory, item, ['name'], ['item', 'name'])) {\r\n      const incomingInventory  = new Inventory();\r\n      incomingInventory.item   = item;\r\n      incomingInventory.amount = 0;\r\n      inventory.push(incomingInventory);\r\n      State.updateEntity({inventory: inventory});\r\n    }\r\n  }\r\n\r\n  static inventoryWeight(): number {\r\n    const miscItemsWeight = State.data.entity.inventory\r\n                      .map(value => value.item.weight * value.amount)\r\n                      .reduce((a, b) => a + b, 0);\r\n    const weaponsWeight = State.data.entity.meleeWeapons\r\n                               .map(value => value.weight)\r\n                               .reduce((a, b) => a + b, 0);\r\n    const rangedWeight = State.data.entity.rangedWeapons\r\n                               .map(p => ItemService.calculateRangedWeaponWeight(p))\r\n                               .reduce((a, b) => a + b, 0);\r\n    const armorWeight = State.data.entity.armor\r\n                               .map(value => value.weight)\r\n                               .reduce((a, b) => a + b, 0);\r\n\r\n    return (miscItemsWeight + weaponsWeight + rangedWeight + armorWeight).toFixed(2);\r\n  }\r\n\r\n  static calculateRangedWeaponWeight(p: PersonalRangedWeapon) {\r\n    let weight = 0;\r\n    if (p.rangedWeapon) {\r\n      weight += p.rangedWeapon.weight;\r\n    }\r\n    if (p.ammunition) {\r\n      weight += p.ammunition.weight * p.ammunitionAmount;\r\n    }\r\n    return weight;\r\n  }\r\n}","import Currency from \"../model/world/Currency\";\r\nimport Money from \"../model/world/Money\";\r\nimport {State} from \"../state/State\";\r\n\r\nexport default class MoneyService {\r\n  static addMoney(currency: Currency) {\r\n    const newMoney = new Money();\r\n    newMoney.currency = currency;\r\n\r\n    State.data.entity.money.push(newMoney);\r\n    State.updateEntity({money: State.data.entity.money})\r\n  }\r\n}","import DeterminantService from \"../client/DeterminantService\";\r\nimport Profession from \"../model/professions/Profession\";\r\nimport {State} from \"../state/State\";\r\nimport {Collections} from \"../util/Collections\";\r\n\r\nexport default class ProfessionService {\r\n  static getProfessions() {\r\n    const currentClass = State.data.entity.professionClass;\r\n    const data         = State.data[Profession.entityName];\r\n    if (currentClass) {\r\n      return data.filter(prof => prof.professionClass && (prof.professionClass.id\r\n                                                          === currentClass.id));\r\n    } else {\r\n      return State.data[Profession.entityName];\r\n    }\r\n  }\r\n\r\n  static updateProfession(profession: Profession) {\r\n    const {professions, determinants} = State.data.entity;\r\n    const newDeterminants = DeterminantService.updateProfessionExtensions(profession, determinants);\r\n    Collections.addEntityIfNew(profession, professions);\r\n    State.updateEntity({currentProfession: profession, professions: professions,\r\n                         determinants: newDeterminants});\r\n  }\r\n\r\n  static removeProfessionFromHistory(profession: Profession) {\r\n    const {professions, currentProfession} = State.data.entity;\r\n    Collections.removeElement(professions, profession);\r\n    if (currentProfession && profession.id === currentProfession.id) {\r\n      State.data.entity.currentProfession = null;\r\n    }\r\n    State.updateEntity({professions: professions});\r\n  }\r\n\r\n  static nextProfessions() {\r\n    const {currentProfession} = State.data.entity;\r\n    if (currentProfession && currentProfession.nextProfessions) {\r\n      return currentProfession.nextProfessions;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n}","// @flow\r\nimport React, {Component} from 'react';\r\nimport {State} from \"../../../state/State\";\r\nimport {removeFrom} from \"../../../util/Collections\";\r\n\r\nexport default class AnimalElement extends Component {\r\n  render() {\r\n    const {animal, ...other} = this.props;\r\n\r\n    return (<div {...other} onContextMenu={event => {\r\n      event.preventDefault();\r\n      State.updateEntity({animals: removeFrom(State.data.entity.animals, animal)})\r\n    }}>\r\n      <div>{animal.name}</div>\r\n    </div>);\r\n  };\r\n};\r\n","import {Placement} from \"../crafting/Placement\";\r\n\r\nexport default class CreatureArmorValues {\r\n    armorValues: Map<string, number>;\r\n\r\n\r\n    constructor() {\r\n        this.armorValues = new Map();\r\n        Placement.allOf().forEach(placement => {\r\n            this.armorValues.set(placement, 0);\r\n        })\r\n    }\r\n\r\n    getArmorValue(placement: string): number {\r\n        return this.armorValues.get(placement);\r\n    }\r\n\r\n    updateWith(values: CreatureArmorValues) {\r\n        this.armorValues = new Map();\r\n        Placement.allOf().map(placement => this.armorValues.set(placement, values[placement]));\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport GearService from \"../../../client/GearService\";\r\nimport {Placement} from \"../../../model/crafting/Placement\";\r\nimport CreatureArmorValues from \"../../../model/creature/CreatureArmorValues\";\r\nimport {State} from \"../../../state/State\";\r\n\r\nconst defaultComponentStyle = {\r\n    position: 'absolute',\r\n    width: 20,\r\n    textAlign: 'center',\r\n};\r\nconst defaultStyle = {\r\n    container: {\r\n        position: 'relative',\r\n    },\r\n    shield: {\r\n        ...defaultComponentStyle,\r\n        left: 130,\r\n        top: 85,\r\n    },\r\n    head: {\r\n        ...defaultComponentStyle,\r\n        left: 15,\r\n        top: 100,\r\n    },\r\n    rightHand: {\r\n        ...defaultComponentStyle,\r\n        left: 15,\r\n        top: 170,\r\n    },\r\n    leftHand: {\r\n        ...defaultComponentStyle,\r\n        left: 155,\r\n        top: 162,\r\n    },\r\n    torso: {\r\n        ...defaultComponentStyle,\r\n        left: 155,\r\n        top: 230,\r\n    },\r\n    rightLeg: {\r\n        ...defaultComponentStyle,\r\n        left: 15,\r\n        top: 295,\r\n    },\r\n    leftLeg: {\r\n        ...defaultComponentStyle,\r\n        left: 155,\r\n        top: 295,\r\n    },\r\n};\r\n\r\nconst gearService = new GearService();\r\n\r\nclass ArmorCalculationsComponent extends Component {\r\n    state = {\r\n        armorValues: new CreatureArmorValues(),\r\n    };\r\n\r\n    updateArmorValues = () => {\r\n        gearService.calculatePersonArmorValue(\r\n            State.data.entity.armor.map(armor => armor.id),\r\n            data => {\r\n                const armorCalcs = new CreatureArmorValues();\r\n                armorCalcs.updateWith(data);\r\n                this.setState({armorValues: armorCalcs, armor: State.data.entity.armor});\r\n            }\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const {classes, className, ...other} = this.props;\r\n        if (State.data.entity.armor !== this.state.armor) {\r\n            this.updateArmorValues();\r\n        }\r\n        return <div className={`${classes.container} ${className}`} {...other}>\r\n            <p className={classes.shield}>{this.state.armorValues.getArmorValue(Placement.SHIELD)}</p>\r\n            <p className={classes.head}>{this.state.armorValues.getArmorValue(Placement.HEAD)}</p>\r\n            <p className={classes.rightHand}>{this.state.armorValues.getArmorValue(Placement.HAND)}</p>\r\n            <p className={classes.leftHand}>{this.state.armorValues.getArmorValue(Placement.HAND)}</p>\r\n            <p className={classes.torso}>{this.state.armorValues.getArmorValue(Placement.TORSO)}</p>\r\n            <p className={classes.rightLeg}>{this.state.armorValues.getArmorValue(Placement.LEG)}</p>\r\n            <p className={classes.leftLeg}>{this.state.armorValues.getArmorValue(Placement.LEG)}</p>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default withStyles(defaultStyle)(ArmorCalculationsComponent)","import React, {Component} from \"react\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport {State} from \"../../../state/State\";\r\nimport {Collections} from \"../../../util/Collections\";\r\n\r\nconst containerStyle = {display: 'flex', flexDirection: 'row'};\r\n\r\nclass ArmorElement extends Component {\r\n  updateEntity = armor => event => {\r\n      event.preventDefault();\r\n      State.updateEntity({armor: Collections.removeElement(State.data.entity.armor, armor)});\r\n  };\r\n\r\n  render() {\r\n    const {t, armor, disabled} = this.props;\r\n\r\n    let content = [<div style={{width: 150}}>{armor.name}</div>,\r\n                   <div style={{width: 210}}>{t(armor.type.placement)}</div>,\r\n                   <div style={{width: 50}}>{armor.weight}</div>];\r\n\r\n      return disabled ?\r\n        <div style={containerStyle}>{content}</div> :\r\n        <div style={containerStyle} onContextMenu={this.updateEntity(armor)}>{content}</div>;\r\n  }\r\n}\r\n\r\nexport default withTranslation()(ArmorElement);","import withStyles             from \"@material-ui/core/styles/withStyles\";\r\nimport React, {PureComponent} from \"react\";\r\nimport {State}                from \"../../../state/State\";\r\n\r\nconst defaultClass = {\r\n  input: {\r\n    backgroundColor: 'transparent',\r\n    border: 0,\r\n    width: '100%',\r\n    fontFamily: 'wfrp',\r\n    fontSize: '24px',\r\n    textAlign: 'center',\r\n    outline: 'none',\r\n  },\r\n};\r\n\r\nclass SimpleTextField extends PureComponent {\r\n  parse = onChange => event => {\r\n    const {name, variant} = this.props;\r\n    const change = event.target.value;\r\n\r\n    if (change === '') {\r\n      onChange(change);\r\n      return;\r\n    }\r\n\r\n    if (variant === TextFieldType.INT) {\r\n      const value = parseInt(change);\r\n      if (value || value === 0) {\r\n        onChange(value);\r\n      } else {\r\n        event.target.value = State.data.entity[name] || '';\r\n      }\r\n\r\n    } else if (variant === TextFieldType.FLOAT) {\r\n      const value = parseFloat(change);\r\n      if (value || value === 0) {\r\n        onChange(value);\r\n      } else {\r\n        event.target.value = State.data.entity[name] || '';\r\n      }\r\n\r\n    } else {\r\n      onChange(change);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n            name,\r\n            value = State.data.entity[name],\r\n            classes,\r\n            customStyle,\r\n            onChange = val => State.updateEntity({[name]: val}),\r\n            multiline\r\n    } = this.props;\r\n\r\n    return multiline ?\r\n        <textarea className={classes.input} style={customStyle} value={value} onChange={this.parse(onChange)}/> :\r\n        <input className={classes.input} style={customStyle} value={value} onChange={this.parse(onChange)}/>;\r\n  }\r\n}\r\n\r\nexport default withStyles(defaultClass)(SimpleTextField);\r\n\r\nexport const TextFieldType = {\r\n  TEXT: 'TEXT', INT: 'INT', FLOAT: 'FLOAT',\r\n};","// @flow\r\nimport React, {Component} from 'react';\r\nimport SimpleTextField, {TextFieldType} from \"../../../form/sheet/field/SimpleTextField\";\r\nimport {State} from \"../../../state/State\";\r\nimport {removeFrom} from \"../../../util/Collections\";\r\n\r\nclass ItemElement extends Component {\r\n  updateAmount = amount => {\r\n    this.props.inventory.amount = amount;\r\n    State.updateEntity({inventory: State.data.entity.inventory});\r\n  };\r\n\r\n  static calculateWeight = inventory => {\r\n    return (inventory.amount * inventory.item.weight).toFixed(2);\r\n  };\r\n\r\n  render() {\r\n    const {inventory} = this.props;\r\n    return (<div style={{width: 290, display: 'flex'}}\r\n                 onContextMenu={event => {\r\n                   event.preventDefault();\r\n                   const allInventory = State.data.entity.inventory;\r\n                   removeFrom(allInventory, inventory);\r\n                   State.updateEntity({inventory: allInventory});\r\n                 }}>\r\n      <div style={{width: 150, minWidth: 150}}>{inventory.item.name}</div>\r\n      <div style={{width: 70, textAlign: 'center'}}>{ItemElement.calculateWeight(inventory)}</div>\r\n      <SimpleTextField style={{width: 50, textAlign: 'center'}}\r\n                       variant={TextFieldType.FLOAT}\r\n                       value={inventory.amount}\r\n                       onChange={this.updateAmount}/>\r\n    </div>);\r\n  };\r\n}\r\n\r\nexport default ItemElement;","// @flow\r\nimport React, {Component} from 'react';\r\nimport {State} from \"../../../state/State\";\r\nimport {removeFrom} from \"../../../util/Collections\";\r\nimport SimpleTextField, {TextFieldType} from \"./SimpleTextField\";\r\n\r\nexport default class MoneyElement extends Component {\r\n  updateAmount = amountType => amount => {\r\n    this.props.money.amount[amountType] = amount;\r\n    State.updateEntity({money: State.data.entity.money});\r\n  };\r\n\r\n  render() {\r\n    const {money, ...other} = this.props;\r\n\r\n    return <div {...other} style={{display: 'flex'}} onContextMenu={event => {\r\n      event.preventDefault();\r\n      State.updateEntity({money: removeFrom(State.data.entity.money, money)});\r\n    }}>\r\n      <div style={{width: 145}}>{money.currency.name}</div>\r\n      <SimpleTextField customStyle={{width: 40}}\r\n                       value={money.amount.gold}\r\n                       onChange={this.updateAmount('gold')}\r\n                       variant={TextFieldType.INT}/>\r\n      <SimpleTextField customStyle={{width: 45}}\r\n                       value={money.amount.silver}\r\n                       onChange={this.updateAmount('silver')}\r\n                       variant={TextFieldType.INT}/>\r\n      <SimpleTextField customStyle={{width: 50}}\r\n                       value={money.amount.lead}\r\n                       onChange={this.updateAmount('lead')}\r\n                       variant={TextFieldType.INT}/>\r\n    </div>;\r\n  };\r\n}\r\n","import React, {Component} from \"react\";\r\nimport {withStyles} from \"@material-ui/styles\";\r\nimport Add from \"@material-ui/icons/Add\";\r\nimport DeterminantService from \"../../../client/DeterminantService\";\r\nimport {ModifierType} from \"../../../model/rule/Modifier\";\r\n\r\nconst determinantService = new DeterminantService();\r\n\r\nconst fieldStyle = {\r\n    fieldContainer: {\r\n        position: 'relative'\r\n    },\r\n    extension: {\r\n        position: 'absolute',\r\n        top: '-10px',\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    checkboxContainer: {\r\n        position: 'absolute',\r\n        right: '5px',\r\n        display: 'flex',\r\n        flexFlow: 'row',\r\n        flexWrap: 'wrap',\r\n        maxWidth: 40,\r\n        zIndex: 1\r\n    },\r\n};\r\n\r\nconst ExtMark = props => <Add style={{fontSize: 14, margin: -2}} {...props}/>;\r\n\r\nclass ProfessionExtensionField extends Component {\r\n\r\n    addExtension = () => {\r\n        determinantService.addExperienceExtension(this.props.ext, this.props.onChange);\r\n    };\r\n\r\n    removeExtension = () => {\r\n        determinantService.removeExperienceExtension(this.props.ext, this.props.onChange);\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ext,\r\n            classes,\r\n            customClassName,\r\n            onChange,\r\n            ...other\r\n        } = this.props;\r\n\r\n        let professionValue = '0';\r\n        let extended = [];\r\n\r\n        if (ext) {\r\n            extended = ext.getExperienceExtensions();\r\n            const professionModifier = ext ? ext.modifiers.find(mod => mod.type === ModifierType.PROFESSION) : null;\r\n\r\n            if (professionModifier) {\r\n              professionValue = professionModifier.value;\r\n            }\r\n        }\r\n\r\n        return <div className={`${classes.fieldContainer} ${customClassName}`} {...other}\r\n                    onClick={this.addExtension}\r\n                    onContextMenu={(e) => {e.preventDefault(); this.removeExtension();}}>\r\n            <p className={classes.extension}>{'+' + professionValue}</p>\r\n            <div className={classes.checkboxContainer}>\r\n                {extended.map(mod => <ExtMark key={'' + mod.value + '-' + mod.type}/>)}\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default withStyles(fieldStyle)(ProfessionExtensionField);","import React, {Component} from \"react\";\r\nimport {withStyles} from \"@material-ui/styles\";\r\nimport CreatureDeterminants from \"../../../model/creature/CreatureDeterminants\";\r\nimport {DeterminantType} from \"../../../model/rule/Determinant\";\r\nimport {State} from \"../../../state/State\";\r\nimport ProfessionExtensionField from \"./ProfessionExtensionField\";\r\nimport SimpleTextField, {TextFieldType} from \"./SimpleTextField\";\r\n\r\nexport const PersonalDeterminantFieldStyle = {\r\n    row1: {\r\n        paddingTop: 10,\r\n        maxHeight: 35,\r\n        minHeight: 35,\r\n        width: '100%',\r\n        display: 'flex',\r\n    },\r\n    row2: {\r\n        maxHeight: 50,\r\n        minHeight: 50,\r\n        width: '100%',\r\n        display: 'flex',\r\n    },\r\n    row3: {\r\n        maxHeight: 50,\r\n        minHeight: 50,\r\n        width: '100%',\r\n        display: 'flex',\r\n        textAlign: 'center',\r\n    },\r\n\r\n    firstInRow: {\r\n        minHeight: 50,\r\n        maxHeight: 50,\r\n        minWidth: 47,\r\n        maxWidth: 47,\r\n    },\r\n    otherInRow: {\r\n        maxHeight: 50,\r\n        minHeight: 50,\r\n        minWidth: 47,\r\n        maxWidth: 47,\r\n    },\r\n    otherInRow2: {\r\n        maxHeight: 50,\r\n        minHeight: 50,\r\n        minWidth: 46,\r\n        maxWidth: 46,\r\n    },\r\n    lastRowChild: {\r\n        margin: '15px 0 0 0',\r\n    }\r\n};\r\n\r\nclass PersonalDeterminantsField extends Component {\r\n    updateDeterminant = determinant => value => {\r\n        determinant.value = value;\r\n        State.updateEntity({determinants: State.data.entity.determinants});\r\n    };\r\n\r\n    updateDeterminantExperience = determinant => {\r\n        const determinants: CreatureDeterminants = State.data.entity.determinants;\r\n        determinants.replaceDeterminant(determinant);\r\n        State.updateEntity({determinants: determinants});\r\n    };\r\n\r\n    render() {\r\n        const {classes, ...other} = this.props;\r\n        const person = State.data.entity;\r\n        const determinants: CreatureDeterminants = person.determinants;\r\n        const speed = determinants.findDeterminant(DeterminantType.SPEED);\r\n        const battle = determinants.findDeterminant(DeterminantType.BATTLE);\r\n        const shooting = determinants.findDeterminant(DeterminantType.SHOOTING);\r\n        const strength = determinants.findDeterminant(DeterminantType.STRENGTH);\r\n        const durability = determinants.findDeterminant(DeterminantType.DURABILITY);\r\n        const health = determinants.findDeterminant(DeterminantType.HEALTH);\r\n        const attack = determinants.findDeterminant(DeterminantType.ATTACK);\r\n        const initiative = determinants.findDeterminant(DeterminantType.INITIATIVE);\r\n        const dexterity = determinants.findDeterminant(DeterminantType.DEXTERITY);\r\n        const leaderSkills = determinants.findDeterminant(DeterminantType.LEADER_SKILLS);\r\n        const intelligence = determinants.findDeterminant(DeterminantType.INTELLIGENCE);\r\n        const control = determinants.findDeterminant(DeterminantType.CONTROL);\r\n        const will = determinants.findDeterminant(DeterminantType.WILL);\r\n        const charisma = determinants.findDeterminant(DeterminantType.CHARISMA);\r\n\r\n        return <div {...other}>\r\n            <div className={classes.row1}>\r\n                <SimpleTextField className={classes.firstInRow}  value={speed.value} onChange={this.updateDeterminant(speed)} variant={TextFieldType.INT} />\r\n                <SimpleTextField className={classes.otherInRow}  value={battle.value} onChange={this.updateDeterminant(battle)} variant={TextFieldType.INT} />\r\n                <SimpleTextField className={classes.otherInRow}  value={shooting.value} onChange={this.updateDeterminant(shooting)} variant={TextFieldType.INT} />\r\n                <SimpleTextField className={classes.otherInRow}  value={strength.value} onChange={this.updateDeterminant(strength)} variant={TextFieldType.INT} />\r\n                <SimpleTextField className={classes.otherInRow}  value={durability.value} onChange={this.updateDeterminant(durability)} variant={TextFieldType.INT} />\r\n                <SimpleTextField className={classes.otherInRow2} value={health.value} onChange={this.updateDeterminant(health)} variant={TextFieldType.INT} />\r\n                <SimpleTextField className={classes.otherInRow}  value={initiative.value} onChange={this.updateDeterminant(initiative)} variant={TextFieldType.INT} />\r\n                <SimpleTextField className={classes.otherInRow2} value={attack.value} onChange={this.updateDeterminant(attack)} variant={TextFieldType.INT} />\r\n                <SimpleTextField className={classes.otherInRow2} value={dexterity.value} onChange={this.updateDeterminant(dexterity)} variant={TextFieldType.INT} />\r\n                <SimpleTextField className={classes.otherInRow2} value={leaderSkills.value} onChange={this.updateDeterminant(leaderSkills)} variant={TextFieldType.INT} />\r\n                <SimpleTextField className={classes.otherInRow2} value={intelligence.value} onChange={this.updateDeterminant(intelligence)} variant={TextFieldType.INT} />\r\n                <SimpleTextField className={classes.otherInRow2} value={control.value} onChange={this.updateDeterminant(control)} variant={TextFieldType.INT} />\r\n                <SimpleTextField className={classes.otherInRow2} value={will.value} onChange={this.updateDeterminant(will)} variant={TextFieldType.INT} />\r\n                <SimpleTextField className={classes.otherInRow}  value={charisma.value} onChange={this.updateDeterminant(charisma)} variant={TextFieldType.INT} />\r\n            </div>\r\n            <div className={classes.row2}>\r\n                <ProfessionExtensionField ext={speed} customClassName={classes.firstInRow} onChange={this.updateDeterminantExperience}/>\r\n                <ProfessionExtensionField ext={battle} customClassName={classes.otherInRow} onChange={this.updateDeterminantExperience}/>\r\n                <ProfessionExtensionField ext={shooting} customClassName={classes.otherInRow} onChange={this.updateDeterminantExperience}/>\r\n                <ProfessionExtensionField ext={strength} customClassName={classes.otherInRow} onChange={this.updateDeterminantExperience}/>\r\n                <ProfessionExtensionField ext={durability} customClassName={classes.otherInRow} onChange={this.updateDeterminantExperience}/>\r\n                <ProfessionExtensionField ext={health} customClassName={classes.otherInRow2} onChange={this.updateDeterminantExperience}/>\r\n                <ProfessionExtensionField ext={initiative} customClassName={classes.otherInRow} onChange={this.updateDeterminantExperience}/>\r\n                <ProfessionExtensionField ext={attack} customClassName={classes.otherInRow2} onChange={this.updateDeterminantExperience}/>\r\n                <ProfessionExtensionField ext={dexterity} customClassName={classes.otherInRow2} onChange={this.updateDeterminantExperience}/>\r\n                <ProfessionExtensionField ext={leaderSkills} customClassName={classes.otherInRow2} onChange={this.updateDeterminantExperience}/>\r\n                <ProfessionExtensionField ext={intelligence} customClassName={classes.otherInRow2} onChange={this.updateDeterminantExperience}/>\r\n                <ProfessionExtensionField ext={control} customClassName={classes.otherInRow2} onChange={this.updateDeterminantExperience}/>\r\n                <ProfessionExtensionField ext={will} customClassName={classes.otherInRow2} onChange={this.updateDeterminantExperience}/>\r\n                <ProfessionExtensionField ext={charisma} customClassName={classes.otherInRow} onChange={this.updateDeterminantExperience}/>\r\n            </div>\r\n            <div className={classes.row3}>\r\n                <p className={`${classes.lastRowChild} ${classes.firstInRow} `}>{speed.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow} `}>{battle.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow} `}>{shooting.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow} `}>{strength.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow} `}>{durability.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{health.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow} `}>{initiative.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{attack.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{dexterity.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{leaderSkills.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{intelligence.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{control.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{will.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow} `}>{charisma.calculateExperienceValue()}</p>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default withStyles(PersonalDeterminantFieldStyle)(PersonalDeterminantsField);","import {Tooltip} from \"@material-ui/core\";\r\nimport React, {Component} from \"react\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from 'react-select/animated'\r\nimport {State} from \"../../../state/State\";\r\n\r\nconst simpleStyle      = {\r\n  control: (provided, state) => ({\r\n    width: '100%', display: 'flex'\r\n  }), dropdownIndicator: (provided, state) => ({\r\n    color: 'transparent'\r\n  }), indicatorSeparator: (provided, state) => ({\r\n    color: 'transparent'\r\n  }),\r\n};\r\nconst simpleStyleMulti = {\r\n  control: (provided, state) => ({\r\n    width: '100%', display: 'flex'\r\n  }), dropdownIndicator: (provided, state) => ({\r\n    color: 'transparent'\r\n  }), indicatorSeparator: (provided, state) => ({\r\n    color: 'transparent'\r\n  }), clearIndicator: (provided, state) => ({\r\n    color: 'transparent',\r\n  }), multiValueRemove: (provided, state) => ({\r\n    color: 'ghostwhite', maxHeight: '1px',\r\n  }), singleValue: (provided, state) => ({\r\n    color: 'black', maxHeight: '1px',\r\n  }), multiValueLabel: (provided, state) => ({\r\n    background: 'transparent', display: 'inline-flex', '&::after': {\r\n      content: '\",\"'\r\n    }\r\n  }), multiValue: (provided, state) => ({\r\n    background: 'transparent', display: 'inline-flex', height: '14px'\r\n  }),\r\n};\r\n\r\nexport default class SimpleEntitySelect extends Component {\r\n  render() {\r\n    const {\r\n            name,\r\n            propName = name,\r\n            value = State.data.entity[propName],\r\n            options = State.data[name],\r\n            multi,\r\n            className,\r\n            customStyle,\r\n            onChange = selected => State.updateEntity({[propName]: selected})\r\n          } = this.props;\r\n\r\n    return <Tooltip title={value && value.description ? value.description : ''}>\r\n      <div style={{...{display: 'inline-block'}, ...customStyle}}>\r\n        <Select className={className}\r\n                styles={multi ? simpleStyleMulti : simpleStyle}\r\n                value={value}\r\n                options={options}\r\n                onChange={onChange}\r\n                components={makeAnimated()}\r\n                getOptionLabel={option => {\r\n                  return <div>{option.name}</div>\r\n                }}\r\n                getOptionValue={option => {\r\n                  return option.id\r\n                }}\r\n                filterOption={(option, input) => option.data.name.startsWith(input)}\r\n                placeholder={<div/>}\r\n                isSearchable\r\n                isMulti={multi}/>\r\n      </div>\r\n    </Tooltip>;\r\n  }\r\n}","import React, {Component} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Ammunition from \"../../../model/crafting/Ammunition\";\r\nimport {State} from \"../../../state/State\";\r\nimport {Collections} from \"../../../util/Collections\";\r\nimport SimpleEntitySelect from \"./SimpleEntitySelect\";\r\nimport SimpleTextField, {TextFieldType} from \"./SimpleTextField\";\r\n\r\nconst weaponElementStyle = {\r\n    ammunitionAmountField: {\r\n        minWidth: 40,\r\n        maxWidth: 40,\r\n    }\r\n};\r\n\r\nclass RangedWeaponElement extends Component {\r\n    render() {\r\n        const {\r\n            pWep,\r\n        } = this.props;\r\n        const weapon = pWep.rangedWeapon;\r\n        const weaponType = weapon.type;\r\n        const prepareTime = weaponType.prepareTime.toString();\r\n\r\n        return <div style={{display: 'flex', flexDirection: 'column'}}\r\n                    onContextMenu={event => {\r\n            event.preventDefault();\r\n            State.updateEntity({['rangedWeapons']: Collections.removeElement(State.data.entity.rangedWeapons, pWep)});\r\n        }}>\r\n            <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                <div style={{width: 190}}>{weapon.name}</div>\r\n                <div style={{width: 38, textAlign: 'center'}}>{weaponType.minimumRange}</div>\r\n                <div style={{width: 38, textAlign: 'center'}}>{weaponType.mediumRange}</div>\r\n                <div style={{width: 38, textAlign: 'center'}}>{weaponType.maximumRange}</div>\r\n                <div style={{width: 38, textAlign: 'center'}}>{weaponType.damage.value}</div>\r\n                <div style={{width: 38, textAlign: 'center'}}>{prepareTime}</div>\r\n            </div>\r\n            <div style={{width: 170, height: 45, marginLeft: 10, display: 'flex'}}>\r\n                <SimpleEntitySelect name={Ammunition.entityName}\r\n                                    customStyle={{width: 140, height: 45}}\r\n                                    value={pWep.ammunition}\r\n                                    onChange={selected => {\r\n                                        pWep.ammunition = selected;\r\n                                        this.setState({newAmmunition: selected});\r\n                                    }}/>\r\n                <div onContextMenu={event => {\r\n                    event.preventDefault();\r\n                    pWep.ammunition = null;\r\n                    pWep.ammunitionAmount = 0;\r\n                    this.setState({newAmmunition: null});\r\n                }}>\r\n                    {\r\n                        pWep.ammunition ?\r\n                            <SimpleTextField customStyle={{width: 40}}\r\n                                             value={pWep.ammunitionAmount}\r\n                                             variant={TextFieldType.INT}\r\n                                             onChange={value => {\r\n                                                 pWep.ammunitionAmount = value;\r\n                                                 this.setState({currentAmount: value});\r\n                                             }}/> :\r\n                            <div/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default withStyles(weaponElementStyle)(RangedWeaponElement)","import {List} from \"@material-ui/core\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {Component} from \"react\";\r\nimport {State} from \"../../../state/State\";\r\nimport {Collections} from \"../../../util/Collections\";\r\nimport SimpleEntitySelect from \"./SimpleEntitySelect\";\r\nimport SimpleBar from 'simplebar-react';\r\nimport 'simplebar/dist/simplebar.min.css'\r\n\r\nconst fieldStyle = {\r\n  container: {\r\n    width: '100%'\r\n  }, selectComponent: {\r\n    width: '100%'\r\n  }, itemsList: {\r\n    height: '100%', width: '100%', overflow: 'auto',\r\n  }, itemContainer: {\r\n    display: 'flex', flexDirection: 'row'\r\n  },\r\n};\r\n\r\nconst selectStyle = {\r\n  placeholder: () => ({\r\n    color: 'transparent'\r\n  }), singleValue: () => ({\r\n    color: 'transparent'\r\n  }),\r\n};\r\n\r\nclass SelectableList extends Component {\r\n\r\n  render() {\r\n    const {\r\n            classes,\r\n            customStyle,\r\n            listStyle,\r\n            name,\r\n            propName = name,\r\n            value = State.data.entity[name],\r\n            data = State.data[name],\r\n            onGearAdd = selected => State.updateEntity(\r\n                {[propName]: Collections.addEntityIfNew(selected, State.data.entity[propName])}),\r\n            children,\r\n            ...other\r\n          } = this.props;\r\n\r\n    const currentStyle = {...classes, ...customStyle};\r\n\r\n    return <div style={{width: '100%'}} {...other}>\r\n      <SimpleEntitySelect name={name}\r\n                          options={data}\r\n                          customStyle={{width: '100%'}}\r\n                          onChange={onGearAdd}\r\n                          value={null}/>\r\n                          <SimpleBar style={{...{height: '100%', width: '100%'}, ...listStyle}}>\r\n                            {children}\r\n                          </SimpleBar>\r\n{/*\r\n      <List style={{...{height: '100%', width: '100%', overflow: 'auto'}, ...listStyle}}>\r\n      </List>\r\n*/}\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default withStyles(fieldStyle)(SelectableList)","import React, {Component} from \"react\";\r\nimport Select             from \"react-select\";\r\nimport makeAnimated       from 'react-select/animated'\r\nimport {State}            from \"../../../state/State\";\r\n\r\nconst simpleStyle = {\r\n  control: (provided, state) => ({\r\n    width: '100%', display: 'flex'\r\n  }), dropdownIndicator: (provided, state) => ({\r\n    color: 'transparent'\r\n  }), indicatorSeparator: (provided, state) => ({\r\n    color: 'white'\r\n  }),\r\n};\r\n\r\nexport default class SimpleEnumSelect extends Component {\r\n\r\n  getData = source => {\r\n    return source.map(e => {\r\n      return {label: e, value: e};\r\n    });\r\n  };\r\n\r\n  onSelected = selected => {\r\n    this.props.onChange(selected && selected.value)\r\n  };\r\n\r\n  render() {\r\n    const {name, value = State.data.entity[name], options = State.data[name], ...other} = this.props;\r\n\r\n    return <Select {...other}\r\n                   styles={simpleStyle}\r\n                   options={options}\r\n                   value={{label: value, value: value}}\r\n                   getOptionLabel={val => <div>{val.label ? val.label : (typeof val === \"string\"\r\n                       ? val\r\n                       : undefined)}</div>}\r\n                   getOptionValue={val => val}\r\n                   onChange={selected => State.updateEntity({[name]: selected})}\r\n                   components={makeAnimated()}\r\n                   isSearchable/>;\r\n  }\r\n}","import {Menu, MenuItem} from \"@material-ui/core\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport React, {Component} from \"react\";\r\nimport {State} from \"../../../state/State\";\r\n\r\nexport default class SimpleList extends Component {\r\n  state = {\r\n    anchorEl: null, currentElement: null\r\n  };\r\n\r\n  handleClick = element => event => {\r\n    this.setState({anchorEl: event.currentTarget, currentElement: element})\r\n  };\r\n\r\n  onRemove = element => () => {\r\n    this.handleClose();\r\n    this.props.onRemove(element);\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({anchorEl: null, currentElement: null})\r\n  };\r\n\r\n  render() {\r\n    const {name, data = State.data.entity[name], onRemove, listStyle, ...other} = this.props;\r\n    return <div {...other}>\r\n      {data.map((element, index) => {\r\n        const value = element.name || element;\r\n        return <div key={'listed-entity-' + value} style={{display: 'inline-block'}}>\r\n            {\r\n                element.name ?\r\n                    element.description ?\r\n                        <Tooltip title={element.description}><p onClick={this.handleClick(element)} style={{margin: 0}}>{(index > 0 ? ', ' : '') + value}</p></Tooltip> :\r\n                        <p onClick={this.handleClick(element)} style={{margin: 0}}>{(index > 0 ? ', ' : '') + value}</p> :\r\n                    <p style={{margin: 0}}>{(index > 0 ? ', ' : '') + value}</p>\r\n            }\r\n            {\r\n                element.name &&\r\n                <Menu id={'listed-menu-item-' + element.name}\r\n                      anchorEl={this.state.anchorEl}\r\n                      open={element === this.state.currentElement && this.state.anchorEl !== null}\r\n                      onClose={this.handleClose}>\r\n                    <MenuItem onClick={this.onRemove(element)}>Remove</MenuItem>\r\n                </Menu>\r\n            }\r\n        </div>\r\n      })}\r\n    </div>;\r\n  }\r\n}","// @flow\r\nimport React, {Component} from 'react';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {DeterminantType} from \"../../../model/rule/Determinant\";\r\nimport {State} from \"../../../state/State\";\r\n\r\nconst componentStyle = {\r\n    container: {\r\n        height: 160,\r\n        width: 200,\r\n        paddingLeft: 140,\r\n        paddingTop: 80,\r\n        display: 'flex',\r\n        flexFlow: 'column',\r\n    },\r\n\r\n    firstRow: {\r\n        display: 'flex',\r\n        height: 45,\r\n        width: '100%',\r\n    },\r\n    nextRow: {\r\n        display: 'flex',\r\n        height: 45,\r\n        width: '100%',\r\n    },\r\n    cell: {\r\n        width: 70,\r\n        textAlign: 'center',\r\n        alignSelf: 'center',\r\n    },\r\n};\r\n\r\nclass SpeedComponent extends Component {\r\n    calc = (speed, tempo) => [speed * tempo, speed * tempo * 6, speed * tempo * 360 / 1000];\r\n    calculateSpeed = speed => [this.calc(speed, 2), this.calc(speed, 4), this.calc(speed, 16)];\r\n\r\n    render() {\r\n        const {classes, entity = State.data.entity} = this.props;\r\n        const speed = this.calculateSpeed(entity.determinants.findDeterminant(DeterminantType.SPEED).calculateExperienceValue());\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <div className={classes.firstRow}>\r\n                    <div className={classes.cell}>{speed[0][0]}</div>\r\n                    <div className={classes.cell}>{speed[0][1]}</div>\r\n                    <div className={classes.cell}>{speed[0][2]}</div>\r\n                </div>\r\n                <div className={classes.nextRow}>\r\n                    <div className={classes.cell}>{speed[1][0]}</div>\r\n                    <div className={classes.cell}>{speed[1][1]}</div>\r\n                    <div className={classes.cell}>{speed[1][2]}</div>\r\n                </div>\r\n                <div className={classes.nextRow}>\r\n                    <div className={classes.cell}>{speed[2][0]}</div>\r\n                    <div className={classes.cell}>{speed[2][1]}</div>\r\n                    <div className={classes.cell}>{speed[2][2]}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default withStyles(componentStyle)(SpeedComponent);","// @flow\r\nimport React, {Component} from 'react';\r\nimport {State} from \"../../../state/State\";\r\nimport {removeFrom} from \"../../../util/Collections\";\r\n\r\nclass SpellElement extends Component {\r\n  onContextMenu = spell => event => {\r\n    event.preventDefault();\r\n    State.updateEntity({spells: removeFrom(State.data.entity.spells, spell)});\r\n  };\r\n\r\n  render() {\r\n    const {spell, disabled} = this.props;\r\n    const ingredientsText   = spell.ingredients.map(item => item.name).join(', ');\r\n\r\n    const content = [<div style={{width: 155}}>{spell.name}</div>,\r\n                     <div style={{textAlign: 'center', width: 47}}>{spell.level}</div>,\r\n                     <div style={{textAlign: 'center', width: 47}}>{spell.manaCost}</div>,\r\n                     <div style={{textAlign: 'center', width: 47}}>{spell.range}</div>,\r\n                     <div style={{\r\n                       textAlign: 'center', width: 47\r\n                     }}>{spell.durationTime.toString()}</div>,\r\n                     <div style={{width: 140}}>{ingredientsText}</div>,\r\n                     <div style={{width: 130}}>{spell.effect}</div>,];\r\n    return disabled ?\r\n        <div style={{display: 'flex'}}>{content}</div> :\r\n        <div style={{display: 'flex'}} onContextMenu={this.onContextMenu(spell)}>{content}</div>;\r\n  };\r\n};\r\n\r\nexport default SpellElement;","import React, {Component} from 'react';\r\nimport MagicService from \"../../../client/MagicService\";\r\nimport CurrentMagicKnowledge from \"../../../model/knowledge/CurrentMagicKnowledge\";\r\nimport SpellSchoolLevel from \"../../../model/knowledge/SpellSchoolLevel\";\r\nimport {State} from \"../../../state/State\";\r\nimport {removeFrom} from \"../../../util/Collections\";\r\nimport SelectableList from \"./SelectableList\";\r\n\r\nclass SpellSchoolList extends Component {\r\n  static magicService = new MagicService();\r\n  state               = {\r\n    availableSpellSchools: new Map(),\r\n  };\r\n\r\n  onSpellSchoolAdd = magicSchool => {\r\n    const entity              = State.data.entity;\r\n    const currentSpellSchools = entity.spellSchools;\r\n    const currentLevelIndex   = currentSpellSchools.indexOf(currentSpellSchools.find(value => value.spellSchool.name\r\n                                                                                              === magicSchool.name));\r\n\r\n    if (currentLevelIndex >= 0) {\r\n      currentSpellSchools.splice(currentLevelIndex, 1);\r\n    }\r\n    let newSpellSchool = this.state.availableSpellSchools.get(magicSchool);\r\n    State.updateEntity({spellSchools: [...currentSpellSchools, newSpellSchool]});\r\n  };\r\n\r\n  onSpellSchoolRemove = spellSchool => event => {\r\n    event.preventDefault();\r\n    let newSpellSchools = removeFrom(State.data.entity.spellSchools, spellSchool);\r\n    this.refreshRelevantMagicSchools();\r\n    State.updateEntity({spellSchools: newSpellSchools});\r\n  };\r\n\r\n  refreshRelevantMagicSchools = () => {\r\n    const currentMagicKnowledge: CurrentMagicKnowledge = new CurrentMagicKnowledge();\r\n    currentMagicKnowledge.currentSpellSchools          = State.data.entity.spellSchools;\r\n    currentMagicKnowledge.realm                        = State.data.currentRealm;\r\n    SpellSchoolList.magicService.getAvailableSpellSchools(currentMagicKnowledge,\r\n                                                          this.setSpellSchools);\r\n  };\r\n\r\n  setSpellSchools = spellSchools => {\r\n    this.setState({\r\n                    availableSpellSchools: this.assembleSpellSchools(spellSchools),\r\n                    currentSpellSchools: State.data.entity.spellSchools\r\n                  });\r\n  };\r\n\r\n  assembleSpellSchools = spellSchools => {\r\n    const map = this.state.availableSpellSchools;\r\n    map.clear();\r\n    spellSchools.forEach(spellSchoolLevel => map.set(spellSchoolLevel.spellSchool,\r\n                                                     spellSchoolLevel));\r\n    return map;\r\n  };\r\n\r\n  static spellSchoolLevelText = (spellSchoolLevel: SpellSchoolLevel) => {\r\n    return spellSchoolLevel.spellSchool.name + ' p. ' + spellSchoolLevel.level;\r\n  };\r\n\r\n  render() {\r\n    const entity = State.data.entity;\r\n\r\n    if (this.state.currentSpellSchools !== entity.spellSchools) {\r\n      this.refreshRelevantMagicSchools();\r\n    }\r\n    const availableSpellSchools = [...this.state.availableSpellSchools.keys()];\r\n\r\n    return <div>\r\n      <SelectableList style={{height: 400, width: 200, paddingTop: 10}}\r\n                      listStyle={{height: 300, width: '100%', overflow: 'auto'}}\r\n                      data={availableSpellSchools}\r\n                      onGearAdd={this.onSpellSchoolAdd}>\r\n        {entity.spellSchools.map(spellSchoolLevel => <p\r\n            key={SpellSchoolList.spellSchoolLevelText(spellSchoolLevel)} style={{margin: 0}}\r\n            onContextMenu={this.onSpellSchoolRemove(spellSchoolLevel)}>\r\n          {SpellSchoolList.spellSchoolLevelText(spellSchoolLevel)}\r\n        </p>)}\r\n      </SelectableList>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default SpellSchoolList;","import React, {Component} from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport GearService from \"../../../client/GearService\";\r\nimport {DeterminantType} from \"../../../model/rule/Determinant\";\r\nimport {State} from \"../../../state/State\";\r\nimport {Collections} from \"../../../util/Collections\";\r\n\r\nconst weaponElementStyle = {\r\n    itemContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'row'\r\n    },\r\n    itemName: {\r\n        minWidth: 180,\r\n        maxWidth: 180,\r\n    },\r\n    itemVariable: {\r\n        minWidth: 51,\r\n        maxWidth: 51,\r\n        textAlign: 'center',\r\n    },\r\n    damageText: {\r\n        minWidth: 51,\r\n        maxWidth: 51,\r\n        textAlign: 'center',\r\n        fontSize: 12,\r\n        paddingTop: 5,\r\n    },\r\n};\r\n\r\nconst weaponService = new GearService();\r\n\r\nclass WeaponElement extends Component {\r\n    state = {\r\n        damageText: ''\r\n    };\r\n\r\n    updateDamageValue = () => {\r\n        weaponService.calculateMeleeDamage(this.props.weapon.id, text => this.setState({\r\n            damageText: text,\r\n            weapon: this.props.weapon\r\n        }))\r\n    };\r\n\r\n    onRightClick = (name, weapon) => event => {\r\n        event.preventDefault();\r\n        State.updateEntity({[name]: Collections.removeElement(State.data.entity[name], weapon)});\r\n    };\r\n\r\n    render() {\r\n        const {name, classes, customStyle, weapon, disabled} = this.props;\r\n        const currentStyle = {...classes, ...customStyle};\r\n        if (weapon !== this.state.weapon) {\r\n            this.updateDamageValue();\r\n        }\r\n\r\n        const content = [\r\n            <div className={currentStyle.itemName}>{weapon.name}</div>,\r\n            <div className={currentStyle.itemVariable}>{weapon.getFinalValueForType(DeterminantType.INITIATIVE)}</div>,\r\n            <div className={currentStyle.itemVariable}>{weapon.getFinalValueForType(DeterminantType.BATTLE)}</div>,\r\n            <div className={currentStyle.damageText}>{this.state.damageText}</div>,\r\n            <div className={currentStyle.itemVariable}>{weapon.getFinalValueForType(DeterminantType.PARRY)}</div>];\r\n\r\n        return disabled ?\r\n            <div className={currentStyle.itemContainer}>{content}</div> :\r\n            <div className={currentStyle.itemContainer} onContextMenu={this.onRightClick(name, weapon)}>{content}</div>;\r\n    }\r\n}\r\n\r\nexport default withStyles(weaponElementStyle)(WeaponElement)","import {Menu, MenuItem, Tooltip} from \"@material-ui/core\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport PropTypes from 'prop-types';\r\nimport React, {Component} from 'react';\r\nimport {withTranslation} from \"react-i18next\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport DeterminantService from \"../../client/DeterminantService\";\r\nimport GearService from \"../../client/GearService\";\r\nimport MagicService from \"../../client/MagicService\";\r\nimport FrontCharacterSheet from \"../../img/A.png\";\r\nimport Armor from \"../../model/crafting/Armor\";\r\nimport Item from \"../../model/crafting/Item\";\r\nimport MeleeWeapon from \"../../model/crafting/MeleeWeapon\";\r\nimport RangedWeapon from \"../../model/crafting/RangedWeapon\";\r\nimport Animal from \"../../model/creature/Animal\";\r\nimport Character from \"../../model/creature/Character\";\r\nimport EyeColor from \"../../model/creature/EyeColor\";\r\nimport {GenderEntityName} from \"../../model/creature/Gender\";\r\nimport HairColor from \"../../model/creature/HairColor\";\r\nimport PhysicalFeature from \"../../model/creature/PhysicalFeature\";\r\nimport Skill from \"../../model/knowledge/Skill\";\r\nimport Spell from \"../../model/knowledge/Spell\";\r\nimport Profession from \"../../model/professions/Profession\";\r\nimport ProfessionClass from \"../../model/professions/ProfessionClass\";\r\nimport Currency from \"../../model/world/Currency\";\r\nimport Language from \"../../model/world/Language\";\r\nimport Nation from \"../../model/world/Nation\";\r\nimport Race from \"../../model/world/Race\";\r\nimport Religion from \"../../model/world/Religion\";\r\nimport ItemService from \"../../service/ItemService\";\r\nimport MoneyService from \"../../service/MoneyService\";\r\nimport ProfessionService from \"../../service/ProfessionService\";\r\nimport {State} from \"../../state/State\";\r\nimport {Collections, removeFrom} from \"../../util/Collections\";\r\nimport AnimalElement from \"./field/AnimalElement\";\r\nimport ArmorCalculationsComponent from \"./field/ArmorCalculationsComponent\";\r\nimport ArmorElement from \"./field/ArmorElement\";\r\nimport ItemElement from \"./field/ItemElement\";\r\nimport MoneyElement from \"./field/MoneyElement\";\r\nimport PersonalDeterminantsField from \"./field/PersonalDeterminantsField\";\r\nimport RangedWeaponElement from \"./field/RangedWeaponElement\";\r\nimport SelectableList from \"./field/SelectableList\";\r\nimport SimpleEntitySelect from \"./field/SimpleEntitySelect\";\r\nimport SimpleEnumSelect from \"./field/SimpleEnumSelect\";\r\nimport SimpleList from \"./field/SimpleList\";\r\nimport SimpleTextField, {TextFieldType} from \"./field/SimpleTextField\";\r\nimport SpeedComponent from \"./field/SpeedComponent\";\r\nimport SpellElement from \"./field/SpellElement\";\r\nimport SpellSchoolList from \"./field/SpellSchoolList\";\r\nimport WeaponElement from \"./field/WeaponElement\";\r\n\r\nconst styles = () => ({\r\n  root: {\r\n    marginTop: 5,\r\n    background: `url(${FrontCharacterSheet})`,\r\n    fontFamily: 'wfrp',\r\n    fontSize: '24px',\r\n    backgroundSize: 'cover',\r\n    height: '1231px',\r\n    width: '1800px',\r\n    display: 'flex'\r\n  },\r\n\r\n  genderSelect: {\r\n    display: 'inline-block', width: 85,\r\n  },\r\n});\r\n\r\nclass CharacterSheetForm extends Component {\r\n  determinantService: DeterminantService = new DeterminantService();\r\n  state = {anchorEl: null, currentElement: null,\r\n    generateStatsAction: () => {\r\n      const race = State.data.entity.race;\r\n      race && this.determinantService.rollForRace(race);\r\n    }};\r\n\r\n  handleClose = () => {\r\n    this.setState({anchorEl: null, showMenu: ''})\r\n  };\r\n\r\n  render() {\r\n    const {classes, t} = this.props;\r\n    const entity    = State.data.entity;\r\n\r\n    return <div className={classes.root}>\r\n\r\n      {/*page one*/}\r\n      <div style={{width: 900, height: 1230}}>\r\n\r\n        {/*basic data*/}\r\n        <div style={{paddingTop: 33, paddingLeft: 33, width: 860}}>\r\n          <SimpleTextField name={'name'} customStyle={{width: 200}}/>\r\n          <SimpleEntitySelect name={Race.entityName} customStyle={{width: 140, paddingLeft: 20}} options={State.data.currentRealmData.races}/>\r\n          <SimpleEnumSelect name={GenderEntityName} className={classes.genderSelect}/>\r\n          <SimpleEntitySelect name={ProfessionClass.entityName} customStyle={{width: 240}}/>\r\n          <SimpleEntitySelect name={Character.entityName} propName={'personality'} customStyle={{width: 148}}/>\r\n        </div>\r\n        <div style={{paddingTop: 30, paddingLeft: 33, width: 860}}>\r\n          <SimpleTextField name={'age'} variant={TextFieldType.INT} customStyle={{width: 80}}/>\r\n          <SimpleTextField name={'height'} variant={TextFieldType.INT} customStyle={{width: 100, paddingLeft: 10}}/>\r\n          <SimpleTextField name={'weight'} variant={TextFieldType.FLOAT} customStyle={{width: 90, paddingLeft: 20}}/>\r\n          <SimpleEntitySelect name={HairColor.entityName} customStyle={{width: 110, paddingLeft: 10}}/>\r\n          <SimpleEntitySelect name={EyeColor.entityName} customStyle={{width: 90, paddingLeft: 0}}/>\r\n          <SimpleEntitySelect name={PhysicalFeature.entityName} propName={'physicalFeatures'} multi customStyle={{width: 280, paddingLeft: 60, maxHeight: 70, position: 'relative', top: -30, fontSize: '14px'}}/>\r\n        </div>\r\n\r\n        {/*profession*/}\r\n        <div style={{paddingTop: 30, paddingLeft: 33, width: 860, height: 40, display: 'flex'}}>\r\n          <SimpleEntitySelect name={Profession.entityName} propName={'currentProfession'} options={ProfessionService.getProfessions()} onChange={ProfessionService.updateProfession} customStyle={{width: 235, paddingLeft: 0}}/>\r\n          <SimpleBar style={{width: 360, height: 40}}>\r\n            <SimpleList name={'professions'} onRemove={ProfessionService.removeProfessionFromHistory} style={{display: 'inline-block', width: 350, fontSize: '14px'}}/>\r\n          </SimpleBar>\r\n          <SimpleBar style={{width: 200, height: 40}}>\r\n            <SimpleList name={'outgoingProfessions'} data={ProfessionService.nextProfessions()} onRemove={ProfessionService.removeProfessionFromHistory} style={{display: 'inline-block', width: 200, height: 40, fontSize: '14px'}}/>\r\n          </SimpleBar>\r\n        </div>\r\n\r\n        {/*determinants*/}\r\n        <div style={{paddingTop: 43, width: 890, display: 'flex'}}>\r\n          <div style={{width: 230, height: 50}} onContextMenu={event => {\r\n            event.preventDefault();\r\n            this.setState({anchorEl: event.target, currentElement: ['generateStats']});\r\n          }}/>\r\n          <PersonalDeterminantsField style={{width: 650}}/>\r\n        </div>\r\n\r\n        {/*skills and equipment*/}\r\n        <div style={{paddingTop: 10, paddingLeft: 20, width: 860, display: 'flex'}}>\r\n\r\n          {/*gear*/}\r\n          <div style={{paddingTop: 0, paddingLeft: 0, width: 430}}>\r\n            <SelectableList style={{width: 400, height: 220, paddingLeft: 40, paddingTop: 10}} listStyle={{height: 180}} name={MeleeWeapon.entityName} propName={'meleeWeapons'}>\r\n              {entity.meleeWeapons.map(weapon => <WeaponElement key={weapon.name} name={'meleeWeapons'} weapon={weapon}/>)}\r\n            </SelectableList>\r\n            <SelectableList style={{width: 400, height: 230, paddingLeft: 30, paddingTop: 10}} listStyle={{height: 180}} name={RangedWeapon.entityName} onGearAdd={GearService.addPersonalRangedWeapon}>\r\n              {entity.rangedWeapons.map(weapon => <RangedWeaponElement key={weapon.rangedWeapon.name} name={'meleeWeapons'} pWep={weapon}/>)}\r\n            </SelectableList>\r\n            <SelectableList style={{width: 400, height: 220, paddingLeft: 20}} name={Armor.entityName}>\r\n              {entity.armor.map(armor => <ArmorElement key={armor.name} name={'meleeWeapons'} armor={armor}/>)}\r\n            </SelectableList>\r\n          </div>\r\n\r\n          {/*skills and armor*/}\r\n          <div style={{paddingTop: 0, paddingLeft: 10, width: 210}}>\r\n\r\n            {/*skills*/}\r\n            <SelectableList style={{width: 200, height: 360, paddingLeft: 0, paddingTop: 10}} listStyle={{height: 300}} name={Skill.entityName} propName={'skills'} data={Collections.except(State.data.skill, entity.skills)}>\r\n              {entity.skills.map(skill => <Tooltip title={skill.description}><p key={skill.name} style={{margin: 0}}\r\n                                             onContextMenu={event => {\r\n                                               event.preventDefault();\r\n                                               State.updateEntity({\r\n                                                                    skills: Collections.removeElement(\r\n                                                                        entity.skills,\r\n                                                                        skill)\r\n                                                                  });\r\n                                             }}>{skill.name}</p></Tooltip>)}\r\n            </SelectableList>\r\n\r\n            {/*armor values*/}\r\n            <ArmorCalculationsComponent/>\r\n          </div>\r\n\r\n          {/*magic schools*/}\r\n          <SpellSchoolList/>\r\n        </div>\r\n      </div>\r\n\r\n      {/*page two*/}\r\n      <div style={{width: 900, height: 1230}}>\r\n\r\n        {/*spells*/}\r\n        <div style={{paddingTop: 0, paddingLeft: 20, width: 840}}>\r\n          <div style={{paddingTop: 0, paddingLeft: 20, width: 840, display: 'flex'}}>\r\n            <SelectableList style={{width: 630}} listStyle={{height: 220}} name={Spell.entityName} propName={'spells'} data={MagicService.getRelevantSpells()}>\r\n              {entity.spells.map(spell => <SpellElement spell={spell}/>)}\r\n            </SelectableList>\r\n\r\n            {/*fate and mana*/}\r\n            <div style={{width: 200}}>\r\n              <SimpleTextField name={'fatePoints'}  variant={TextFieldType.INT} customStyle={{width: '100%', height: 50, paddingTop: 55}}/>\r\n              <SimpleTextField name={'mana'}  variant={TextFieldType.INT} customStyle={{width: '100%', height: 50, paddingTop: 30}}/>\r\n              <SimpleTextField name={'currentMana'}  variant={TextFieldType.INT} customStyle={{width: '100%', height: 50, paddingTop: 35}}/>\r\n            </div>\r\n          </div>\r\n\r\n          {/*personal belongings*/}\r\n          <div style={{display: 'flex'}}>\r\n            <div style={{width: 300, paddingTop: 20}}>\r\n\r\n              {/*equipment*/}\r\n              <SelectableList style={{width: 300}} listStyle={{height: 370}} name={Item.entityName} onGearAdd={ItemService.addItemToInventory}>\r\n                {entity.inventory.map(eq => <ItemElement key={eq.item.name} inventory={eq}/>)}\r\n              </SelectableList>\r\n              <div style={{paddingLeft: 200}}>{ItemService.inventoryWeight()} kg</div>\r\n\r\n              {/*money*/}\r\n              <SelectableList style={{width: 285}} listStyle={{height: 150}} name={Currency.entityName} data={State.data.currentRealmData.currencies} onGearAdd={MoneyService.addMoney}>\r\n                {entity.money.map(money => <MoneyElement key={money.currency.name} money={money}/>)}\r\n              </SelectableList>\r\n\r\n            </div>\r\n\r\n            {/*other description*/}\r\n            <div>\r\n              <SpeedComponent/>\r\n\r\n              {/*personality*/}\r\n              <div style={{width: 350, height: 160, paddingTop: 10, display: 'flex'}}>\r\n\r\n                {/*languages*/}\r\n                <SelectableList style={{width: 100, paddingTop: 15}} listStyle={{height: 100}} name={Language.entityName} propName={'languages'} data={State.data.currentRealmData.languages}>\r\n                  {entity.languages.map(lang => <div onContextMenu={event => {\r\n                    event.preventDefault();\r\n                    State.updateEntity({languages: removeFrom(entity.languages, lang)});\r\n                  }}>{lang.name}</div>)}\r\n                </SelectableList>\r\n\r\n                {/*health*/}\r\n                <SimpleTextField name={'health'} variant={TextFieldType.TEXT} multiline customStyle={{width: 130, height: 100, alignSelf: 'flex-end'}}/>\r\n                <SimpleTextField name={'sanityPoints'} variant={TextFieldType.INT} customStyle={{width: 100, paddingLeft: 10}}/>\r\n              </div>\r\n\r\n              {/*history*/}\r\n              <div style={{width: 350}}>\r\n                <SimpleEntitySelect name={Nation.entityName} customStyle={{width: 170, height:50, marginLeft: 170, marginTop: 50}} options={State.data.currentRealmData.nations}/>\r\n                <SimpleTextField name={'parents'} variant={TextFieldType.TEXT} customStyle={{width: 120, height: 35, marginTop: 0, marginLeft: 220}}/>\r\n                <SimpleTextField name={'family'} variant={TextFieldType.TEXT} customStyle={{width: 220, height: 80, marginLeft: 110}}/>\r\n              </div>\r\n\r\n              {/*religion*/}\r\n              <div style={{width: 350, display: 'flex'}}>\r\n                <SimpleTextField name={'socialLevel'} variant={TextFieldType.TEXT} customStyle={{width: 80, height: 60, marginTop: 10, marginLeft: 110}}/>\r\n                <SimpleEntitySelect name={Religion.entityName} customStyle={{width: 150, marginTop: 35, marginLeft: 5}} data={State.data.currentRealmData.religions}/>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            {/*experience*/}\r\n            <div style={{marginLeft: 20, marginTop: 50}}>\r\n              <div style={{marginTop: 20}}>aktualnie:</div>\r\n              <SimpleTextField name={'experience'} variant={TextFieldType.INT} customStyle={{width: 150, height: 150}}/>\r\n              <div style={{marginTop: 20}}>całkowicie:</div>\r\n              <SimpleTextField name={'totalExperience'} variant={TextFieldType.INT} customStyle={{width: 150, height: 150}}/>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          {/*animals*/}\r\n          <SelectableList style={{width: 700}} listStyle={{height: 100}} name={Animal.entityName} propName={'animals'}>\r\n            {entity.animals.map(animal => <AnimalElement animal={animal}/>)}\r\n          </SelectableList>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <Menu anchorEl={this.state.anchorEl}\r\n            open={this.state.currentElement && this.state.anchorEl !== null}\r\n            onClose={this.handleClose}>\r\n        {\r\n          this.state.currentElement && this.state.currentElement.map(elementName =>\r\n            <MenuItem onClick={() => {\r\n              this.handleClose();\r\n              this.state[elementName + 'Action']();\r\n            }}>{t(elementName)}</MenuItem>\r\n          )\r\n        }\r\n      </Menu>\r\n    </div>;\r\n  }\r\n}\r\n\r\nCharacterSheetForm.propTypes = {\r\n  classes: PropTypes.object\r\n};\r\n\r\nexport default withStyles(styles)(withTranslation()(CharacterSheetForm));","import Add from \"@material-ui/icons/Add\";\r\nimport {withStyles} from \"@material-ui/styles\";\r\nimport React, {Component} from \"react\";\r\nimport {ModifierType} from \"../../../model/rule/Modifier\";\r\n\r\nconst fieldStyle = {\r\n    fieldContainer: {\r\n        position: 'relative'\r\n    },\r\n    extension: {\r\n        position: 'absolute',\r\n        top: '-10px',\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    checkboxContainer: {\r\n        position: 'absolute',\r\n        right: '5px',\r\n        display: 'flex',\r\n        flexFlow: 'row',\r\n        flexWrap: 'wrap',\r\n        maxWidth: 40,\r\n        zIndex: 1\r\n    },\r\n};\r\n\r\nconst ExtMark = props => <Add style={{fontSize: 14, margin: -2}} {...props}/>;\r\n\r\nclass ProfessionExtensionField extends Component {\r\n    render() {\r\n        const {\r\n            ext,\r\n            classes,\r\n            customClassName,\r\n            ...other\r\n        } = this.props;\r\n\r\n        let professionValue = '0';\r\n        let extended = [];\r\n\r\n        if (ext) {\r\n            extended = ext.getExperienceExtensions();\r\n            const professionModifier = ext ? ext.modifiers.find(mod => mod.type === ModifierType.PROFESSION) : null;\r\n\r\n            if (professionModifier) {\r\n              professionValue = professionModifier.value;\r\n            }\r\n        }\r\n\r\n        return <div className={`${classes.fieldContainer} ${customClassName}`} {...other}>\r\n            <p className={classes.extension}>{'+' + professionValue}</p>\r\n            <div className={classes.checkboxContainer}>\r\n                {extended.map(mod => <ExtMark key={'' + mod.value + '-' + mod.type}/>)}\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default withStyles(fieldStyle)(ProfessionExtensionField);","import {withStyles} from \"@material-ui/styles\";\r\nimport React, {Component} from \"react\";\r\nimport CreatureDeterminants from \"../../../model/creature/CreatureDeterminants\";\r\nimport {DeterminantType} from \"../../../model/rule/Determinant\";\r\nimport {State} from \"../../../state/State\";\r\nimport {PersonalDeterminantFieldStyle} from \"./PersonalDeterminantsField\";\r\nimport ProfessionExtensionView from \"./ProfessionExtensionView\";\r\n\r\nclass PersonalDeterminantsField extends Component {\r\n    render() {\r\n        const {classes, ...other} = this.props;\r\n        const person = State.data.entity;\r\n        const determinants: CreatureDeterminants = person.determinants;\r\n        const speed = determinants.findDeterminant(DeterminantType.SPEED);\r\n        const battle = determinants.findDeterminant(DeterminantType.BATTLE);\r\n        const shooting = determinants.findDeterminant(DeterminantType.SHOOTING);\r\n        const strength = determinants.findDeterminant(DeterminantType.STRENGTH);\r\n        const durability = determinants.findDeterminant(DeterminantType.DURABILITY);\r\n        const health = determinants.findDeterminant(DeterminantType.HEALTH);\r\n        const attack = determinants.findDeterminant(DeterminantType.ATTACK);\r\n        const initiative = determinants.findDeterminant(DeterminantType.INITIATIVE);\r\n        const dexterity = determinants.findDeterminant(DeterminantType.DEXTERITY);\r\n        const leaderSkills = determinants.findDeterminant(DeterminantType.LEADER_SKILLS);\r\n        const intelligence = determinants.findDeterminant(DeterminantType.INTELLIGENCE);\r\n        const control = determinants.findDeterminant(DeterminantType.CONTROL);\r\n        const will = determinants.findDeterminant(DeterminantType.WILL);\r\n        const charisma = determinants.findDeterminant(DeterminantType.CHARISMA);\r\n\r\n        return <div {...other}>\r\n            <div className={classes.row1} style={{paddingLeft: 15}}>\r\n                <div className={classes.firstInRow}>{speed.value}</div>\r\n                <div className={classes.otherInRow}>{battle.value}</div>\r\n                <div className={classes.otherInRow}>{shooting.value}</div>\r\n                <div className={classes.otherInRow}>{strength.value}</div>\r\n                <div className={classes.otherInRow}>{durability.value}</div>\r\n                <div className={classes.otherInRow2}>{health.value}</div>\r\n                <div className={classes.otherInRow}>{initiative.value}</div>\r\n                <div className={classes.otherInRow2}>{attack.value}</div>\r\n                <div className={classes.otherInRow2}>{dexterity.value}</div>\r\n                <div className={classes.otherInRow2}>{leaderSkills.value}</div>\r\n                <div className={classes.otherInRow2}>{intelligence.value}</div>\r\n                <div className={classes.otherInRow2}>{control.value}</div>\r\n                <div className={classes.otherInRow2}>{will.value}</div>\r\n                <div className={classes.otherInRow}>{charisma.value}</div>\r\n            </div>\r\n            <div className={classes.row2}>\r\n                <ProfessionExtensionView ext={speed} customClassName={classes.firstInRow}/>\r\n                <ProfessionExtensionView ext={battle} customClassName={classes.otherInRow}/>\r\n                <ProfessionExtensionView ext={shooting} customClassName={classes.otherInRow}/>\r\n                <ProfessionExtensionView ext={strength} customClassName={classes.otherInRow}/>\r\n                <ProfessionExtensionView ext={durability} customClassName={classes.otherInRow}/>\r\n                <ProfessionExtensionView ext={health} customClassName={classes.otherInRow2}/>\r\n                <ProfessionExtensionView ext={initiative} customClassName={classes.otherInRow}/>\r\n                <ProfessionExtensionView ext={attack} customClassName={classes.otherInRow2}/>\r\n                <ProfessionExtensionView ext={dexterity} customClassName={classes.otherInRow2}/>\r\n                <ProfessionExtensionView ext={leaderSkills} customClassName={classes.otherInRow2}/>\r\n                <ProfessionExtensionView ext={intelligence} customClassName={classes.otherInRow2}/>\r\n                <ProfessionExtensionView ext={control} customClassName={classes.otherInRow2}/>\r\n                <ProfessionExtensionView ext={will} customClassName={classes.otherInRow2}/>\r\n                <ProfessionExtensionView ext={charisma} customClassName={classes.otherInRow}/>\r\n            </div>\r\n            <div className={classes.row3}>\r\n                <p className={`${classes.lastRowChild} ${classes.firstInRow} `}>{speed.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow} `}>{battle.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow} `}>{shooting.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow} `}>{strength.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow} `}>{durability.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{health.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow} `}>{initiative.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{attack.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{dexterity.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{leaderSkills.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{intelligence.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{control.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow2}`}>{will.calculateExperienceValue()}</p>\r\n                <p className={`${classes.lastRowChild} ${classes.otherInRow} `}>{charisma.calculateExperienceValue()}</p>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default withStyles(PersonalDeterminantFieldStyle)(PersonalDeterminantsField);","import React, {Component} from \"react\";\r\n\r\nclass RangedWeaponElement extends Component {\r\n    render() {\r\n        const {\r\n            pWep,\r\n        } = this.props;\r\n        const weapon = pWep.rangedWeapon;\r\n        const weaponType = weapon.type;\r\n        const prepareTime = weaponType.prepareTime.toString();\r\n\r\n        return <div style={{display: 'flex', flexDirection: 'column'}}>\r\n            <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                <div style={{width: 190}}>{weapon.name}</div>\r\n                <div style={{width: 38, textAlign: 'center'}}>{weaponType.minimumRange}</div>\r\n                <div style={{width: 38, textAlign: 'center'}}>{weaponType.mediumRange}</div>\r\n                <div style={{width: 38, textAlign: 'center'}}>{weaponType.maximumRange}</div>\r\n                <div style={{width: 38, textAlign: 'center'}}>{weaponType.damage.value}</div>\r\n                <div style={{width: 38, textAlign: 'center'}}>{prepareTime}</div>\r\n            </div>\r\n            <div style={{width: 170, height: 45, marginLeft: 10, display: 'flex'}}>\r\n                <div style={{width: 140, height: 45}}>{pWep.ammunition && pWep.ammunition.name}</div>\r\n                <div>{pWep.ammunition ? <div style={{width: 40}}>{pWep.ammunitionAmount}</div> : <div/>}</div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default RangedWeaponElement;","import React, {Component} from 'react';\r\nimport SimpleBar from 'simplebar-react';\r\n\r\nclass SimpleListView extends Component {\r\n  render() {\r\n    const {children, data, listStyle, ...other} = this.props;\r\n\r\n    return <div {...other}>\r\n      <SimpleBar style={{...{height: '100%', width: '100%'}, ...listStyle}}>\r\n        {children}\r\n        {data && data.map(element => <div>{element.name || element}</div>)}\r\n      </SimpleBar>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default SimpleListView;","import {Menu, MenuItem, Tooltip} from \"@material-ui/core\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport PropTypes from 'prop-types';\r\nimport React, {Component} from 'react';\r\nimport {withTranslation} from \"react-i18next\";\r\nimport DeterminantService from \"../../client/DeterminantService\";\r\nimport FrontCharacterSheet from \"../../img/A.png\";\r\nimport Animal from \"../../model/creature/Animal\";\r\nimport ItemService from \"../../service/ItemService\";\r\nimport ProfessionService from \"../../service/ProfessionService\";\r\nimport {State} from \"../../state/State\";\r\nimport AnimalElement from \"./field/AnimalElement\";\r\nimport ArmorCalculationsComponent from \"./field/ArmorCalculationsComponent\";\r\nimport ArmorElement from \"./field/ArmorElement\";\r\nimport ItemElement from \"./field/ItemElement\";\r\nimport PersonalDeterminantsView from \"./field/PersonalDeterminantsView\";\r\nimport RangedWeaponElementView from \"./field/RangedWeaponElementView\";\r\nimport SimpleList from \"./field/SimpleList\";\r\nimport SimpleListView from \"./field/SimpleListView\";\r\nimport SpeedComponent from \"./field/SpeedComponent\";\r\nimport SpellElement from \"./field/SpellElement\";\r\nimport SpellSchoolList from \"./field/SpellSchoolList\";\r\nimport WeaponElement from \"./field/WeaponElement\";\r\n\r\nconst styles = () => ({\r\n  root: {\r\n    marginTop: 5,\r\n    background: `url(${FrontCharacterSheet})`,\r\n    fontFamily: 'wfrp',\r\n    fontSize: '24px',\r\n    backgroundSize: 'cover',\r\n    height: '1231px',\r\n    width: '1800px',\r\n    display: 'flex'\r\n  },\r\n\r\n  genderSelect: {\r\n    display: 'inline-block', width: 85,\r\n  },\r\n});\r\n\r\nclass CharacterSheetView extends Component {\r\n  determinantService: DeterminantService = new DeterminantService();\r\n  state = {anchorEl: null, currentElement: null,\r\n    generateStatsAction: () => {\r\n      const race = State.data.entity.race;\r\n      race && this.determinantService.rollForRace(race);\r\n    }};\r\n\r\n  handleClose = () => {\r\n    this.setState({anchorEl: null, showMenu: ''})\r\n  };\r\n\r\n  listToDivs = (array: Object[]) => {\r\n    return array ? array.map(e => <div>{e.name}</div>) : <div/>\r\n  };\r\n\r\n\r\n  render() {\r\n    const {classes, t, editable} = this.props;\r\n    const entity    = State.data.entity;\r\n\r\n    return <div className={classes.root}>\r\n\r\n      {/*page one*/}\r\n      <div style={{width: 900, height: 1230}}>\r\n\r\n        {/*basic data*/}\r\n        <div style={{paddingTop: 40, paddingLeft: 33, width: 860, display: 'flex'}}>\r\n          <div style={{width: 200}}>{entity.name}</div>\r\n          <div style={{width: 140, paddingLeft: 20}}>{entity.race && entity.race.name}</div>\r\n          <div style={{display: 'inline-block', width: 85}}>{entity.gender === 'MALE' ? 'M' : 'K'}</div>\r\n          <div style={{width: 240}}>{entity.professionClass && entity.professionClass.name}</div>\r\n          <div style={{width: 148}}>{t(entity.personality && entity.personality.name)}</div>\r\n        </div>\r\n        <div style={{paddingTop: 40, paddingLeft: 33, width: 860, display: 'flex'}}>\r\n          <div style={{width: 80, paddingLeft: 5}}>{entity.age}</div>\r\n          <div style={{width: 100, paddingLeft: 10}}>{entity.height} cm</div>\r\n          <div style={{width: 90, paddingLeft: 20}}>{entity.weight} kg</div>\r\n          <div style={{width: 110, paddingLeft: 10}}>{entity.hairColor && entity.hairColor.name}</div>\r\n          <div style={{width: 90, paddingLeft: 0}}>{entity.eyeColor && entity.eyeColor.name}</div>\r\n          <div style={{width: 265, paddingLeft: 70, maxHeight: 70, position: 'relative', top: -30, fontSize: '14px'}}>{this.listToDivs(entity.physicalFeatures)}</div>\r\n        </div>\r\n\r\n        {/*profession*/}\r\n        <div style={{paddingTop: 40, paddingLeft: 33, width: 860, display: 'flex'}}>\r\n          <div style={{width: 240, paddingLeft: 10}}>{entity.currentProfession && entity.currentProfession.name}</div>\r\n          <SimpleListView data={entity.professions} style={{display: 'inline-block', width: 350, fontSize: '14px'}}/>\r\n          <SimpleList name={'outgoingProfessions'} data={ProfessionService.nextProfessions()} onRemove={ProfessionService.removeProfessionFromHistory} style={{display: 'inline-block', width: 200, height: 40, fontSize: '14px'}}/>\r\n        </div>\r\n\r\n        {/*determinants*/}\r\n        <div style={{paddingTop: 50, width: 890, display: 'flex'}}>\r\n          <div style={{width: 230, height: 50}}/>\r\n          <PersonalDeterminantsView style={{width: 650}}/>\r\n        </div>\r\n\r\n        {/*skills and equipment*/}\r\n        <div style={{paddingTop: 0, paddingLeft: 20, width: 860, display: 'flex'}}>\r\n\r\n          {/*gear*/}\r\n          <div style={{paddingTop: 0, paddingLeft: 0, width: 430}}>\r\n            <SimpleListView style={{width: 400, height: 170, paddingLeft: 40, paddingTop: 60}}>\r\n              {entity.meleeWeapons.map(weapon => <WeaponElement key={weapon.name} name={'meleeWeapons'} weapon={weapon} disabled/>)}\r\n            </SimpleListView>\r\n            <SimpleListView style={{width: 400, height: 180, paddingLeft: 30, paddingTop: 60}}>\r\n              {entity.rangedWeapons.map(weapon => <RangedWeaponElementView key={weapon.rangedWeapon.name} pWep={weapon}/>)}\r\n            </SimpleListView>\r\n            <SimpleListView style={{width: 400, height: 230, paddingLeft: 20, paddingTop: 50}}>\r\n              {entity.armor.map(armor => <ArmorElement key={armor.name} name={'meleeWeapons'} armor={armor} disabled/>)}\r\n            </SimpleListView>\r\n          </div>\r\n\r\n          {/*skills and armor*/}\r\n          <div style={{paddingTop: 0, paddingLeft: 10, width: 210}}>\r\n\r\n            {/*skills*/}\r\n            <SimpleListView style={{width: 200, height: 315, paddingLeft: 0, paddingTop: 60}}>\r\n              {entity.skills.map(skill => <Tooltip title={skill.description}><p key={skill.name} style={{margin: 0}}>{skill.name}</p></Tooltip>)}\r\n            </SimpleListView>\r\n\r\n            {/*armor values*/}\r\n            <ArmorCalculationsComponent/>\r\n          </div>\r\n\r\n          {/*magic schools*/}\r\n          <SimpleListView style={{height: 350, width: 200, paddingTop: 60}} listStyle={{height: 250, width: '100%', overflow: 'auto'}}>\r\n            {entity.spellSchools.map(spellSchoolLevel =>\r\n                                         <p key={SpellSchoolList.spellSchoolLevelText(spellSchoolLevel)} style={{margin: 0}}>\r\n                                           {SpellSchoolList.spellSchoolLevelText(spellSchoolLevel)}\r\n                                         </p>)}\r\n          </SimpleListView>\r\n        </div>\r\n      </div>\r\n\r\n      {/*page two*/}\r\n      <div style={{width: 900, height: 1230}}>\r\n\r\n        {/*spells*/}\r\n        <div style={{paddingTop: 0, paddingLeft: 20, width: 840}}>\r\n          <div style={{paddingTop: 0, paddingLeft: 20, width: 840, display: 'flex'}}>\r\n            <SimpleListView style={{width: 630, height: 170, paddingTop: 50}}>\r\n              {entity.spells.map(spell => <SpellElement spell={spell} disabled/>)}\r\n            </SimpleListView>\r\n\r\n            {/*fate and mana*/}\r\n            <div style={{width: 200}}>\r\n              <div style={{width: '100%', height: 50, paddingTop: 60, textAlign: 'center'}}>{entity.fatePoints}</div>\r\n              <div style={{width: '100%', height: 50, paddingTop: 35, textAlign: 'center'}}>{entity.mana}</div>\r\n              <div style={{width: '100%', height: 50, paddingTop: 40, textAlign: 'center'}}>{entity.currentMana}</div>\r\n            </div>\r\n          </div>\r\n\r\n          {/*personal belongings*/}\r\n          <div style={{display: 'flex'}}>\r\n            <div style={{width: 300, paddingTop: 20}}>\r\n\r\n              {/*equipment*/}\r\n              <SimpleListView style={{width: 300, height: 368, paddingTop: 30}}>\r\n                {entity.inventory.map(eq => <div key={eq.id} style={{width: 290, display: 'flex'}}>\r\n                  <div style={{width: 150, minWidth: 150}}>{eq.item.name}</div>\r\n                  <div style={{width: 70, textAlign: 'center'}}>{ItemElement.calculateWeight(eq)} kg</div>\r\n                  <div style={{width: 50, textAlign: 'center'}}>{eq.amount}</div>\r\n                </div>)}\r\n              </SimpleListView>\r\n              <div style={{paddingLeft: 200}}>{ItemService.inventoryWeight()} kg</div>\r\n\r\n              {/*money*/}\r\n              <SimpleListView style={{width: 285, height: 150, paddingTop: 50}}>\r\n                {entity.money.map(money =>\r\n                                      <div style={{display: 'flex'}}>\r\n                                        <div style={{width: 150}}>{money.currency.name}</div>\r\n                                        <div style={{width: 35, textAlign: 'center'}}>{money.amount.gold}</div>\r\n                                        <div style={{width: 35, textAlign: 'center'}}>{money.amount.silver}</div>\r\n                                        <div style={{width: 50, textAlign: 'center'}}>{money.amount.lead}</div>\r\n                                      </div>\r\n                )}\r\n              </SimpleListView>\r\n\r\n            </div>\r\n\r\n            {/*other description*/}\r\n            <div>\r\n              <SpeedComponent/>\r\n\r\n              {/*personality*/}\r\n              <div style={{width: 350, height: 160, paddingTop: 55, display: 'flex'}}>\r\n\r\n                {/*languages*/}\r\n                <SimpleListView style={{width: 90, height: 100}}>\r\n                  {entity.languages.map(lang => <div>{lang.name}</div>)}\r\n                </SimpleListView>\r\n\r\n                {/*health*/}\r\n                <div style={{width: 130, height: 100, paddingLeft: 10}}>{entity.health}</div>\r\n                <div style={{width: 100, paddingLeft: 10, textAlign: 'center'}}>{entity.sanityPoints}</div>\r\n              </div>\r\n\r\n              {/*history*/}\r\n              <div style={{width: 350}}>\r\n                <div style={{width: 170, height:50, marginLeft: 170, marginTop: 50}}>{entity.nation && entity.nation.name}</div>\r\n                <div style={{width: 120, height: 35, marginTop: 0, marginLeft: 220}}>{entity.parents}</div>\r\n                <div style={{width: 220, height: 80, marginLeft: 110}}>{entity.family}</div>\r\n              </div>\r\n\r\n              {/*religion*/}\r\n              <div style={{width: 350, display: 'flex'}}>\r\n                <div style={{width: 80, height: 60, marginTop: 10, marginLeft: 110}}>{entity.socialLevel}</div>\r\n                <div style={{width: 150, marginTop: 35, marginLeft: 5}}>{entity.religion && entity.religion.name}</div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            {/*experience*/}\r\n            <div style={{marginLeft: 20, marginTop: 50}}>\r\n              <div style={{marginTop: 20}}>aktualnie:</div>\r\n              <div style={{width: 150, height: 150}}>{entity.experience}</div>\r\n              <div style={{marginTop: 20}}>całkowicie:</div>\r\n              <div style={{width: 150, height: 150}}>{entity.totalExperience}</div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          {/*animals*/}\r\n          <SimpleListView style={{width: 700}} listStyle={{height: 100}} name={Animal.entityName} propName={'animals'}>\r\n            {entity.animals.map(animal => <AnimalElement animal={animal}/>)}\r\n          </SimpleListView>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <Menu anchorEl={this.state.anchorEl}\r\n            open={this.state.currentElement && this.state.anchorEl !== null}\r\n            onClose={this.handleClose}>\r\n        {\r\n          this.state.currentElement && this.state.currentElement.map(elementName =>\r\n            <MenuItem onClick={() => {\r\n              this.handleClose();\r\n              this.state[elementName + 'Action']();\r\n            }}>{t(elementName)}</MenuItem>\r\n          )\r\n        }\r\n      </Menu>\r\n    </div>;\r\n  }\r\n}\r\n\r\nCharacterSheetView.propTypes = {\r\n  classes: PropTypes.object\r\n};\r\n\r\nexport default withStyles(styles)(withTranslation()(CharacterSheetView));","import {TextField} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {State} from \"../state/State\";\r\nimport ActionTimeField from \"./field/ActionTimeField\";\r\nimport BlueprintSelect from \"./field/BlueprintSelect\";\r\nimport DeterminantField from \"./field/DeterminantField\";\r\nimport EntitySelect from \"./field/EntitySelect\";\r\nimport EnumSelect from \"./field/EnumSelect\";\r\nimport IntegerField from \"./field/IntegerField\";\r\nimport ModifierField from \"./field/ModifierField\";\r\nimport PriceField from \"./field/PriceField\";\r\nimport RaceDeterminantsField from \"./field/RaceDeterminantsField\";\r\nimport FormFieldData from \"./FormFieldData\";\r\nimport {FormFieldType} from \"./FormFieldType\";\r\nimport CharacterSheetForm from \"./sheet/CharacterSheetForm\";\r\nimport CharacterSheetView from \"./sheet/CharacterSheetView\";\r\n\r\nconst basicStyle = {\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    field: {\r\n        width: '100%',\r\n    }\r\n};\r\n\r\nexport const CreateFormField = (fieldData: FormFieldData, t, editable) => {\r\n    const {name, type, suggestions, toView, toModel} = fieldData;\r\n    const entity = State.data.entity;\r\n    let value = entity[name];\r\n    value = toView ? toView(value) : value;\r\n    const onUpdate = updateProperty(name, toModel);\r\n\r\n    switch (type) {\r\n        case FormFieldType.TEXT:\r\n            return <TextField key={name} label={t(name)} value={value || ''} onChange={onUpdate} style={basicStyle.field} InputProps={{readOnly: !editable}}/>;\r\n\r\n        case FormFieldType.PASSWORD:\r\n            return <TextField key={name} label={t(name)} value={value || ''} onChange={onUpdate} style={basicStyle.field} type={'password'} InputProps={{readOnly: !editable}}/>;\r\n\r\n        case FormFieldType.TEXT_AREA:\r\n            return <TextField key={name} label={t(name)} value={value || ''} onChange={onUpdate} multiline style={basicStyle.field} InputProps={{readOnly: !editable}}/>;\r\n\r\n        case FormFieldType.INTEGER:\r\n            return <IntegerField key={name} label={t(name)} value={value || ''} onChange={onUpdate} style={basicStyle.field} InputProps={{readOnly: !editable}}/>;\r\n\r\n        case FormFieldType.FLOAT:\r\n            return <TextField key={name} label={t(name)} value={value || ''} type={'number'} onChange={onUpdate} style={basicStyle.field} InputProps={{readOnly: !editable}}/>;\r\n\r\n        case FormFieldType.DETERMINANT:\r\n            return <DeterminantField key={name} name={name} value={value} editable={editable}/>;\r\n\r\n        case FormFieldType.ENTITY_SELECT:\r\n            return <EntitySelect key={name} name={name} suggestions={suggestions} editable={editable}/>;\r\n\r\n        case FormFieldType.ENTITY_COMBOBOX:\r\n            return <EntitySelect key={name} name={name} suggestions={suggestions} multi editable={editable}/>;\r\n\r\n        case FormFieldType.ENUM_SELECT:\r\n            return <EnumSelect key={name} name={name} suggestions={suggestions} value={value} editable={editable}/>;\r\n\r\n        case FormFieldType.ENUM_COMBOBOX:\r\n            return <EnumSelect key={name} name={name} suggestions={suggestions} value={value} multi editable={editable}/>;\r\n\r\n        case FormFieldType.PRICE:\r\n            return <PriceField key={name} name={name} editable={editable}/>;\r\n\r\n        case FormFieldType.ACTION_TIME:\r\n            return <ActionTimeField key={name} name={name} editable={editable}/>;\r\n\r\n        case FormFieldType.MODIFIER:\r\n            return <ModifierField id={name} name={name} value={value} editable={editable}/>;\r\n\r\n        case FormFieldType.BLUEPRINT_SELECT:\r\n            return <BlueprintSelect key={name} name={name} suggestions={suggestions} editable={editable}/>;\r\n\r\n        case FormFieldType.RACE_DETERMINANTS:\r\n            return <RaceDeterminantsField key={name}/>;\r\n\r\n        case FormFieldType.CHARACTER_SHEET:\r\n            return editable ? <CharacterSheetForm/> : <CharacterSheetView/>;\r\n    }\r\n    throw fieldData;\r\n};\r\n\r\nconst updateProperty = (propName: string, toModel: func) => event => {\r\n    const newValue = event.target ? event.target.value : event;\r\n    const value = toModel ? toModel(newValue) : newValue;\r\n    const entity = State.data.entity;\r\n    entity.updateWith({[propName]: value});\r\n    State.update({entity: entity});\r\n};\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {Cancel, KeyboardReturn, Save} from \"@material-ui/icons\";\r\nimport {func} from \"prop-types\";\r\nimport React, {Component} from \"react\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport {State} from \"../state/State\";\r\nimport AuthoritiesService from \"../user/AuthoritiesService\";\r\nimport {CreateFormField} from \"./FormFieldGenerator\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '95%',\r\n        margin: 'auto',\r\n    }\r\n});\r\n\r\nclass EntityEditor extends Component {\r\n    saveForm = () => {\r\n        const {entity, entityName} = this.props;\r\n        State.services[entityName].save(entity, () => State.showTable(entityName));\r\n    };\r\n\r\n    getFormFields = (): Component[] => {\r\n        const {entityName, t} = this.props;\r\n        const editable = AuthoritiesService.hasAuthority(entityName);\r\n        return State.formFields[entityName]\r\n            .map(field => CreateFormField(field, t, editable))\r\n            .map(component => <Grid key={component.key} item>{component}</Grid>);\r\n    };\r\n\r\n    updateEntity = (propName: string, toModel: func) => event => {\r\n        const value = toModel ? toModel(event.target.value) : event.target.value;\r\n        this.updateForm({[propName]: value})\r\n    };\r\n    updateForm = (updates) => {\r\n        this.props.entity.updateWith(updates);\r\n        this.setState({entity: this.props.entity});\r\n    };\r\n\r\n    render() {\r\n        const {entityName, classes} = this.props;\r\n        const hasAuthority = AuthoritiesService.hasAuthority(entityName);\r\n\r\n        return <Grid container direction={\"column\"} className={classes.root}>\r\n            {this.getFormFields()}\r\n            <Grid item>\r\n                { hasAuthority ?\r\n                    [\r\n                        <IconButton onClick={this.saveForm}><Save/></IconButton>,\r\n                        <IconButton onClick={() => State.showTable(entityName)}><Cancel/></IconButton>\r\n                    ] :\r\n                    <IconButton onClick={() => {\r\n                        if (State.data.afterForm) {\r\n                            State.data.afterForm()\r\n                        } else {\r\n                            State.showTable(entityName)\r\n                        }\r\n                    }}><KeyboardReturn/></IconButton>}\r\n\r\n            </Grid>\r\n        </Grid>\r\n    }\r\n}\r\n\r\nexport default withTranslation()(withStyles(styles)(EntityEditor));","import {FormFieldType} from \"../../form/FormFieldType\";\r\nimport Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport Nation from \"./Nation\";\r\n\r\nexport default class Place extends Entity {\r\n  static entityName: string = 'place';\r\n\r\n  name: string;\r\n  description: string;\r\n  nation: Nation;\r\n\r\n  updateWith(entity: *): Place {\r\n    super.updateWith(entity);\r\n    this.updateEntityProp('nation', () => new Nation());\r\n    return this;\r\n  }\r\n}\r\n\r\nRegisterEntity(Place,\r\n               [CreateColumn('name', FormFieldType.TEXT),\r\n                CreateColumn('description', FormFieldType.TEXT_AREA),\r\n                CreateColumn('nation', FormFieldType.ENTITY_SELECT),],\r\n               [CreateFormField('name', FormFieldType.TEXT),\r\n                CreateFormField('description', FormFieldType.TEXT_AREA),\r\n                CreateFormField('nation', FormFieldType.ENTITY_SELECT, Nation.entityName),]);","import {FormFieldType} from \"../form/FormFieldType\";\r\nimport Entity, {CreateColumn, RegisterEntity} from \"../model/Entity\";\r\nimport Place from \"../model/world/Place\";\r\n\r\nexport default class Picture extends Entity {\r\n  static entityName = 'picture';\r\n\r\n  name: string;\r\n  place: Place;\r\n\r\n  updateWith(entity: *): Picture {\r\n    super.updateWith(entity);\r\n    this.updateEntityProp('place', () => new Place());\r\n    return this;\r\n  }\r\n}\r\n\r\nRegisterEntity(Picture,\r\n               [CreateColumn('name', FormFieldType.TEXT),\r\n                CreateColumn('place', FormFieldType.ENTITY_SELECT)],\r\n               []);","import {Button, IconButton, TextField} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Cancel} from \"@material-ui/icons\";\r\nimport {DropzoneArea} from \"material-ui-dropzone\";\r\nimport React, {Component} from \"react\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport PictureService from \"../client/PictureService\";\r\nimport EntitySelect from \"../form/field/EntitySelect\";\r\nimport Place from \"../model/world/Place\";\r\nimport {State} from \"../state/State\";\r\nimport AuthoritiesService from \"../user/AuthoritiesService\";\r\nimport Picture from \"./Picture\";\r\n\r\nconst pictureService = new PictureService();\r\n\r\nclass PictureUploadForm extends Component {\r\n  onResponse = () => {\r\n    State.showTable(Picture.entityName);\r\n    State.services.picture.loadData();\r\n  };\r\n\r\n  upload = files => {\r\n    const selectedFile = files[0];\r\n    if (!selectedFile) {\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    pictureService.uploadPicture(formData, this.onResponse);\r\n  };\r\n\r\n  setName = event => {\r\n    const value           = event.target.value;\r\n    this.props.value.name = value;\r\n    this.setState({name: value});\r\n  };\r\n\r\n  setPlace = place => {\r\n    this.props.value.place = place;\r\n    this.setState({place: place});\r\n  };\r\n\r\n  save = () => {\r\n    const value   = this.props.value;\r\n    const updates = {id: value.id, name: value.name};\r\n    if (value.place) {\r\n      updates.placeId = value.place.id;\r\n    }\r\n\r\n    pictureService.updateMetadata(updates, this.onResponse);\r\n  };\r\n\r\n  render() {\r\n    const {value, t}   = this.props;\r\n    const hasAuthority = AuthoritiesService.hasAuthority(Picture.entityName);\r\n\r\n    return <div style={{margin: 10}}>\r\n      {value ?\r\n\r\n          <Grid container spacing={2}>\r\n            <Grid item container xs={12} alignItems={\"center\"}>\r\n              <Grid item xs={4}>\r\n                <TextField value={value ? value.name : ''} onChange={this.setName}\r\n                           disabled={!value}/>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <EntitySelect name={Place.entityName} onChange={this.setPlace} value={value.place}\r\n                              editable/>\r\n              </Grid>\r\n              <Grid item xs={2}>{hasAuthority ?\r\n                  <Button onClick={this.save}>{t('save')}</Button> :\r\n                  <div/>}\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <img src={Picture.entityName + '/' + value.id} alt={value.name}\r\n                   style={{maxWidth: '80vw', maxHeight: '50vh'}}/>\r\n            </Grid>\r\n          </Grid> :\r\n\r\n          <DropzoneArea acceptedFiles={['image/jpeg', 'image/jpg', 'image/png']}\r\n                        onChange={this.upload}/>}\r\n\r\n      <IconButton onClick={() => State.showTable(Picture.entityName)}>\r\n        <Cancel/>\r\n      </IconButton>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default withTranslation()(PictureUploadForm);","import RemoteService from \"./RemoteService\";\r\nimport Picture from \"../img/Picture\";\r\n\r\nexport default class PictureService extends RemoteService {\r\n  uploadPicture(picture: object, onResponse: VoidFunction) {\r\n    this.rawPostRequest(Picture.entityName, picture, onResponse);\r\n  }\r\n\r\n  updateMetadata(updates: object, onResponse: VoidFunction) {\r\n    this.postRequestWithoutResponse(updates, Picture.entityName, onResponse)\r\n  }\r\n}","import {FormFieldType} from \"../../form/FormFieldType\";\r\nimport Person from \"../creature/Person\";\r\nimport Entity, {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport Place from \"../world/Place\";\r\nimport Realm from \"./Realm\";\r\n\r\nexport default class Scenario extends Entity {\r\n  static entityName: string = 'scenario';\r\n\r\n  name: string;\r\n  realm: Realm;\r\n  places: Place[]   = [];\r\n  persons: Person[] = [];\r\n\r\n  updateWith(entity: Scenario): Scenario {\r\n    this.updateProp(entity, 'id');\r\n    this.updateProp(entity, 'uuid');\r\n    this.updateProp(entity, 'name');\r\n    this.updateEntityProp(entity, 'realm', () => new Realm());\r\n    this.updateEntityList(entity, 'places', () => new Place());\r\n    this.updateEntityList(entity, 'persons', () => new Person());\r\n    return this;\r\n  }\r\n}\r\n\r\nRegisterEntity(Scenario,\r\n               [CreateColumn('name', FormFieldType.TEXT),\r\n                CreateColumn('realm', FormFieldType.ENTITY_SELECT),],\r\n               [CreateFormField('name', FormFieldType.TEXT),\r\n                CreateFormField('realm', FormFieldType.ENTITY_SELECT, Realm.entityName),\r\n                CreateFormField('places', FormFieldType.ENTITY_COMBOBOX, Place.entityName),\r\n                CreateFormField('persons', FormFieldType.ENTITY_COMBOBOX, Person.entityName),]);","import Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport React, {Component} from \"react\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport Carousel, {ModalGateway} from \"react-images\";\r\nimport ScenarioService from \"../client/ScenarioService\";\r\nimport EntitySelect from \"../form/field/EntitySelect\";\r\nimport Scenario from \"../model/realm/Scenario\";\r\nimport Person from \"../model/creature/Person\";\r\nimport {State} from \"../state/State\";\r\n\r\nclass ScenarioView extends Component {\r\n  state = {\r\n    currentScenario: undefined,\r\n    images: [],\r\n    imgStyle: {maxWidth: '40vw', height: '30vh'},\r\n    viewerIsOpen: false,\r\n    currentImage: null,\r\n  };\r\n\r\n  fetchImages = scenario => {\r\n    ScenarioService.fetchPicturesForScenario(scenario, data => {\r\n      const images = data.map(num => `picture/${num}`);\r\n      this.setState({images: images})\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const entity                                         = State.data.entity;\r\n    const {images, imgStyle, viewerIsOpen, currentImage} = this.state;\r\n\r\n    return <div style={{paddingTop: 10}}>\r\n      {entity ? <Grid container spacing={2}>\r\n        <Grid item container xs={3}>\r\n          {entity.persons.map(person => <Grid item xs={3}>\r\n            <Button onClick={() => {\r\n              State.showForm(Person.entityName, person);\r\n              State.update({afterForm: () => State.updateScenario(entity)})\r\n            }}>{person.name}</Button>\r\n          </Grid>)}\r\n        </Grid>\r\n        <Grid item container xs={9} spacing={2}>\r\n          {images.map((url, index) => <Grid item><Paper elevation={6}>\r\n            <img src={url} alt={url} style={imgStyle}\r\n                 onClick={() => this.setState({currentImage: index, viewerIsOpen: true})}/>\r\n          </Paper></Grid>)}\r\n        </Grid>\r\n      </Grid> : <div>\r\n        <EntitySelect name={Scenario.entityName}\r\n                      onChange={scenario => {\r\n                        State.updateScenario(scenario);\r\n                        this.fetchImages(scenario);\r\n                      }} value={null} editable/>\r\n      </div>}\r\n      <ModalGateway>\r\n        <Modal onClose={() => this.setState({viewerIsOpen: false, currentImage: null})}\r\n               open={viewerIsOpen}>\r\n          <Carousel currentIndex={currentImage} views={images.map(src => ({source: src}))}/>\r\n        </Modal>\r\n      </ModalGateway>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default withTranslation()(ScenarioView);","import Picture from \"../img/Picture\";\r\nimport Scenario from \"../model/realm/Scenario\";\r\n\r\nexport default class ScenarioService {\r\n  static fetchPicturesForScenario(scenario: Scenario, onData: number[] => void) {\r\n    fetch(`${Picture.entityName}/${Scenario.entityName}/${scenario.id}`, {\r\n      method: 'get',\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        response.json().then(onData);\r\n      } else {\r\n        alert(response.status);\r\n      }\r\n    });\r\n  }\r\n}","import Person from \"../model/creature/Person\";\r\nimport SpellSchool from \"../model/knowledge/SpellSchool\";\r\nimport Realm from \"../model/realm/Realm\";\r\nimport Currency from \"../model/world/Currency\";\r\nimport Language from \"../model/world/Language\";\r\nimport Nation from \"../model/world/Nation\";\r\nimport Race from \"../model/world/Race\";\r\nimport Religion from \"../model/world/Religion\";\r\nimport {State} from \"../state/State\";\r\nimport RemoteService from \"./RemoteService\";\r\n\r\nconst realmData = [Nation.entityName,\r\n                   Language.entityName,\r\n                   Religion.entityName,\r\n                   Currency.entityName,\r\n                   Race.entityName,\r\n                   SpellSchool.entityName,\r\n                   Person.entityName,];\r\nconst realmMapping = {\r\n  nation: 'nations',\r\n  worldLanguage: 'languages',\r\n  religion: 'religions',\r\n  currency: 'currencies',\r\n  race: 'races',\r\n  spellSchool: 'spellSchools',\r\n  person: 'persons',\r\n};\r\n\r\nexport default class RealmDataService extends RemoteService {\r\n  getRealmData = (currentRealm: Realm) => {\r\n    if (currentRealm) {\r\n      this.requestForPath(`realmData/${currentRealm.id}`,\r\n                          data => State.update({currentRealmData: data, currentRealm: currentRealm}));\r\n    }\r\n  };\r\n\r\n  static hasRealmData(entityName: string) {\r\n    return State.data.currentRealm && State.data.currentRealmData && realmData.includes(entityName);\r\n  }\r\n\r\n  static getRealmData(entityName: string) {\r\n    let currentRealmData = State.data.currentRealmData;\r\n    return currentRealmData[realmMapping[entityName]];\r\n  }\r\n}","import IconButton from \"@material-ui/core/IconButton\";\r\nimport {Add, Delete, Edit, OpenInNew} from \"@material-ui/icons\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport React, {Component} from \"react\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport RealmDataService from \"../client/RealmDataService\";\r\nimport {State} from \"../state/State\";\r\nimport AuthoritiesService from \"../user/AuthoritiesService\";\r\nimport {Collections} from \"../util/Collections\";\r\n\r\nclass Table extends Component {\r\n  options = {\r\n    filterType: 'textField',\r\n    selectableRows: \"single\",\r\n    selectableRowsOnClick: true,\r\n    disableToolbarSelect: true,\r\n    selectableRowsHeader: false,\r\n    customToolbarSelect: (selectedRows, displayData, setSelectedRows) => {\r\n      if (selectedRows.data.length > 0) {\r\n        const entityName = State.data.showTable;\r\n        const dataIndex    = selectedRows.data[0].index;\r\n        const selectedName = displayData[dataIndex].data[0];\r\n        const entity = Collections.findByName(State.data[entityName], {name: selectedName});\r\n\r\n        if (AuthoritiesService.hasAuthority(entityName)) {\r\n          return <React.Fragment>\r\n            <div>\r\n              <IconButton onClick={() => State.showForm(entityName, entity)}><Edit/></IconButton>\r\n              <IconButton\r\n                  onClick={() => State.services[entityName].delete(entity)}><Delete/></IconButton>\r\n            </div>\r\n          </React.Fragment>;\r\n        } else {\r\n          return <React.Fragment>\r\n            <IconButton onClick={() => State.showForm(entityName, entity)}><OpenInNew/></IconButton>\r\n          </React.Fragment>\r\n        }\r\n      }\r\n      return <React.Fragment/>\r\n    }\r\n  };\r\n\r\n  translateColumns = columns => {\r\n    const {t} = this.props;\r\n    columns.forEach(column => column.label = t(column.name));\r\n    return columns;\r\n  };\r\n\r\n  render() {\r\n    const {showTable}  = State.data;\r\n    const {t}          = this.props;\r\n    const hasAuthority = AuthoritiesService.hasAuthority(showTable);\r\n\r\n    const title = <div>\r\n      {t(showTable)}\r\n      {hasAuthority ? <IconButton onClick={() => State.update({\r\n                                                                showTable: null,\r\n                                                                showForm: showTable,\r\n                                                                entity: State.suppliers[showTable]()\r\n                                                              })}>\r\n        <Add/>\r\n      </IconButton> : <div/>}\r\n    </div>;\r\n\r\n    const data = RealmDataService.hasRealmData(showTable) ?\r\n        RealmDataService.getRealmData(showTable) :\r\n        State.data[showTable];\r\n    return <MUIDataTable title={title}\r\n                         options={this.options}\r\n                         columns={this.translateColumns(State.columns[showTable])}\r\n                         data={data}/>\r\n  }\r\n}\r\n\r\nexport default withTranslation()(Table);","import React, {Component} from \"react\";\r\nimport EntityEditor from \"../form/EntityEditor\";\r\nimport PictureUploadForm from \"../img/PictureUploadForm\";\r\nimport ScenarioView from \"../scenario/ScenarioView\";\r\nimport {State} from \"../state/State\";\r\nimport Table from \"./Table\";\r\n\r\nclass ContentPane extends Component {\r\n  render() {\r\n    const {showTable, showForm, showScenario, entity} = State.data;\r\n    let content                                       = <div/>;\r\n\r\n    if (showTable) {\r\n      content = <Table/>\r\n    } else if (showForm) {\r\n      if (showForm === 'picture') {\r\n        content = <PictureUploadForm value={entity.id ? entity : undefined}/>\r\n      } else {\r\n        content = <EntityEditor entity={entity} entityName={showForm}/>\r\n      }\r\n    } else if (showScenario) {\r\n      content = <ScenarioView/>\r\n    }\r\n\r\n    return content;\r\n  }\r\n\r\n}\r\n\r\nexport default ContentPane;","import DeterminantContainer from \"../rule/DeterminantContainer\";\r\nimport Price from \"../world/Price\";\r\nimport {Placement, placementJewelryName} from \"./Placement\";\r\nimport {CreateColumn, CreateFormField, RegisterEntity} from \"../Entity\";\r\nimport {FormFieldType} from \"../../form/FormFieldType\";\r\nimport {availabilityEntityName} from \"./Availability\";\r\nimport Resource from \"./Resource\";\r\n\r\nexport default class Jewelry extends DeterminantContainer {\r\n    static entityName: string = 'jewelry';\r\n\r\n    name: string;\r\n    description: string;\r\n    weight: number;\r\n    price: Price = new Price();\r\n    availability: string = 'COMMON';\r\n    primaryResource: Resource;\r\n    secondaryResource: Resource;\r\n    placement: string = Placement.NECK;\r\n\r\n    updateWith(entity: *): Jewelry {\r\n        super.updateWith(entity);\r\n        this.updateEntityProp(entity, 'price', () => new Price());\r\n        this.updateEntityProp(entity, 'primaryResource', () => new Resource());\r\n        this.updateEntityProp(entity, 'secondaryResource', () => new Resource());\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterEntity(Jewelry, [\r\n    CreateColumn('name', FormFieldType.TEXT),\r\n    CreateColumn('description', FormFieldType.TEXT_AREA),\r\n    CreateColumn('price', FormFieldType.PRICE),\r\n    CreateColumn('availability', FormFieldType.TEXT),\r\n], [\r\n    CreateFormField('name', FormFieldType.TEXT),\r\n    CreateFormField('description', FormFieldType.TEXT_AREA),\r\n    CreateFormField('weight', FormFieldType.FLOAT),\r\n    CreateFormField('price', FormFieldType.PRICE),\r\n    CreateFormField('availability', FormFieldType.ENUM_SELECT, availabilityEntityName),\r\n    CreateFormField('primaryResource', FormFieldType.ENTITY_SELECT, Resource.entityName),\r\n    CreateFormField('secondaryResource', FormFieldType.ENTITY_SELECT, Resource.entityName),\r\n    CreateFormField('placement', FormFieldType.ENUM_SELECT, placementJewelryName),\r\n]);","import Picture from \"../img/Picture\";\r\nimport Ammunition      from \"../model/crafting/Ammunition\";\r\nimport Jewelry from \"../model/crafting/Jewelry\";\r\nimport MeleeWeapon     from \"../model/crafting/MeleeWeapon\";\r\nimport RangedWeapon    from \"../model/crafting/RangedWeapon\";\r\nimport Animal          from \"../model/creature/Animal\";\r\nimport AnimalKind      from \"../model/creature/AnimalKind\";\r\nimport Person          from \"../model/creature/Person\";\r\nimport Realm from \"../model/realm/Realm\";\r\nimport Scenario from \"../model/realm/Scenario\";\r\nimport Place from \"../model/world/Place\";\r\nimport {State}         from \"./State\";\r\nimport Nation          from \"../model/world/Nation\";\r\nimport Currency        from \"../model/world/Currency\";\r\nimport Language        from \"../model/world/Language\";\r\nimport Race            from \"../model/world/Race\";\r\nimport Religion        from \"../model/world/Religion\";\r\nimport Character       from \"../model/creature/Character\";\r\nimport Skill           from \"../model/knowledge/Skill\";\r\nimport ProfessionClass from \"../model/professions/ProfessionClass\";\r\nimport Profession      from \"../model/professions/Profession\";\r\nimport SpellSchool from \"../model/knowledge/SpellSchool\";\r\nimport Item                  from \"../model/crafting/Item\";\r\nimport ArmorBlueprint        from \"../model/crafting/ArmorBlueprint\";\r\nimport Spell                 from \"../model/knowledge/Spell\";\r\nimport MeleeWeaponBlueprint  from \"../model/crafting/MeleeWeaponBlueprint\";\r\nimport RangedWeaponBlueprint from \"../model/crafting/RangedWeaponBlueprint\";\r\nimport ArmorPattern          from \"../model/crafting/ArmorPattern\";\r\nimport Resource              from \"../model/crafting/Resource\";\r\nimport EyeColor              from \"../model/creature/EyeColor\";\r\nimport HairColor             from \"../model/creature/HairColor\";\r\nimport PhysicalFeature       from \"../model/creature/PhysicalFeature\";\r\nimport Armor                 from \"../model/crafting/Armor\";\r\n\r\nconst refreshRegistry = {\r\n    [Nation.entityName]: [],\r\n    [Currency.entityName]: [Nation.entityName],\r\n    [Language.entityName]: [Nation.entityName],\r\n    [Race.entityName]: [],\r\n    [Religion.entityName]: [Nation.entityName],\r\n    [Place.entityName]: [Nation.entityName],\r\n    [Character.entityName]: [],\r\n    [EyeColor.entityName]: [],\r\n    [HairColor.entityName]: [],\r\n    [PhysicalFeature.entityName]: [],\r\n    [AnimalKind.entityName]: [],\r\n    [Animal.entityName]: [AnimalKind.entityName],\r\n    [Skill.entityName]: [],\r\n    [SpellSchool.entityName]: [],\r\n    [Spell.entityName]: [SpellSchool.entityName],\r\n    [ProfessionClass.entityName]: [],\r\n    [Profession.entityName]: [ProfessionClass.entityName],\r\n    [Item.entityName]: [],\r\n    [Armor.entityName]: [Resource.entityName, ArmorBlueprint.entityName, ArmorPattern.entityName],\r\n    [MeleeWeapon.entityName]: [Resource.entityName, MeleeWeaponBlueprint.entityName],\r\n    [RangedWeapon.entityName]: [Resource.entityName, RangedWeaponBlueprint.entityName],\r\n    [Ammunition.entityName]: [Resource.entityName, RangedWeaponBlueprint.entityName],\r\n    [ArmorBlueprint.entityName]: [],\r\n    [MeleeWeaponBlueprint.entityName]: [],\r\n    [RangedWeaponBlueprint.entityName]: [],\r\n    [ArmorPattern.entityName]: [],\r\n    [Jewelry.entityName]: [Resource.entityName],\r\n    [Resource.entityName]: [],\r\n    [Realm.entityName]: [],\r\n    [Scenario.entityName]: [Place.entityName, Person.entityName],\r\n    [Picture.entityName]: [],\r\n    [Person.entityName]: [Currency.entityName,\r\n                          Language.entityName,\r\n                          Race.entityName,\r\n                          Religion.entityName,\r\n                          PhysicalFeature.entityName,\r\n                          Animal.entityName,\r\n                          Skill.entityName,\r\n                          SpellSchool.entityName,\r\n                          Spell.entityName,\r\n                          Profession.entityName,\r\n                          Item.entityName,\r\n                          Armor.entityName,\r\n                          MeleeWeapon.entityName,\r\n                          RangedWeapon.entityName,\r\n                          Jewelry.entityName],\r\n};\r\n\r\nexport default class DataLoader {\r\n    static refreshData() {\r\n        Object.keys(State.services).forEach(serviceName => State.services[serviceName].loadData());\r\n    }\r\n\r\n    static refreshForEntity(entityName: string) {\r\n        State.services[entityName].loadData();\r\n        refreshRegistry[entityName].forEach(supportedEntity => this.refreshForEntity(supportedEntity));\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Button, Menu} from \"@material-ui/core\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport DataLoader from \"../state/DataLoader\";\r\nimport {State} from \"../state/State\";\r\n\r\nclass MenuComponent extends Component {\r\n    state = {\r\n        anchorEl: null\r\n    };\r\n\r\n    handleClick = event => {\r\n        this.setState({anchorEl: event.currentTarget})\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({anchorEl: null})\r\n    };\r\n\r\n    handleItemClick = entityName => () => {\r\n        this.handleClose();\r\n        DataLoader.refreshForEntity(entityName);\r\n        State.showTable(entityName);\r\n    };\r\n\r\n    render() {\r\n        const {t, name, entities} = this.props;\r\n        return <div>\r\n            <Button id={name}\r\n                    onClick={this.handleClick}>\r\n                {t(name)}\r\n            </Button>\r\n            <Menu id={name}\r\n                  anchorEl={this.state.anchorEl}\r\n                  open={this.state.anchorEl !== null}\r\n                  onClose={this.handleClose}>\r\n                {\r\n                    entities.map(entityName =>\r\n                        <MenuItem key={entityName} onClick={this.handleItemClick(entityName)}>\r\n                            {t(entityName)}\r\n                        </MenuItem>)\r\n                }\r\n            </Menu>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withTranslation()(MenuComponent);","import IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport React, {Component} from \"react\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport Picture from \"../img/Picture\";\r\nimport {State} from \"../state/State\";\r\nimport AuthoritiesService from \"../user/AuthoritiesService\";\r\nimport User from \"../user/User\";\r\n\r\nclass ToolsMenu extends Component {\r\n  state = {\r\n    anchorEl: null\r\n  };\r\n\r\n  handleClick = event => {\r\n    this.setState({anchorEl: event.currentTarget})\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({anchorEl: null})\r\n  };\r\n\r\n  showPictureForm = () => {\r\n    this.handleClose();\r\n    State.showTable(Picture.entityName);\r\n  };\r\n\r\n  showScenarioView = () => {\r\n    this.handleClose();\r\n    State.updateScenario(null);\r\n  };\r\n\r\n  showUsersTable = () => {\r\n    this.handleClose();\r\n    State.showTable(User.entityName);\r\n  };\r\n\r\n  render() {\r\n    const {t}     = this.props;\r\n    const isAdmin = AuthoritiesService.hasAuthority('admin');\r\n\r\n    return <div>\r\n      <IconButton aria-label={'More'}\r\n                  aria-owns={this.state.anchorEl !== null ? 'app-tools-menu' : undefined}\r\n                  aria-haspopup={'true'}\r\n                  onClick={this.handleClick}>\r\n        <MoreVertIcon/>\r\n      </IconButton>\r\n\r\n      <Menu id={'app-tools-menu'}\r\n            anchorEl={this.state.anchorEl}\r\n            open={this.state.anchorEl !== null}\r\n            onClose={this.handleClose}>\r\n        {isAdmin && <MenuItem onClick={this.showUsersTable}>{t('user')}</MenuItem>}\r\n        <MenuItem onClick={this.showPictureForm}>{t('picture')}</MenuItem>\r\n        <MenuItem onClick={this.showScenarioView}>{t('scenario')}</MenuItem>\r\n      </Menu>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default withTranslation()(ToolsMenu);","import {AppBar, CircularProgress, Toolbar} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport React, {Component} from \"react\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport Select from \"react-select\";\r\nimport Flag from 'react-world-flags';\r\nimport RealmDataService from \"../client/RealmDataService\";\r\nimport Ammunition from \"../model/crafting/Ammunition\";\r\nimport Armor from \"../model/crafting/Armor\";\r\nimport ArmorBlueprint from \"../model/crafting/ArmorBlueprint\";\r\nimport ArmorPattern from \"../model/crafting/ArmorPattern\";\r\nimport Item from \"../model/crafting/Item\";\r\nimport Jewelry from \"../model/crafting/Jewelry\";\r\nimport MeleeWeapon from \"../model/crafting/MeleeWeapon\";\r\nimport MeleeWeaponBlueprint from \"../model/crafting/MeleeWeaponBlueprint\";\r\nimport RangedWeapon from \"../model/crafting/RangedWeapon\";\r\nimport RangedWeaponBlueprint from \"../model/crafting/RangedWeaponBlueprint\";\r\nimport Resource from \"../model/crafting/Resource\";\r\nimport Animal from \"../model/creature/Animal\";\r\nimport AnimalKind from \"../model/creature/AnimalKind\";\r\nimport Character from \"../model/creature/Character\";\r\nimport EyeColor from \"../model/creature/EyeColor\";\r\nimport HairColor from \"../model/creature/HairColor\";\r\nimport Person from \"../model/creature/Person\";\r\nimport PhysicalFeature from \"../model/creature/PhysicalFeature\";\r\nimport Skill from \"../model/knowledge/Skill\";\r\nimport Spell from \"../model/knowledge/Spell\";\r\nimport SpellSchool from \"../model/knowledge/SpellSchool\";\r\nimport Profession from \"../model/professions/Profession\";\r\nimport ProfessionClass from \"../model/professions/ProfessionClass\";\r\nimport Realm from \"../model/realm/Realm\";\r\nimport Scenario from \"../model/realm/Scenario\";\r\nimport Currency from \"../model/world/Currency\";\r\nimport Language from \"../model/world/Language\";\r\nimport Nation from \"../model/world/Nation\";\r\nimport Place from \"../model/world/Place\";\r\nimport Race from \"../model/world/Race\";\r\nimport Religion from \"../model/world/Religion\";\r\nimport {State} from \"../state/State\";\r\nimport AuthoritiesService from \"../user/AuthoritiesService\";\r\nimport MenuComponent from \"./MenuComponent\";\r\nimport ToolsMenu from \"./ToolsMenu\";\r\n\r\nconst styles           = theme => ({\r\n  languageIcon: {\r\n    marginLeft: 'auto', display: 'flex',\r\n  }, realmSelect: {\r\n    width: 200,\r\n  }\r\n});\r\nconst realmDataService = new RealmDataService();\r\n\r\nclass TopMenu extends Component {\r\n\r\n  showTable = entityName => () => {\r\n    State.update({showTable: entityName})\r\n  };\r\n\r\n  render() {\r\n    const {i18n, classes} = this.props;\r\n    const isGameMaster    = AuthoritiesService.hasAuthority('gamemaster');\r\n\r\n    const menuItems = isGameMaster ?\r\n        [<MenuComponent name={'world'}\r\n                        entities={[Nation.entityName,\r\n                                   Currency.entityName,\r\n                                   Language.entityName,\r\n                                   Race.entityName,\r\n                                   Religion.entityName,\r\n                                   Place.entityName,\r\n                                   Realm.entityName,\r\n                                   Scenario.entityName]}/>,\r\n         <MenuComponent name={'knowledge'}\r\n                        entities={[Skill.entityName,\r\n                                   ProfessionClass.entityName,\r\n                                   Profession.entityName,\r\n                                   SpellSchool.entityName,\r\n                                   Spell.entityName,]}/>,\r\n         <MenuComponent name={'crafting'}\r\n                        entities={[Item.entityName,\r\n                                   Armor.entityName,\r\n                                   MeleeWeapon.entityName,\r\n                                   RangedWeapon.entityName,\r\n                                   Ammunition.entityName,\r\n                                   Jewelry.entityName,]}/>,\r\n         <MenuComponent name={'types'}\r\n                        entities={[ArmorBlueprint.entityName,\r\n                                   MeleeWeaponBlueprint.entityName,\r\n                                   RangedWeaponBlueprint.entityName,\r\n                                   ArmorPattern.entityName,\r\n                                   Resource.entityName,]}/>,\r\n         < MenuComponent name={'creature'}\r\n                         entities={[...(State.data.currentRealm ? [Person.entityName] : []),\r\n                                    ...[Character.entityName,\r\n                                        EyeColor.entityName,\r\n                                        HairColor.entityName,\r\n                                        PhysicalFeature.entityName,\r\n                                        Animal.entityName,\r\n                                        AnimalKind.entityName,]]}/>] :\r\n        <div/>;\r\n\r\n    return <AppBar\r\n        position={\"relative\"}>\r\n      <Toolbar>\r\n        <ToolsMenu/>\r\n        {menuItems}\r\n        <div className={classes.languageIcon}>\r\n          {State.data.fetching.size > 0 && <IconButton><CircularProgress\r\n              color={\"secondary\"}/></IconButton>}\r\n          <Select className={classes.realmSelect}\r\n                  options={State.data.realm}\r\n                  getOptionLabel={option => <div>{option.name}</div>}\r\n                  getOptionValue={option => option.id}\r\n                  filterOption={(option, input) => option.data.name.startsWith(input)}\r\n                  value={State.data.currentRealm}\r\n                  onChange={realm => realmDataService.getRealmData(realm)}\r\n          />\r\n          <IconButton onClick={() => i18n.changeLanguage('en')}><Flag code={'gb'}\r\n                                                                      height={16}/></IconButton>\r\n          <IconButton onClick={() => i18n.changeLanguage('pl')}><Flag code={'pl'}\r\n                                                                      height={16}/></IconButton>\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>;\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(withTranslation()(TopMenu));\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, {Component} from 'react';\r\nimport {withTranslation} from \"react-i18next\";\r\nimport FormFieldData from \"../form/FormFieldData\";\r\nimport {CreateFormField} from \"../form/FormFieldGenerator\";\r\nimport {FormFieldType} from \"../form/FormFieldType\";\r\nimport DataLoader from \"../state/DataLoader\";\r\nimport {State} from \"../state/State\";\r\nimport AuthoritiesService from \"./AuthoritiesService\";\r\nimport googleLogo from \"./google-logo.png\";\r\n\r\nconst loginFieldData = new FormFieldData();\r\nloginFieldData.name  = 'username';\r\nloginFieldData.type  = FormFieldType.TEXT;\r\n\r\nconst passwordFieldData = new FormFieldData();\r\npasswordFieldData.name  = 'password';\r\npasswordFieldData.type  = FormFieldType.PASSWORD;\r\n\r\nclass LoginComponent extends Component {\r\n  login = () => {\r\n    const user = State.data.entity;\r\n    if (user && user.username && user.password) {\r\n      fetch('login', {\r\n        method: 'post',\r\n        mode: 'cors',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify(user)\r\n      })\r\n      .then(res => res.json())\r\n      .then(authData => {\r\n        if (authData) {\r\n          State.updateUser({...authData, token: true});\r\n          AuthoritiesService.updateAdminAuthoritiesIfNeeded();\r\n          DataLoader.refreshData();\r\n        }\r\n      })\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {t}        = this.props;\r\n    const loginField = new FormFieldData();\r\n    loginField.name  = 'username';\r\n\r\n    return <Grid container alignItems={\"center\"} spacing={2} xs={12} direction={\"column\"}>\r\n      <Grid item xs={6}>\r\n        <Typography>WFRP Helper</Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        {CreateFormField(loginFieldData, t, true)}\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        {CreateFormField(passwordFieldData, t, true)}\r\n      </Grid>\r\n      <Grid item xs={8}>\r\n        <Button onClick={this.login}>{t('login')}</Button>\r\n        <Button>{t('signup')}</Button>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Button>\r\n          <img src={googleLogo} alt={t('login with Google')} style={{width: 50, height: 50}}/>\r\n          <a href={'/oauth2/authorization/google?redirect_uri=http://localhost:8080/index.html'}\r\n             style={{fontSize: 18}}>{t('login with Google')}</a>\r\n{/*\r\n          <a href={'https://wfrp-helper.ey.r.appspot.com/oauth2/authorize/google?redirect_uri=http://localhost:3000/oauth2/redirect'}\r\n             style={{fontSize: 18}}>{t('login with Google')}</a>\r\n          <a href={'http://localhost:1081/oauth2/authorize/google?redirect_uri=http://localhost:3000/oauth2/redirect'}\r\n             style={{fontSize: 18}}>{t('login with Google')}</a>\r\n*/}\r\n        </Button>\r\n      </Grid>\r\n    </Grid>;\r\n  }\r\n}\r\n\r\nexport default withTranslation()(LoginComponent);","import React, {Component} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {State} from \"../state/State\";\r\n\r\nclass OAuth2RedirectComponent extends Component {\r\n  render() {\r\n    const token = new RegExp('[\\\\?&]token=([^&#]*)').exec(this.props.location.search)[1];\r\n    State.updateUser({token: token});\r\n\r\n    return <Redirect to={\"/\"}/>;\r\n  }\r\n}\r\n\r\nexport default OAuth2RedirectComponent;","import Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, {Component} from 'react';\r\nimport {withTranslation} from \"react-i18next\";\r\nimport AuthoritiesService from \"./AuthoritiesService\";\r\n\r\nconst authoritiesService = new AuthoritiesService();\r\n\r\nclass PasswordChangeComponent extends Component {\r\n  state = {\r\n    password: null, repeat: null\r\n  };\r\n\r\n  onChange = prop => event => {\r\n    this.setState({[prop]: event.target.value})\r\n  };\r\n\r\n  savePassword = () => {\r\n    const {password, repeat} = this.state;\r\n    if (password === repeat) {\r\n      authoritiesService.updatePassword(password);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {password, repeat} = this.state;\r\n    const {t}                = this.props;\r\n\r\n    return <div>\r\n      <TextField key={'password'}\r\n                 label={t('password')}\r\n                 value={password || ''}\r\n                 type={'password'}\r\n                 onChange={this.onChange('password')}/>\r\n      <TextField key={'passwordRepeat'}\r\n                 label={t('passwordRepeat')}\r\n                 value={repeat || ''}\r\n                 type={'password'}\r\n                 onChange={this.onChange('repeat')}/>\r\n      <Button onClick={this.savePassword}>{t('save')}</Button>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default withTranslation()(PasswordChangeComponent);","import {grey, orange} from \"@material-ui/core/colors\";\r\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core/styles\";\r\nimport React, {Component} from 'react';\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport ContentPane from \"./content/ContentPane\";\r\nimport TopMenu from \"./menu/TopMenu\";\r\nimport DataLoader from \"./state/DataLoader\";\r\nimport {State} from \"./state/State\";\r\nimport AuthoritiesService from \"./user/AuthoritiesService\";\r\nimport LoginComponent from \"./user/LoginComponent\";\r\nimport OAuth2RedirectComponent from \"./user/OAuth2RedirectComponent\";\r\nimport PasswordChangeComponent from \"./user/PasswordChangeComponent\";\r\nimport User from \"./user/User\";\r\n\r\nconst theme = createMuiTheme({\r\n                               palette: {primary: grey, secondary: orange},\r\n                             });\r\nconst authoritiesService = new AuthoritiesService();\r\n\r\nexport default class App extends Component {\r\n\r\n  constructor(props: P, context: any) {\r\n    super(props, context);\r\n    State.onUpdate = data => {\r\n      this.setState({data: data})\r\n    };\r\n    State.data.entity = new User();\r\n  }\r\n\r\n  render() {\r\n    const {token, oneTimePassword} = State.data.currentUser;\r\n\r\n    if (!token) {\r\n      return <MuiThemeProvider theme={theme}>\r\n        <Switch>\r\n          {/* For static spring build */}\r\n          <Route exact path={\"/index.html\"} component={LoginComponent}/>\r\n          <Route exact path={\"/\"} component={LoginComponent}/>\r\n          <Route path={\"/oauth2/redirect\"} component={OAuth2RedirectComponent}/>\r\n        </Switch>\r\n      </MuiThemeProvider>\r\n    }\r\n\r\n    if (oneTimePassword) {\r\n      return <MuiThemeProvider theme={theme}>\r\n        <PasswordChangeComponent/>\r\n      </MuiThemeProvider>\r\n    }\r\n\r\n    if (!State.data.currentUser.authorities) {\r\n      authoritiesService.refreshAuthorities();\r\n    }\r\n\r\n    if (!State.data.initialized) {\r\n      DataLoader.refreshData();\r\n      State.data.initialized = true;\r\n    }\r\n\r\n    return (<MuiThemeProvider theme={theme}>\r\n      <TopMenu/>\r\n      <ContentPane/>\r\n    </MuiThemeProvider>);\r\n  }\r\n}\r\n"],"sourceRoot":""}